=====> How can I compile knotify to use arts to get sound notifications?

Currently, knotify.cpp contains a hack to support talking to the soundserver
when compiled with HAVE_ARTS defined. It seriously lacks makefile integration,
and other cleanups, but I compiled it using

make CXX="g++ -DHAVE_ARTS -I../../kdemultimedia/arts/mcop -I../../kdemultimedia/arts/qtmcop -I../../kdemultimedia/arts/examples ../../kdemultimedia/arts/mcop/libmcop.la ../../kdemultimedia/arts/qtmcop/libqtmcop.la ../../kdemultimedia/arts/examples/soundserver.o"

which is - well - a hack (which may not work due to various reasons).

Basically, what it needs to work (and what the make line above should do), is

- it must be linked to libmcop (to support talking MCOP)
- it must be linked to libqtmcop (to support the combination of MCOP+Qt)
- it must be linked to an version of soundserver.idl (run it through mcopidl)
- it should at least find the includes from
   * kdemultimedia/arts/mcop
   * kdemultimedia/arts/qtmcop
   * those from soundserver.idl, here as kdemultimedia/arts/examples
- HAVE_ARTS must be defined (to enable the alternate code in knotify to be
  compiled)

=====>  How do I use it if it compiled

Start artsd:

$ artsd &

Start knotify:

$ knotify

Call (from another terminal window)

$ knotifyclient Desktop5

Note that you really should look at knotify.cpp to see if the wav file
exists. Artsd currently crashes on non-existing wav files (shame on me).

=====> The implementation:

The implementation is more-or-less straigtforward. MCOP needs (like DCOP)
a dispatcher to work properly. However, if that should run inside Qt
applications, it needs a special QIOManager object. So

  QIOManager qiomanager;				// defined in qiomanager.h
  Dispatcher dispatcher(&qiomanager);	// defined in dispatcher.h

initializes MCOP. Then using

  SimpleSoundServer *server				// defined in soundserver.h (from idl)
    = SimpleSoundServer::_fromString("global:Arts_SimpleSoundServer");

connects to the object (null pointer when that fails). This will open a
unix domain socket connection to the arts server (or tcp connection,
depending on which one works). Finally, you can use

  server->play(<filename>)

to play files. See soundserver.idl for what operations you can then perform
on the SimpleSoundServer interface.

The global object references ("global:Arts_SimpleSoundServer") are stored
in the /tmp/mcop-<username>/<global-reference-name> directory - it might be
a good idea to implement a network transparent naming service or something
like that.


Stefan Westerfeld <stefan@space.twc.de>
