#! /usr/bin/env python
#generated from kde3support/Makefile.am by am2bksys.py
Import('env')

#env.subdirs("kdecore kdeui kio kparts kmdi")

kde3support_sources = """
kdecore/k3shortcut.cpp
kdecore/k3keysequence.cpp
kdecore/k3shortcutmenu.cpp
kdecore/k3urldrag.cpp
kdecore/k3multipledrag.cpp
kdeui/k3dockwidget_private.cpp
kdeui/k3textedit.cpp
kdeui/k3dockwidget.cpp
kdeui/k3colordrag.cpp
kdeui/k3popupmenu.cpp
kio/k3bookmarkdrag.cpp
kmdi/k3mdidockcontainer.cpp
kmdi/k3mdichildfrm.cpp
kmdi/k3mdimainfrm.cpp
kmdi/k3mdidocumentviewtabwidget.cpp
kmdi/k3mditaskbar.cpp
kmdi/k3mdichildarea.cpp
kmdi/k3mdiguiclient.cpp
kmdi/k3mdichildview.cpp
kmdi/k3mditoolviewaccessor.cpp
kmdi/k3mdichildfrmcaption.cpp
kmdi/k3mdifocuslist.cpp
kparts/dockmainwindow3.cpp
"""
inst_headers = """
kdecore/k3keysequence.h
kdecore/k3multipledrag.h
kdecore/k3shortcut.h
kdecore/k3shortcutmenu.h
kdecore/k3urldrag.h
kdeui/k3colordrag.h
kdeui/k3dockwidget.h
kdeui/k3popupmenu.h 
kdeui/k3textedit.h
kio/k3bookmarkdrag.h
kmdi/k3mdichildarea.h
kmdi/k3mdichildfrm.h
kmdi/k3mdichildfrmcaption.h
kmdi/k3mdichildview.h
kmdi/k3mdidefines.h
kmdi/k3mdiiterator.h
kmdi/k3mdilistiterator.h
kmdi/k3mdimainfrm.h
kmdi/k3mdinulliterator.h
kmdi/k3mditaskbar.h
kmdi/k3mditoolviewaccessor.h
kparts/dockmainwindow3.h
"""

obj = env.kdeobj('shlib')
obj.target = 'kde3support'
obj.source = kde3support_sources
#obj.linkflags = '-Wl,--whole-archive build/kde3support/kmdi/libk3mdi.a build/kde3support/kparts/libk3parts.a build/kde3support/kio/libk3io.a build/kde3support/kdeui/libkde3ui.a build/kde3support/kdecore/libkde3core.a -Wl,--no-whole-archive'
#obj.libpaths = 'kmdi kparts kio kdeui kdecore '
#obj.libs = 'k3mdi k3parts k3io kde3ui kde3core '
obj.includes = 'kdecore kdeui kio kmdi kparts #/kio/bookmarks #/kde3support/kdecore #/kde3support/kmdi/res #/kde3support/kdeui #/kde3support/kparts #/kutils #/kde3support #/kde3supprt/kmdi'
obj.uselib = 'QT QTCORE QTGUI QTXML QT3SUPPORT KDE4 '
obj.libs = 'kdecore DCOP kdeui kparts kio kdefx kutils '
if not env['WINDOWS']:
	obj.libs += ' kdesu'
obj.libpaths = '../kdecore ../kdeui ../kparts ../kio ../dcop ../kdefx ../kdesu ../kutils '
obj.ccflags += ' -DMAKE_KDE3SUPPORT_LIB -DKDE3_SUPPORT ' # todo: will be generated automatically
obj.execute()

#env.CreateFile('dummy.cpp', Value(''))

#Do we need this?  For now ;(
#env.Depends('libkde3support.so.6.0.2', 'kdecore')

env.bksys_insttype( 'KDEINCLUDE', '', inst_headers )


"""Unhandled Defines 
SUBDIRS = kdecore kdeui kio kparts kmdi kunittest . tests
"""

"""Unhandled Targets 
dummy.cpp = ###echo >dummy.cpp
"""
