#! /usr/bin/env python

# TODO: import headers and additional target

Import('env')

env.subdirs('kpasswdserver tests pics') 

kiocore_sources = """
kio/authinfo.cpp
kio/kprotocolmanager.cpp
kio/slave.cpp 
kio/slaveinterface.cpp
kio/sessiondata.cpp 
kio/scheduler.cpp
kio/connection.cpp
kio/job.cpp 
kio/global.cpp
kio/kimageio.cpp
kio/slaveconfig.cpp 
kio/kurlpixmapprovider.cpp
kio/netaccess.cpp 
kio/paste.cpp 
kio/pastedialog.cpp
kio/kmimemagic.cpp
kio/tcpslavebase.cpp 
kio/slavebase.cpp 
kio/passdlg.cpp
kio/forwardingslavebase.cpp
kio/progressbase.cpp 
kio/defaultprogress.cpp
kio/statusbarprogress.cpp
kio/kdirnotify.cpp 
kio/kdirnotify.skel 
kio/kdirnotify_stub.cpp
misc/uiserver.stub 
kio/observer.cpp 
kio/observer.skel 
kio/observer.stub
kio/kemailsettings.cpp
kio/kprotocolinfo.cpp
kio/renamedlg.cpp 
kio/skipdlg.cpp 
kio/kremoteencoding.cpp
kio/kmimetypechooser.cpp
"""


env.Depends('kio/observer.cpp', 'kio/observer_stub.cpp')
env.Depends('kio/observer.cpp', 'misc/uiserver_stub.cpp')
env.Depends('misc/uiserver_stub.cpp', 'misc/uiserver_stub.h')
env.Depends('kio/observer_stub.cpp', 'kio/observer_stub.h')

env.Moc('kio/jobclasses.h')
env.Moc('kio/kdirlister_p.h')
env.Moc('kio/kdirwatch_p.h')
env.Moc('kio/kmimetyperesolver.h')
env.Moc('kio/kservice_p.h')

# TODO: kio/kacl.cpp is bound to USE_POSIX_ACL

ksycoca_sources = """
kio/kdirwatch.cpp 
kio/kacl.cpp
kio/kfileshare.cpp 
kio/ksambashare.cpp 
kio/knfsshare.cpp
kio/ktrader.cpp 
kio/ktraderparse.cpp 
kio/ktraderparsetree.cpp
kio/kservicetypefactory.cpp 
kio/kservicetype.cpp
kio/kmimetype.cpp 
kio/kservicegroup.cpp
kio/kservice.cpp 
kio/kservicefactory.cpp
kio/kuserprofile.cpp 
kio/kservicegroupfactory.cpp
kio/kurifilter.cpp
kio/kshellcompletion.cpp 
kio/kurlcompletion.cpp
kio/krun.cpp
kio/kfileitem.cpp 
kio/kdirlister.cpp 
kio/yacc.c 
kio/lex.c
kio/chmodjob.cpp 
kio/kscan.cpp 
kio/kar.cpp 
kio/ktar.cpp 
kio/kzip.cpp 
kio/previewjob.cpp 
kio/metainfojob.cpp 
kio/davjob.cpp
kio/kdatatool.cpp 
kio/karchive.cpp 
kio/kfilefilter.cpp
kio/kfilemetainfo.cpp 
kio/kdcopservicestarter.cpp
kio/dataslave.cpp 
kio/dataprotocol.cpp
"""
"""kio/kimageio.cpp
"""

if not env['WINDOWS']:
	ksycoca_sources += """
kio/kautomount.cpp 
"""

kio_inst_headers = """
kio/kservicetype.h
kio/kmimetype.h
kio/kmimemagic.h
kio/kservice.h
kio/krun.h
kio/kdirwatch.h
kio/kautomount.h
kio/kuserprofile.h
kio/kar.h
kio/ktar.h
kio/kzip.h
kio/ktrader.h
kio/kurifilter.h
kio/kurlcompletion.h
kio/kshellcompletion.h
kio/kfileitem.h
kio/kfileshare.h
kio/ksambashare.h
kio/knfsshare.h
kio/kdirlister.h
kio/kservicegroup.h
kio/kdirnotify.h
kio/kdirnotify_stub.h
kio/kurlpixmapprovider.h
kio/kprotocolinfo.h
kio/kprotocolmanager.h
kio/kemailsettings.h
kio/kscan.h
kio/kdatatool.h
kio/karchive.h
kio/kfilefilter.h
kio/kfilemetainfo.h
kio/renamedlgplugin.h
kio/kmimetyperesolver.h
kio/kdcopservicestarter.h
kio/kremoteencoding.h
kio/kmimetypechooser.h
kio/kacl.h
"""

kio_kio_inst_headers = """
kio/connection.h
kio/slaveinterface.h
kio/slave.h
kio/slaveconfig.h
kio/sessiondata.h
kio/global.h
kio/passdlg.h
kio/netaccess.h
kio/job.h
kio/scheduler.h
kio/jobclasses.h
kio/paste.h
kio/slavebase.h
kio/progressbase.h
kio/defaultprogress.h
kio/statusbarprogress.h
kio/tcpslavebase.h
kio/forwardingslavebase.h
kio/observer.h
kio/chmodjob.h
kio/authinfo.h
kio/ioslave_defaults.h
kio/http_slave_defaults.h
kio/previewjob.h
kio/thumbcreator.h
kio/metainfojob.h
kio/davjob.h
kio/renamedlg.h
kio/skipdlg.h
kio/kimageio.h
"""
# TODO: this is located in build dir 
# kio\uiserver_stub.h

kssl_sources = """
kssl/kssl.cc
kssl/ksslcertificatehome.cc
kssl/ksslsettings.cc
kssl/ksslcertificate.cc
kssl/ksslconnectioninfo.cc
kssl/ksslcertificatefactory.cc
kssl/ksslcertificatecache.cc
kssl/ksslpeerinfo.cc
kssl/ksslinfodlg.cc
kssl/ksslcertdlg.cc
kssl/ksslutils.cc
kssl/kopenssl.cc
kssl/ksslpkcs12.cc
kssl/ksslcertchain.cc
kssl/ksslkeygen.cc
kssl/ksslx509v3.cc
kssl/ksslsigners.cc
kssl/ksslpkcs7.cc
kssl/ksslpemcallback.cc
kssl/ksslx509map.cc
kssl/ksslsession.cc
kssl/keygenwizard.ui3
kssl/keygenwizard2.ui3
kssl/ksmimecrypto.cc
kssl/ksslcsessioncache.cc
"""
kssl_inst_headers = """
kssl/kssl.h 
kssl/ksslcertificatehome.h
kssl/ksslsettings.h 
kssl/ksslcertificate.h 
kssl/ksslconnectioninfo.h
kssl/ksslcertificatefactory.h
kssl/ksslcertificatecache.h
kssl/ksslpeerinfo.h 
kssl/ksslinfodlg.h 
kssl/ksslcertdlg.h 
kssl/ksslutils.h 
kssl/kopenssl.h 
kssl/ksslall.h	 	
kssl/ksslpkcs12.h
kssl/ksslcertchain.h
kssl/ksslkeygen.h
kssl/ksslx509v3.h
kssl/ksslsigners.h
kssl/ksslpkcs7.h
kssl/ksslpemcallback.h	
kssl/ksslsession.h
kssl/ksslx509map.h
kssl/ksmimecrypto.h
"""

kfile_sources = """
kfile/kfilefiltercombo.cpp 
kfile/kfileview.cpp 
kfile/kfileiconview.cpp
kfile/krecentdocument.cpp 
kfile/kfiledialog.cpp 
kfile/kdiroperator.cpp
kfile/kfiledetailview.cpp 
kfile/kcombiview.cpp 
kfile/kurlrequester.cpp
kfile/kfilepreview.cpp 
kfile/kurlcombobox.cpp 
kfile/kurlrequesterdlg.cpp
kfile/kopenwith.cpp 
kfile/kicondialog.cpp 
kfile/kdirsize.cpp
kfile/krecentdirs.cpp 
kfile/kdiskfreesp.cpp 
kfile/kimagefilepreview.cpp 
kfile/kfilesharedlg.cpp
kfile/kurlbar.cpp 
kfile/kmetaprops.cpp 
kfile/kpreviewprops.cpp
kfile/kfiletreeview.cpp 
kfile/kfiletreeviewitem.cpp 
kfile/kfiletreebranch.cpp
kfile/kdirselectdialog.cpp 
kfile/kfilebookmarkhandler.cpp
kfile/kfilemetainfowidget.cpp 
kfile/kcustommenueditor.cpp 
kfile/knotifydialog.cpp
kfile/knotifywidgetbase.ui3 
kfile/kfilespeedbar.cpp 
kfile/kpreviewwidgetbase.cpp
kfile/kfilemetapreview.cpp 
kfile/kpropertiesdesktopbase.ui3
kfile/kpropertiesdesktopadvbase.ui
kfile/kpropertiesmimetypebase.ui3
kfile/kencodingfiledialog.cpp
kfile/kpropertiesdialog.cpp 
"""
kfile_inst_headers = """
kfile/kfiledialog.h 
kfile/kencodingfiledialog.h
kfile/kdiroperator.h 
kfile/kfileview.h 
kfile/kfilefiltercombo.h 
kfile/kfiledetailview.h 
kfile/kcombiview.h 
kfile/kdiskfreesp.h 
kfile/kfileiconview.h 
kfile/krecentdocument.h 
kfile/kurlrequester.h 
kfile/kfilepreview.h 
kfile/kfile.h 
kfile/kurlcombobox.h 
kfile/kurlrequesterdlg.h 
kfile/kopenwith.h 
kfile/kpropsdlg.h 
kfile/kicondialog.h 
kfile/kdirsize.h 
kfile/kpreviewwidgetbase.h 
kfile/kimagefilepreview.h 
kfile/kfilesharedlg.h 
kfile/kfiletreeview.h 
kfile/kfiletreeviewitem.h 
kfile/kfiletreebranch.h 
kfile/kdirselectdialog.h 
kfile/kurlbar.h 
kfile/kpropertiesdialog.h 
kfile/knotifydialog.h 
kfile/kcustommenueditor.h 
kfile/knotifywidgetbase.h
"""

env.Moc('kfile/kopenwith_p.h')

bookmarks_sources = """
bookmarks/kbookmark.cc 
bookmarks/kbookmarkbar.cc 
bookmarks/kbookmarkimporter.cc 
bookmarks/kbookmarkmanager.cc 
bookmarks/kbookmarkmenu.cc 
bookmarks/kbookmarkimporter_crash.cc 
bookmarks/kbookmarkimporter_opera.cc 
bookmarks/kbookmarkimporter_ie.cc 
bookmarks/kbookmarkimporter_ns.cc 
bookmarks/kbookmarkimporter_kde1.cc 
bookmarks/kbookmarkdombuilder.cc 
bookmarks/kbookmarkmanager.skel 
bookmarks/kbookmarknotifier.skel
"""

# not used currently 
bookmarks_inst_headers = """
bookmarks/kbookmark.h 
bookmarks/kbookmarkbar.h 
bookmarks/kbookmarkexporter.h 
bookmarks/kbookmarkimporter.h 
bookmarks/kbookmarkmanager.h 
bookmarks/kbookmarkmenu.h 
bookmarks/kbookmarknotifier.h 
bookmarks/kbookmarkimporter_crash.h 
bookmarks/kbookmarkimporter_opera.h 
bookmarks/kbookmarkimporter_ie.h 
bookmarks/kbookmarkimporter_ns.h 
bookmarks/kbookmarkimporter_kde1.h 
bookmarks/kbookmarkdombuilder.h 
"""

env.Moc("bookmarks/kbookmarkmenu_p.h")

obj = env.kdeobj('shlib', env)
obj.target   = 'kio'
obj.iskdelib = 1
obj.vnum     = '6.0.2'
obj.source   = kiocore_sources + ksycoca_sources + kssl_sources + kfile_sources + bookmarks_sources
obj.includes = '. .. kio kssl ../interfaces kfile bookmarks misc ../kdecore/network '

# kssl 
obj.includes += ' ../kwallet/client'
obj.libpaths += ' ../kwallet/client '
#kfile
obj.includes += ' ../libltdl '
obj.libpaths += ' ../libltdl '

obj.libpaths += ' ../dcop ../kwallet/client ../kdesu '

obj.libs     += ' DCOP kwalletclient '
if env['WINDOWS']:
	obj.libs     += 'ltdlc '
else:
	obj.libs     += 'kdesu '

obj.uselib    += ' QT QTCORE QTGUI QTXML QT3SUPPORT KDE4 KDECORE KDEUI KDEFX '
# additonal external libs
obj.uselib += ' Z LIBART OPENSSL FAM VOLMGT'

#$(LIBZ) $(LIBFAM) $(LIBVOLMGT)

obj.execute()
# For now ;(
if env['MAC']:
	env.Depends('libkio.6.0.2.dylib', '../kdesu/libkdesu.dylib')
	env.Depends('libkio.6.0.2.dylib', '../kwallet/client/libkwalletclient.dylib')
elif not env['WINDOWS']:
	env.Depends('libkio.so.6.0.2', '../kdesu/libkdesu.so')
	env.Depends('libkio.so.6.0.2', '../kwallet/client/libkwalletclient.so')
	env.Depends('libkio.so.6.0.2', '../kdeui/libkdeui.so')

servicetypes = [ 'application.desktop', 'kurifilterplugin.desktop', 'kscan.desktop', 
'kdatatool.desktop', 'kfileplugin.desktop', 'kcmodule.desktop', 'renamedlgplugin.desktop' ]


env.bksys_insttype('KDESERVTYPES','', servicetypes)
env.bksys_insttype('KDESERV','', 'data.protocol')
env.bksys_insttype('KDESERV','kded', 'kpasswdserver.desktop')
env.bksys_insttype('KDEAPPS','kconf_update', [ 'kioslave.upd', 'proxytype.pl', 'useragent.pl' ])
env.bksys_insttype('KDEMIME','','magic')

# kssl 
env.bksys_insttype('KDECONF', '', 'kssl/kssl/ksslcalist')
env.bksys_insttype('KDEAPPS', 'kssl', 'kssl/kssl/caroot/ca-bundle.crt')

# TODO: how to install files in build dir without this hack
env.bksys_insttype('KDEINCLUDE','','../ksslconfig.h')

env.bksys_insttype('KDESERVTYPES','', 'kfile/kpropsdlgplugin.desktop')

env.bksys_insttype('KDEINCLUDE','',kio_inst_headers + kssl_inst_headers + kfile_inst_headers + bookmarks_inst_headers)
env.bksys_insttype('KDEINCLUDE','kio',kio_kio_inst_headers)


