#! /usr/bin/env python

Import('env')

kiocore_sources = """
authinfo.cpp
kprotocolmanager.cpp
slave.cpp slaveinterface.cpp
sessiondata.cpp scheduler.cpp
connection.cpp
job.cpp global.cpp
slaveconfig.cpp kurlpixmapprovider.cpp
netaccess.cpp paste.cpp pastedialog.cpp
kmimemagic.cpp
tcpslavebase.cpp slavebase.cpp passdlg.cpp
forwardingslavebase.cpp
progressbase.cpp defaultprogress.cpp
statusbarprogress.cpp
kdirnotify.cpp kdirnotify.skel kdirnotify_stub.cpp
../misc/uiserver.stub observer.cpp observer.skel observer.stub
kemailsettings.cpp
kprotocolinfo.cpp
renamedlg.cpp skipdlg.cpp kremoteencoding.cpp
kmimetypechooser.cpp
"""
# do not use kdirnotify.stub

env.Depends('observer.cpp', 'observer_stub.cpp')

ksycoca_sources = """
kdirwatch.cpp kacl.cpp
kfileshare.cpp ksambashare.cpp knfsshare.cpp
ktrader.cpp ktraderparse.cpp ktraderparsetree.cpp
kservicetypefactory.cpp kservicetype.cpp
kmimetype.cpp kservicegroup.cpp
kservice.cpp kservicefactory.cpp
kuserprofile.cpp kservicegroupfactory.cpp
kurifilter.cpp
kfilterbase.cpp kfilterdev.cpp
kshellcompletion.cpp kurlcompletion.cpp
krun.cpp
kfileitem.cpp kdirlister.cpp kimageio.cpp
yacc.c lex.c
chmodjob.cpp kscan.cpp kar.cpp ktar.cpp kzip.cpp previewjob.cpp metainfojob.cpp davjob.cpp
kdatatool.cpp karchive.cpp kfilefilter.cpp
kfilemetainfo.cpp kdcopservicestarter.cpp
dataslave.cpp dataprotocol.cpp
"""

if not env['WINDOWS']:
	ksycoca_sources += """
kautomount.cpp 
"""

env.Moc('jobclasses.h')
env.Moc('kdirlister_p.h')
env.Moc('kdirwatch_p.h')
env.Moc('kmimetyperesolver.h')
env.Moc('kservice_p.h')

coreobj = env.kdeobj('convenience',env)
coreobj.target   = 'libkiocore'
coreobj.source   = kiocore_sources
coreobj.uselib   = 'QTCORE QTGUI QT QT3SUPPORT KDE4 FAM'
coreobj.includes = '../../kdecore/network ../kssl ../../interfaces #interfaces ../misc'
coreobj.execute()

sycocaobj = env.kdeobj('convenience',env)
sycocaobj.target   = 'libksycoca'
sycocaobj.source   = ksycoca_sources
sycocaobj.uselib   = coreobj.uselib
sycocaobj.includes = coreobj.includes
sycocaobj.execute()
#TODO other stuffs

"""
AM_CPPFLAGS = -D_LARGEFILE64_SOURCE

INCLUDES=  -I$(top_srcdir) -I$(srcdir)/.. -I$(top_srcdir)/kdecore/network -I$(srcdir)/../kssl -I../kssl -I$(srcdir)/../../interfaces  $(all_includes) $(SSL_INCLUDES)

noinst_LTLIBRARIES = libkiocore.la libksycoca.la

# convenience lib - no LDFLAGS or LIBADD !

libksycoca_la_SOURCES = \
	kdirwatch.cpp \
	kfileshare.cpp ksambashare.cpp knfsshare.cpp \
	ktrader.cpp ktraderparse.cpp ktraderparsetree.cpp \
        kservicetypefactory.cpp kservicetype.cpp \
	kmimetype.cpp kservicegroup.cpp \
	kservice.cpp kservicefactory.cpp \
	kuserprofile.cpp kservicegroupfactory.cpp \
	kurifilter.cpp \
	kfilterbase.cpp kfilterdev.cpp \
	kshellcompletion.cpp kurlcompletion.cpp \
	kautomount.cpp krun.cpp \
	kfileitem.cpp kdirlister.cpp kimageio.cpp \
	yacc.c lex.c  \
	chmodjob.cpp kscan.cpp kar.cpp ktar.cpp kzip.cpp previewjob.cpp metainfojob.cpp davjob.cpp \
	kdatatool.cpp karchive.cpp kfilefilter.cpp \
	kfilemetainfo.cpp kdcopservicestarter.cpp \
	dataslave.cpp dataprotocol.cpp

include_HEADERS = \
	kservicetype.h kmimetype.h kmimemagic.h kservice.h \
	krun.h kdirwatch.h kautomount.h kuserprofile.h \
	kar.h ktar.h kzip.h ktrader.h kurifilter.h kurlcompletion.h \
	kshellcompletion.h kfileitem.h kfileshare.h ksambashare.h knfsshare.h \
    kdirlister.h kservicegroup.h \
	kimageio.h kdirnotify.h kdirnotify_stub.h \
	kurlpixmapprovider.h kprotocolinfo.h kprotocolmanager.h \
	kfilterbase.h kfilterdev.h kemailsettings.h kscan.h kdatatool.h \
	karchive.h kfilefilter.h kfilemetainfo.h renamedlgplugin.h \
	kmimetyperesolver.h kdcopservicestarter.h kremoteencoding.h \
	kmimetypechooser.h

#libkiocore_la_LDFLAGS = $(all_libraries)
#libkiocore_la_LIBADD = ../../kdeui/libkdeui.la ../../kdesu/libkdesu.la $(LIBZ) $(LIBFAM) $(LIBVOLMGT)

libkiocore_la_SOURCES = authinfo.cpp \
	kprotocolmanager.cpp \
	slave.cpp slaveinterface.cpp observer.stub \
	sessiondata.cpp	scheduler.cpp \
	connection.cpp \
	job.cpp global.cpp \
	slaveconfig.cpp kurlpixmapprovider.cpp \
	netaccess.cpp paste.cpp pastedialog.cpp \
	kmimemagic.cpp \
	tcpslavebase.cpp slavebase.cpp passdlg.cpp \
	forwardingslavebase.cpp \
	progressbase.cpp defaultprogress.cpp \
	statusbarprogress.cpp \
	kdirnotify.cpp kdirnotify.skel kdirnotify_stub.cpp \
	observer.cpp uiserver.stub observer.skel \
	kemailsettings.cpp  \
	kprotocolinfo.cpp \
	renamedlg.cpp skipdlg.cpp kremoteencoding.cpp \
	kmimetypechooser.cpp

uiserver_DIR = $(top_srcdir)/kio/misc

METASOURCES = AUTO

kioincludedir = $(includedir)/kio
kioinclude_HEADERS = connection.h \
        slaveinterface.h slave.h slaveconfig.h \
        sessiondata.h global.h passdlg.h \
	netaccess.h job.h scheduler.h \
        jobclasses.h paste.h slavebase.h \
	progressbase.h defaultprogress.h \
	statusbarprogress.h tcpslavebase.h \
	forwardingslavebase.h \
	observer.h chmodjob.h uiserver_stub.h \
        kmdbase.h authinfo.h \
	ioslave_defaults.h http_slave_defaults.h previewjob.h thumbcreator.h \
	metainfojob.h davjob.h renamedlg.h skipdlg.h

# Internal
noinst_HEADERS = kservicetypefactory.h kservicefactory.h \
	kmessageboxwrapper.h \
	ktraderparse.h ktraderparsetree.h yacc.h \
	kimageiofactory.h kdirwatch_p.h kdirlister_p.h \
	renamedlg.h skipdlg.h dataslave.h dataprotocol.h \
	kservice_p.h

parserfiles = yacc.y lex.l

EXTRA_DIST = $(parserfiles)

parser: $(parserfiles)
	cd $(srcdir) ;\
	flex -olex.c -Pkiotrader lex.l ;\
	bison -d -p kiotrader yacc.y && mv yacc.tab.c yacc.c; mv yacc.tab.h yacc.h

.PHONY: parser

include ../../admin/Doxyfile.am
"""
