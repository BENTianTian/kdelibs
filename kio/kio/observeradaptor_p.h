/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -l Observer -m -i observer.h -a observeradaptor_p.h:observeradaptor.cpp org.kde.KIO.Observer.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef OBSERVERADAPTOR_P_H_1170792049
#define OBSERVERADAPTOR_P_H_1170792049

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "observer.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.KIO.Observer
 */
class ObserverAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.KIO.Observer")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.KIO.Observer\" >\n"
"    <method name=\"slotActionPerformed\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"actionId\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"jobId\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ObserverAdaptor(Observer *parent);
    virtual ~ObserverAdaptor();

    inline Observer *parent() const
    { return static_cast<Observer *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void slotActionPerformed(int actionId, int jobId);
Q_SIGNALS: // SIGNALS
};

#endif
