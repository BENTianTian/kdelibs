/*
 * kglobal.h -- Declaration of class KGlobal.
 * Generated by newclass on Sat May  1 02:08:43 EST 1999.
 */
#ifndef SSK_KGLOBAL_H
#define SSK_KGLOBAL_H

class KStandardDirs;
class KConfig;
class KLocale;
class KIconLoader;
class KCharsets;
class QFont;
class KInstance;

/**
 * Accessors to KDE global objects.
 * 
 * @author Sirtaj Singh Kang (taj@kde.org)
 * @version $Id$
 */
class KGlobal
{
public:

    /**
     * Retrieves the global instance - there is always at least
     * one Instance of a component in one application (in most 
     * cases the application itself)
     */
    static KInstance            *instance();

    /**
     *  Retrieves the application standard dirs object.
     */
    static KStandardDirs	*dirs();
    
    /**
     *  Retrieves the general config object.
     */
    static KConfig		*config();
    
    /**
     *  Retrieves an iconloader object.
     */
    static KIconLoader	        *iconLoader();
    
    static KLocale		*locale();
    static KCharsets	        *charsets();
    
    static QFont                generalFont();
    static QFont                fixedFont();

    static  int                 dndEventDelay();
    
    static  KInstance           *_instance;
    static  KLocale		*_locale;
    static  KCharsets	        *_charsets;
    
    static  QFont               *_generalFont;
    static  QFont               *_fixedFont;
    
private:
    /**
     * Allocates the static Instance variable;
     **/
    static void init();
    
    /**
     * This will free all locally allocated objects and memory.
     * Access to any method after this will cause a reallocation.
     */
    static void freeAll();
};

/**
 * @libdoc The KDE Core Functionality Library
 *
 * All KDE programs use this library to provide basic functionality such
 * as the configuration system, IPC, internationalization and locale
 * support, site-independent access to the filesystem and a large number
 * of other (but no less important) things.
 *
 * All KDE applications should link to the kdecore library. Also, using a
 * @ref KApplication derived class instead of @ref QApplication is almost
 * mandatory if you expect your application to behave nicely within the
 * KDE environment.
 */
#endif // SSK_KGLOBAL_H
