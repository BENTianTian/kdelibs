#! /usr/bin/env python

Import('env')

if env.has_key('RUNTESTS') and env['RUNTESTS']:
	
	QTestLibTest = 1
	StandaloneTest = 2

	check_PROGRAMS = {
		'kdatetimetest'          : ['kdatetimetest.cpp', StandaloneTest],
		'kconfigtestgui'         : ['kconfigtestgui.cpp', StandaloneTest],
		'kdebugtest'             : ['kdebugtest.cpp', StandaloneTest],
		'klocaletest'            : ['klocaletest.cpp', QTestLibTest],
		'klocalizedstringtest'   : ['klocalizedstringtest.cpp', QTestLibTest],
		#'klocaletest2'          : ['klocaletest2.cpp klocale.cpp libintl.cpp kcatalog.cpp', StandaloneTest],
		#'kcatalog'              : ['kcatalog.cpp libintl.cpp', StandaloneTest],
		'ksimpleconfigtest'      : ['ksimpleconfigtest.cpp', StandaloneTest],
		'kurltest'               : ['kurltest.cpp', QTestLibTest],
		'kstddirstest'           : ['kstddirstest.cpp', StandaloneTest],
		'kprocesstest'           : ['kprocesstest.cpp', StandaloneTest],
		'kuniqueapptest'         : ['kuniqueapptest.cpp', StandaloneTest],
		'kapptest'               : ['kapptest.cpp', StandaloneTest],
		'krandomsequencetest'    : ['krandomsequencetest.cpp', StandaloneTest],
		'kcmdlineargstest'       : ['kcmdlineargstest.cpp', StandaloneTest],
		'dcopkonqtest'           : ['dcopkonqtest.cpp', StandaloneTest],
		'kmemtest'               : ['kmemtest.cpp', StandaloneTest],
		#'kidlservertest'        : ['KIDLTest.cpp KIDLTest.skel', StandaloneTest],
		# TODO: stub processing does not work 
		#'kidlclienttest'        : ['KIDLTestClient.cpp KIDLTest.stub', StandaloneTest],
		#'$(srcdir)/KIDLTestClient.cpp: KIDLTest_stub.h
		'kipctest'               : ['kipctest.cpp', StandaloneTest],
		'cplusplustest'          : ['cplusplustest.cpp', StandaloneTest],
		'kiconloadertest'        : ['kiconloadertest.cpp', StandaloneTest],
		'kmdcodectest'           : ['kmdcodectest.cpp', StandaloneTest],
		'knotifytest'            : ['knotifytest.cpp', StandaloneTest],
		'ksortablevaluelisttest' : ['ksortablevaluelisttest.cpp', StandaloneTest],
		'testqtargs'             : ['testqtargs.cpp', StandaloneTest],
		'kprociotest'            : ['kprociotest.cpp', StandaloneTest],
		'kcharsetstest'          : ['kcharsetstest.cpp', StandaloneTest],
		'kmacroexpandertest'     : ['kmacroexpandertest.cpp', QTestLibTest],
		'kshelltest'             : ['kshelltest.cpp', QTestLibTest],
		# TODO x related 
		#'kxerrorhandlertest'    : ['kxerrorhandlertest.cpp', StandaloneTest],
		'startserviceby'         : ['startserviceby.cpp', StandaloneTest],
		'kglobaltest'            : ['kglobaltest.cpp', StandaloneTest],
		#'ktimezonestest'        : ['ktimezonestest.cpp', QTestLibTest],
		'ktempfiletest'          : ['ktempfiletest.cpp', QTestLibTest],
		'kurlmimetest'           : ['kurlmimetest.cpp', QTestLibTest],
		'kconfigtest'            : ['kconfigtest.cpp', QTestLibTest],
		'krfcdatetest'           : ['krfcdatetest.cpp', QTestLibTest],
		'kstdacceltest'          : ['kstdacceltest.cpp', QTestLibTest],
		'kstringhandlertest'     : ['kstringhandlertest.cpp', QTestLibTest],
		'kurltest4'              : ['kurltest4.cpp kurl4.cpp', QTestLibTest],
		#'kcalendartest'         : ['kcalendartest.cpp', QTestLibTest],
		'klibloadertest'         : ['klibloadertest.cpp', QTestLibTest],
		'kcompletiontest'        : ['kcompletiontest.cpp', QTestLibTest],
		'klockfiletest'          : ['klockfiletest.cpp', QTestLibTest],
		'ktempdirtest'           : ['ktempdirtest.cpp', QTestLibTest]
	}
	
	for appname in check_PROGRAMS.keys():
#		print appname 
	
		if appname[:1] == '#':
			continue
		obj = env.kdeobj('program', env)
		obj.vnum     = '6.0.2'
		obj.target   = appname
		obj.source   = check_PROGRAMS[appname][0]
		obj.uselib   = 'QT QTCORE QTGUI QT3SUPPORT QTEST KDE4'
		obj.libpaths = '.. ../../dcop'
		obj.libs     = 'kdecore DCOP'
		if env['WINDOWS']:
			obj.libs     += ' kdewin32 ws2_32'

		if check_PROGRAMS[appname][1] == QTestLibTest:
			obj.isUnitTest = 1
	
		obj.execute()

"""
INCLUDES = -I$(top_srcdir)/kdecore -I$(top_srcdir)/qttestlib $(all_includes)

AM_LDFLAGS = $(QT_LDFLAGS) $(X_LDFLAGS) $(KDE_RPATH)

check_PROGRAMS = kconfigtestgui klocaletest kprocesstest ksimpleconfigtest \
        kstddirstest kurltest kurltest4 kuniqueapptest krandomsequencetest \
        kdebugtest kstringhandlertest kcmdlineargstest kapptest \
        kmemtest kidlservertest kidlclienttest dcopkonqtest kipctest \
        cplusplustest kiconloadertest kmdcodectest knotifytest \
        ksortablevaluelisttest krfcdatetest testqtargs kprociotest \
        kcharsetstest kcalendartest kmacroexpandertest kshelltest \
        kxerrorhandlertest startserviceby kglobaltest ktimezonestest \
        kconfigtest ktempfiletest kurlmimetest kstdacceltest klibloadertest \
        kcompletiontest klockfiletest ktempdirtest

# TODO kurltest4 when it works

TESTS = kurltest kcompletiontest\
        kconfigtest ktempfiletest kurlmimetest kstdacceltest \
        kstringhandlertest krfcdatetest kcalendartest klibloadertest

METASOURCES = AUTO

LDADD = ../libkdecore.la $(top_builddir)/qttestlib/libqttestlib.la

kconfigtestgui_SOURCES = kconfigtestgui.cpp
kdebugtest_SOURCES = kdebugtest.cpp
klocaletest_SOURCES = klocaletest.cpp
#klocaletest2_SOURCES = klocaletest2.cpp klocale.cpp libintl.cpp kcatalog.cpp
#kcatalog_SOURCES = kcatalog.cpp libintl.cpp
ksimpleconfigtest_SOURCES = ksimpleconfigtest.cpp
kurltest_SOURCES = kurltest.cpp
kstddirstest_SOURCES = kstddirstest.cpp
kprocesstest_SOURCES = kprocesstest.cpp
kuniqueapptest_SOURCES = kuniqueapptest.cpp
kapptest_SOURCES = kapptest.cpp
krandomsequencetest_SOURCES = krandomsequencetest.cpp
kcmdlineargstest_SOURCES = kcmdlineargstest.cpp
dcopkonqtest_SOURCES = dcopkonqtest.cpp
kmemtest_SOURCES = kmemtest.cpp
kidlservertest_SOURCES = KIDLTest.cpp KIDLTest.skel
kidlclienttest_SOURCES = KIDLTestClient.cpp KIDLTest.stub
$(srcdir)/KIDLTestClient.cpp: KIDLTest_stub.h
kipctest_SOURCES = kipctest.cpp
cplusplustest_SOURCES = cplusplustest.cpp
kiconloadertest_SOURCES = kiconloadertest.cpp
kmdcodectest_SOURCES = kmdcodectest.cpp
knotifytest_SOURCES = knotifytest.cpp
ksortablevaluelisttest_SOURCES = ksortablevaluelisttest.cpp
testqtargs_SOURCES = testqtargs.cpp
kprociotest_SOURCES = kprociotest.cpp
kcharsetstest_SOURCES = kcharsetstest.cpp
kmacroexpandertest_SOURCES = kmacroexpandertest.cpp
kshelltest_SOURCES = kshelltest.cpp
kxerrorhandlertest_SOURCES = kxerrorhandlertest.cpp
startserviceby_SOURCES = startserviceby.cpp
kglobaltest_SOURCES = kglobaltest.cpp
ktimezonestest_SOURCES = ktimezonestest.cpp

ktempfiletest_SOURCES = ktempfiletest.cpp
kurlmimetest_SOURCES = kurlmimetest.cpp
kconfigtest_SOURCES = kconfigtest.cpp
krfcdatetest_SOURCES = krfcdatetest.cpp
kstdacceltest_SOURCES = kstdacceltest.cpp
kstringhandlertest_SOURCES = kstringhandlertest.cpp
kurltest4_SOURCES = kurltest4.cpp kurl4.cpp
kcalendartest_SOURCES = kcalendartest.cpp
klibloadertest_SOURCES = klibloadertest.cpp
kcompletiontest_SOURCES = kcompletiontest.cpp
klockfiletest_SOURCES = klockfiletest.cpp
ktempdirtest_SOURCES = ktempdirtest.cpp
"""
