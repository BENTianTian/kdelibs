// This file is generated by kconfig_compiler from test4.kcfg.
// All changes you do to this file will be lost.

#include "test4.h"

#include <kstaticdeleter.h>

Test4 *Test4::mSelf = 0;
static KStaticDeleter<Test4> staticDeleter;

Test4 *Test4::self()
{
  if ( !mSelf ) {
    staticDeleter.setObject( mSelf, new Test4() );
    mSelf->readConfig();
  }

  return mSelf;
}

Test4::Test4(  )
  : KConfigSkeleton( "test4rc" )
{
  mSelf = this;
  setCurrentGroup( "Foo" );

QColor defaultColor[4] = { Qt::red, Qt::blue, Qt::green, Qt::black };
  KConfigSkeleton::ItemColor  *itemColor;
  itemColor = new KConfigSkeleton::ItemColor( currentGroup(), "color #0", mColor[0], defaultColor[0] );
  addItem( "Color0", itemColor );
  itemColor = new KConfigSkeleton::ItemColor( currentGroup(), "color #1", mColor[1], defaultColor[1] );
  addItem( "Color1", itemColor );
  itemColor = new KConfigSkeleton::ItemColor( currentGroup(), "color #2", mColor[2], defaultColor[2] );
  addItem( "Color2", itemColor );
  itemColor = new KConfigSkeleton::ItemColor( currentGroup(), "color #3", mColor[3], defaultColor[3] );
  addItem( "Color3", itemColor );
  QValueList<KConfigSkeleton::ItemEnum::Choice> valuesMouseAction;
  {
    KConfigSkeleton::ItemEnum::Choice choice;
    choice.name = "Encrypt";
    valuesMouseAction.append( choice );
  }
  {
    KConfigSkeleton::ItemEnum::Choice choice;
    choice.name = "Decrypt";
    valuesMouseAction.append( choice );
  }
  {
    KConfigSkeleton::ItemEnum::Choice choice;
    choice.name = "CrashNBurn";
    valuesMouseAction.append( choice );
  }
  {
    KConfigSkeleton::ItemEnum::Choice choice;
    choice.name = "PumpNDump";
    valuesMouseAction.append( choice );
  }
  KConfigSkeleton::ItemEnum  *itemMouseAction;
  itemMouseAction = new KConfigSkeleton::ItemEnum( currentGroup(), "right_mouse_action", mMouseAction[0], valuesMouseAction, EnumMouseAction::Decrypt );
  addItem( "MouseActionright", itemMouseAction );
  itemMouseAction = new KConfigSkeleton::ItemEnum( currentGroup(), "mid_mouse_action", mMouseAction[1], valuesMouseAction, EnumMouseAction::Encrypt );
  addItem( "MouseActionmid", itemMouseAction );
  itemMouseAction = new KConfigSkeleton::ItemEnum( currentGroup(), "left_mouse_action", mMouseAction[2], valuesMouseAction, EnumMouseAction::PumpNDump );
  addItem( "MouseActionleft", itemMouseAction );
  KConfigSkeleton::ItemString  *itemFooBar;
  itemFooBar = new KConfigSkeleton::ItemString( currentGroup(), "foo bar", mFooBar );
  addItem( "FooBar", itemFooBar );
  KConfigSkeleton::ItemInt  *itemAge;
  itemAge = new KConfigSkeleton::ItemInt( currentGroup(), "Age", mAge, 35 );
  itemAge->setMinValue(8);
  itemAge->setMaxValue(88);
  addItem( "Age", itemAge );
}

Test4::~Test4()
{
  if ( mSelf == this )
    staticDeleter.setObject( mSelf, 0, false );
}

