// This file is generated by kconfig_compiler from test2.kcfg.
// All changes you do to this file will be lost.

#include "test2.h"

#include <klocale.h>

Test2::Test2(  )
  : MyPrefs( "korganizerrc" )
{
  setCurrentGroup( "General" );

  mAutoSaveItem = new KConfigSkeleton::ItemBool( currentGroup(), "Auto Save", mAutoSave, false );
  mAutoSaveItem->setLabel( i18n("Enable automatic saving of calendar") );
  mAutoSaveItem->setWhatsThis( i18n("WhatsThis text for AutoSave option") );
  addItem( "AutoSave", mAutoSaveItem );
  mAutoSaveIntervalItem = new KConfigSkeleton::ItemInt( currentGroup(), "Auto Save Interval", mAutoSaveInterval, 10 );
  mAutoSaveIntervalItem->setLabel( i18n("Auto Save Interval") );
  addItem( "AutoSaveInterval", mAutoSaveIntervalItem );
  mConfirmItem = new KConfigSkeleton::ItemBool( currentGroup(), "Confirm Deletes", mConfirm, true );
  mConfirmItem->setLabel( i18n("Confirm deletes") );
  addItem( "Confirm", mConfirmItem );
  mArchiveFileItem = new KConfigSkeleton::ItemString( currentGroup(), "Archive File", mArchiveFile );
  mArchiveFileItem->setLabel( i18n("Archive File") );
  addItem( "ArchiveFile", mArchiveFileItem );
  QValueList<KConfigSkeleton::ItemEnum::Choice> valuesDestination;
  {
    KConfigSkeleton::ItemEnum::Choice choice;
    choice.name = "standardDestination";
    valuesDestination.append( choice );
  }
  {
    KConfigSkeleton::ItemEnum::Choice choice;
    choice.name = "askDestination";
    valuesDestination.append( choice );
  }
  {
    KConfigSkeleton::ItemEnum::Choice choice;
    choice.name = "argl1";
    choice.label = i18n("Argl1 Label");
    valuesDestination.append( choice );
  }
  {
    KConfigSkeleton::ItemEnum::Choice choice;
    choice.name = "argl2";
    choice.whatsThis = i18n("Argl2 Whatsthis");
    valuesDestination.append( choice );
  }
  {
    KConfigSkeleton::ItemEnum::Choice choice;
    choice.name = "argl3";
    choice.label = i18n("Argl3 Label");
    choice.whatsThis = i18n("Argl3 Whatsthis");
    valuesDestination.append( choice );
  }
  mDestinationItem = new KConfigSkeleton::ItemEnum( currentGroup(), "Destination", mDestination, valuesDestination, standardDestination );
  mDestinationItem->setLabel( i18n("New Events/Todos Should") );
  addItem( "Destination", mDestinationItem );

  setCurrentGroup( "Views" );

  mHourSizeItem = new KConfigSkeleton::ItemInt( currentGroup(), "Hour Size", mHourSize, 10 );
  mHourSizeItem->setLabel( i18n("Hour Size") );
  addItem( "HourSize", mHourSizeItem );
  mSelectionStartsEditorItem = new KConfigSkeleton::ItemBool( currentGroup(), "SelectionStartsEditor", mSelectionStartsEditor, false );
  mSelectionStartsEditorItem->setLabel( i18n("Time range selection in agenda view starts event editor") );
  addItem( "SelectionStartsEditor", mSelectionStartsEditorItem );

  setCurrentGroup( "KOrganizer Plugins" );

  QStringList defaultSelectedPlugins;
  defaultSelectedPlugins.append( "holidays" );
  defaultSelectedPlugins.append( "webexport" );

  mSelectedPluginsItem = new KConfigSkeleton::ItemStringList( currentGroup(), "SelectedPlugins", mSelectedPlugins, defaultSelectedPlugins );
  mSelectedPluginsItem->setLabel( i18n("SelectedPlugins") );
  addItem( "SelectedPlugins", mSelectedPluginsItem );

  setCurrentGroup( "Colors" );

  mHighlightColorItem = new KConfigSkeleton::ItemColor( currentGroup(), "Highlight Color", mHighlightColor, QColor( 100, 100, 255 ) );
  mHighlightColorItem->setLabel( i18n("Highlight color") );
  addItem( "HighlightColor", mHighlightColorItem );
  mAgendaBgColorItem = new KConfigSkeleton::ItemColor( currentGroup(), "Agenda Background Color", mAgendaBgColor, QColor( 255, 255, 255 ) );
  mAgendaBgColorItem->setLabel( i18n("Agenda view background color") );
  addItem( "AgendaBgColor", mAgendaBgColorItem );

  setCurrentGroup( "Fonts" );

  mTimeBarFontItem = new KConfigSkeleton::ItemFont( currentGroup(), "TimeBar Font", mTimeBarFont );
  mTimeBarFontItem->setLabel( i18n("Time bar") );
  addItem( "TimeBarFont", mTimeBarFontItem );
}

Test2::~Test2()
{
}

