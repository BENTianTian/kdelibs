#! /usr/bin/env python
#generated from Makefile.am by am2bksys.py
Import('env')

kdeprint_management_module_sources = """
kdeprint_management_module.cpp
"""

kaddprinterwizard_sources = """
kaddprinterwizard.cpp
"""

kdeprint_management_sources = """
cjanuswidget.cpp jobitem.cpp kiconselectaction.cpp kmconfigcommand.cpp
kmconfigdialog.cpp kmconfigfilter.cpp kmconfigfonts.cpp kmconfiggeneral.cpp
kmconfigjobs.cpp kmconfigpage.cpp kmconfigpreview.cpp kmdbcreator.cpp
kmdriverdb.cpp kmdriverdbwidget.cpp kmdriverdialog.cpp kmiconview.cpp
kminfopage.cpp kminstancepage.cpp kmjobviewer.cpp kmlistview.cpp
kmmainview.cpp kmpages.cpp kmprinterview.cpp kmpropbackend.cpp
kmpropcontainer.cpp kmpropdriver.cpp kmpropertypage.cpp kmpropgeneral.cpp
kmpropmembers.cpp kmpropwidget.cpp kmspecialprinterdlg.cpp kmtimer.cpp
kmwbackend.cpp kmwclass.cpp kmwdriver.cpp kmwdriverselect.cpp
kmwdrivertest.cpp kmwend.cpp kmwfile.cpp kmwinfobase.cpp
kmwinfopage.cpp kmwizard.cpp kmwizardpage.cpp kmwlocal.cpp
kmwlpd.cpp kmwname.cpp kmwpassword.cpp kmwsmb.cpp
kmwsocket.cpp kmwsocketutil.cpp kxmlcommanddlg.cpp kxmlcommandselector.cpp
networkscanner.cpp pluginaction.cpp sidepixmap.cpp smbview.cpp
"""

kdeprint_headers = """
kiconselectaction.h kmjobviewer.h kmmainview.h kmprinterpage.h
kmtimer.h
"""

noinst_headers = """
cjanuswidget.h jobitem.h kmconfigcommand.h kmconfigdialog.h
kmconfigfilter.h kmconfigfonts.h kmconfiggeneral.h kmconfigjobs.h
kmconfigpage.h kmconfigpreview.h kmdbcreator.h kmdriverdb.h
kmdriverdbwidget.h kmdriverdialog.h kmiconview.h kminfopage.h
kminstancepage.h kmjobviewer.h kmlistview.h kmmainview.h
kmpages.h kmprinterpage.h kmprinterview.h kmpropbackend.h
kmpropcontainer.h kmpropdriver.h kmpropertypage.h kmpropgeneral.h
kmpropmembers.h kmpropwidget.h kmspecialprinterdlg.h kmwbackend.h
kmwclass.h kmwdriver.h kmwdriverselect.h kmwdrivertest.h
kmwend.h kmwfile.h kmwinfobase.h kmwinfopage.h
kmwizard.h kmwizardpage.h kmwlocal.h kmwlpd.h
kmwname.h kmwpassword.h kmwsmb.h kmwsocket.h
kmwsocketutil.h kxmlcommanddlg.h kxmlcommandselector.h networkscanner.h
pluginaction.h sidepixmap.h smbview.h
"""

includes = '#/kdefx #/kdecore/network #/kdeprint #/kdeprint #/kio #/kfile '

obj = env.kdeinitobj()
obj.target = 'kaddprinterwizard'
obj.source = kaddprinterwizard_sources
obj.includes = includes
obj.libs = 'kdeprint_management '
obj.uselib = 'QT QTCORE QTGUI QT3SUPPORT KDE4 KDECORE KDEUI KIO KDEFX'
obj.libpaths = ' ../../dcop ../../kdeprint ../../kdeprint/management ../../kdefx '
obj.libs     = ' DCOP kdeprint_management kdeprint kdefx'
if env['WINDOWS']:
	obj.ccflags += ' -Dkdemain=main '
else:
    obj.libs     += " kdesu"
    obj.libpaths += " ../../kdesu "
obj.execute()

obj = env.kdeobj('shlib')
obj.target = 'kdeprint_management'
obj.vnum = '4.2.0'
obj.source = kdeprint_management_sources
obj.includes = includes
obj.libpaths = '.. ../../dcop ../../kded ../../kdefx ../../kdeprint  '
obj.libs = 'kdecore kdeui DCOP kdeprint kio kdefx '
obj.uselib = 'QT QTCORE QTGUI QT3SUPPORT KDE4 KDECORE KDEUI KIO KDEFX '
if not env['WINDOWS']:
    obj.libs     += " kdesu"
    obj.libpaths += " ../../kdesu "
obj.ccflags += ' -D_KDEPRINT_COMPILE '
obj.execute()

obj = env.kdeobj('module')
obj.target = 'kdeprint_management_module'
obj.source = kdeprint_management_module_sources
obj.includes = includes
obj.libpaths = '../../kdefx ../../dcop . '
obj.libs = ' DCOP kdeprint_management '
obj.uselib = 'QT QTCORE QTGUI QT3SUPPORT KDE4 KDECORE KDEUI'
obj.ccflags += ' -D_KDEPRINT_COMPILE '
obj.execute()

env.bksys_insttype('KDEAPPS', 'kdeprint', 'tileup.png tiledown.png side.png')
env.bksys_insttype('KDEINCLUDE', 'kdeprint', kdeprint_headers )

