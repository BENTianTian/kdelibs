dnl AM_INIT_AUTOMAKE(libqt-addon, 0.1)

dnl These are common macros that you might or might not want to use

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS([fcntl.h sys/time.h sys/poll.h unistd.h stdlib.h paths.h netinet/in.h netinet/in6.h netinet6/in6.h netdb.h net/if.h])
AC_CHECK_FUNCS([usleep poll])

dnl Check for struct addrinfo
AC_CHECK_TYPES([struct addrinfo],,,[#include <netdb.h>])

kde_safe_LIBS="$LIBS"
LIBS="$LIBS $all_libraries $X_EXTRA_LIBS $LIBSOCKET"
AC_CHECK_FUNCS([inet_ntop inet_pton getpeername getsockname getsockopt if_nametoindex if_indextoname \
		gethostbyname2_r gethostbyname_r gethostbyname2 getipnodebyaddr freehostent \
		getprotobyname_r getservbyname_r])
AC_CHECK_FUNCS([getaddrinfo],
  [
    AC_CHECK_FUNCS([freeaddrinfo getnameinfo gai_strerror])

    AC_MSG_CHECKING([if getaddrinfo works using numeric service with null host])
    dnl On AIX (4.3), getaddrinfo returns NULL if the hint
    dnl is AF_INET/SOCK_STREAM/AI_PASSIVE.
    dnl The error code reports "Host not found".
    dnl It only seems to return non-NULL if the port is known (eg. in
    dnl /etc/services).
    AC_TRY_RUN(dnl
    [
      #include <sys/types.h>
      #include <sys/socket.h>
      #include <netdb.h>
      #include <string.h>
      int main()
      {
        struct addrinfo hint, *res;
        int err;
        memset(&hint, 0, sizeof(hint));
        hint.ai_family = AF_INET;
        hint.ai_protocol = 0;
        hint.ai_socktype = SOCK_STREAM;
        hint.ai_flags = AI_PASSIVE;
        err = getaddrinfo(0, "18300", &hint, &res); /* kxmlrpc tries this */
        if (err != 0 || res == 0 || res->ai_family != AF_INET)
          return 1;
        return 0;
      }
    ],
    [
      AC_MSG_RESULT(yes)
    ],
    [
      AC_MSG_RESULT(no)
      AC_DEFINE(HAVE_BROKEN_GETADDRINFO, 1, [Define if getaddrinfo is broken and should be replaced])
    ],
    [
      AC_MSG_RESULT(cross compiling. We hope so)
    ])
  ]
)
LIBS="$kde_safe_LIBS"

AC_CHECK_MEMBERS([struct sockaddr.sa_len],,,[#include <sys/socket.h>])
AC_CHECK_TYPES([struct sockaddr_in6],
  [AC_CHECK_MEMBERS([struct sockaddr_in6.sin6_scope_id],,,[#include <netinet/in.h>])],,
  [#include <netinet/in.h>])

LIB_IDN=
AC_CHECK_LIB(idn, idna_to_ascii_4i, [
  AC_DEFINE_UNQUOTED(HAVE_LIBIDN, 1, [Defined if you have libidn in your system])
  LIB_IDN=-lidn
])
AC_CHECK_HEADERS([idna.h punycode.h stringprep.h])
AC_SUBST(LIB_IDN)

# KDE_INIT_DOXYGEN([The QtAddon Reference], [Version $VERSION])
