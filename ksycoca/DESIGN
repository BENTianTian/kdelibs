
Format of the sycoca database file
==================================

List of factories
 | * Factory id, Factory offset
 | * Factory id, Factory offset
 | * ...
 | * 0
 | * ServiceType-index offset

For each factory
 | * offset of the dict
 | KSycocaEntries
 | | * entry type
 | | Entry
 | | | entry-dependent information
 | | ...
 | |
 | Dict
 | | * hashtable size
 | | Hash list
 | | | * list of values used to compute a hash key
 | | Hash table
 | | | * id (positive = entry offset)
 | | | * id (negative = - offset in duplicates list )
 | | | * 0 if no entry for that hash value
 | | Table of duplicates
 | | |  * entry offset, key
 | | |  * entry offset, key
 | 

And then, TODO :

Index by servicetype
| * servicetype offset, service offset
| * servicetype offset, service offset
| * servicetype offset, service offset
| * servicetype offset, service offset
This allows to quickly find services associated with a servicetype.
It does NOT reflect the user profile, which is stored in profilerc and
implemented in KServiceTypeProfile.

