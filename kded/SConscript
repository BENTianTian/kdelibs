#! /usr/bin/env python

Import('env')

# TODO: are kdefx kdeui really required ? 

if env['WINDOWS']:
	obj = env.kdeobj('program',env)
	obj.ccflags = '-Dkdemain=main'
else:
	obj = env.kdeinitobj(env)
obj.target   = 'kbuildsycoca'
obj.source   = """
kbuildsycoca.cpp kbuildservicetypefactory.cpp kbuildservicefactory.cpp 
kbuildservicegroupfactory.cpp kbuildimageiofactory.cpp kbuildprotocolinfofactory.cpp 
kctimefactory.cpp vfolder_menu.cpp
"""
obj.uselib   = 'QTCORE QTGUI QT3SUPPORT QT QTXML KDE4 KIO'
obj.libpaths = '../kdecore ../kdefx ../kdeui ../dcop'
obj.libs     = 'kdecore kdefx kdeui DCOP'
if env['WINDOWS']:
	obj.libpaths += ' ../win'
	obj.libs     += ' kdewin32'
obj.execute()

if env['WINDOWS']:
	obj = env.kdeobj('shlib',env)
	obj.target    = 'kded'
	obj.source    =  'kded.cpp kdedmodule.cpp kdedmodule.stub kdedmodule.skel'
	obj.uselib    = 'QTCORE QTGUI QT3SUPPORT QT KDE4 KIO'
	obj.libpaths  = '../kdecore ../kdefx ../kdeui ../dcop'
	obj.libs      = 'kdecore kdefx kdeui DCOP'
	obj.libpaths += ' ../win'
	obj.libs     += ' kdewin32'
	obj.execute()

	obj = env.kdeobj('program',env)
	obj.target   = 'kded'
	obj.source   = 'dummy.cpp'
	obj.uselib   = 'QTCORE QTGUI QT3SUPPORT QT KDE4 KIO'
	obj.libpaths = '. ../win'
	obj.libs     = 'kded kdewin32'
	obj.execute()
else: 
	obj = env.kdeobj('shlib',env)
	obj.target   = 'kded'
	obj.source   = 'kded.cpp kdedmodule.cpp kdedmodule.stub kdedmodule.skel'
	obj.uselib   = 'QTCORE QTGUI QT3SUPPORT QT KDE4 KIO'
	obj.libpaths = '../kdecore ../kdefx ../kdeui ../dcop'
	obj.libs     = 'kdecore kdefx kdeui DCOP'
	obj.execute()

dummy_cpp = """
extern "C" int kdemain(int argc, char **argv); 
int main(int argc,char **argv) 
{ 
	return kdemain(argc,argv); 
}
"""

env.CreateFile('dummy.cpp', Value(dummy_cpp))

obj=env.kdeobj('program', env)
obj.target='kdontchangehostname'
obj.source='khostname.cpp'
obj.uselib   = 'QTCORE QTGUI QT QT3SUPPORT KDE4'
obj.libpaths = '../kdecore ../kdefx ../kdeui ../dcop'
obj.libs     = 'kdecore kdefx kdeui DCOP'
if env['WINDOWS']:
	obj.libpaths += ' ../win'
	obj.libs     += ' kdewin32'
obj.execute()

obj=env.kdeobj('program', env)
obj.target='kdemenu'
obj.source='kde-menu.cpp'
obj.uselib   = 'QTCORE QT QTGUI QT3SUPPORT KDE4 KIO'
obj.libpaths = '../kdecore ../kdefx ../kdeui ../dcop'
obj.libs     = 'kdecore kdefx kdeui DCOP'
if env['WINDOWS']:
	obj.libpaths += ' ../win'
	obj.libs     += ' kdewin32'
obj.execute()

# TODO: datafiles

"""
INCLUDES= -I$(srcdir)/.. -I$(top_srcdir) $(all_includes)

lib_LTLIBRARIES =
kdeinit_LTLIBRARIES = kded.la kbuildsycoca.la

kded_la_LDFLAGS = $(all_libraries) -module -avoid-version
kded_la_LIBADD = $(LIB_KIO)
kded_la_SOURCES = kded.cpp kdedmodule.cpp

kbuildsycoca_la_LDFLAGS = $(all_libraries) -module -avoid-version
kbuildsycoca_la_LIBADD = $(LIB_KIO)
kbuildsycoca_la_SOURCES = kbuildsycoca.cpp kbuildservicetypefactory.cpp \
				kbuildservicefactory.cpp \
				kbuildservicegroupfactory.cpp \
				kbuildimageiofactory.cpp \
				kbuildprotocolinfofactory.cpp \
				kctimefactory.cpp \
				vfolder_menu.cpp

bin_PROGRAMS = kdontchangethehostname kde-menu

kdontchangethehostname_LDFLAGS = $(all_libraries) $(KDE_RPATH)
kdontchangethehostname_LDADD = $(LIB_KDECORE) 
kdontchangethehostname_SOURCES = khostname.cpp

kde_menu_LDFLAGS = $(all_libraries) $(KDE_RPATH)
kde_menu_LDADD = $(LIB_KIO) 
kde_menu_SOURCES = kde-menu.cpp

METASOURCES = AUTO

include_HEADERS = kdedmodule.h

noinst_HEADERS = kbuildsycoca.h kbuildservicetypefactory.h \
		kbuildservicefactory.h kbuildservicegroupfactory.h \
		kbuildimageiofactory.h kresourcelist.h \
		kbuildprotocolinfofactory.h

servicetype_DATA = kdedmodule.desktop
servicetypedir = $(kde_servicetypesdir)

xdg_menu_DATA = applications.menu

update_DATA = kded.upd
updatedir = $(kde_datadir)/kconf_update

include $(top_srcdir)/admin/Doxyfile.am

"""
