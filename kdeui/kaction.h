/*
* kuseraction.h -- Declaration of class KAction.
* Generated by newclass on Sat May  1 14:43:58 EST 1999.
*/
#ifndef SSK_KACTION_H
#define SSK_KACTION_H

#include<qstring.h>
#include<qwidget.h>
#include<qlist.h>

class QIconSet;
class KConfigBase;
class QPopupMenu;

/**
* A named user action.
* @author Sirtaj Singh Kang (taj@kde.org)
* @version $Id$
*/
class KAction : public QObject
{
	Q_OBJECT

public:

	typedef QWidget		Trigger;
	typedef QPopupMenu	MenuType;

private:

	/**
	 * Encapsulates a menu item that can trigger the action.
	 */
	class MenuTrigger {
	public:
		MenuType *menu;
		int	id;
		MenuTrigger( MenuType *m, int i ) { menu = m; id = i; }
	};

	typedef QList<Trigger>	Triggers;
	typedef QList<MenuTrigger> MenuItems;


	QString	_name;
	QString _localName;
	QString _whatsThis;
	QString _toolTip;

	QString	 _iconPath;
	QIconSet *_icon;
	int _accel;
	int _accelId;

	Triggers	*_triggers;
	MenuItems	*_menus;

	QObject		*_receiver;
	QString		_member;

public:
	/**
	* KAction Constructor.
	*/
	KAction( const char *desc, 
			const QString& localDesc,
			QObject *receiver, const char *member );

	/**
	* KAction Destructor.
	*/
	virtual ~KAction();

	/**
	 * Load the icon using the global @ref KIconLoader.
	 */
	void setIcon( const QString& iconpath );
	QString iconPath() const		{ return _iconPath; }

	const QIconSet& icon() const;

	void setWhatsThis( const QString& whatsthis )
						{ _whatsThis = whatsthis; }
	QString whatsThis() const		{ return _whatsThis; }

	void setToolTip( const QString& tip )	{ _toolTip = tip; }
	QString toolTip() const			{ return _toolTip; }

	/**
	 * @return the name of this action. 
	 */
	const QString& desc() const 		{ return _name; }
	const QString& localDesc() const	{ return _localName; }
	void setLocalDesc( const QString& name ){ _localName = name; }

	const QObject *receiver()	{ return _receiver; }
	const QString& member()		{ return _member; }
	
	/**
	 * Set the accelerator for associated menu items.
	 * It is the responsibility for the parent to set the accelerator
	 * for itself widget (ie global accelerators are NOT set).
	 */
	void setAccel( int accel );
	int accel() const { return _accel; }

	void addMenuItem( MenuType *menu, int id );

	void addTrigger( Trigger *uitrigger,
			const char *member = SIGNAL(clicked()),
			bool allowDisable = true );
	
	/**
	 * Enable/disable the signal and all associated trigger objects.
	 */
	void setEnabled( bool enabled = true );
	bool enabled() const { return !signalsBlocked(); }

	virtual void writeConfig( KConfigBase& );
	virtual bool readConfig( const KConfigBase& );

	/**
	 * Used by KUIAction to look up this action's accel id in its
	 * accelerator table.
	 * @internal
	 */
	int accelId() const { return _accelId; }

	/**
	 * Used by KUIAction to store this action's accel id in its
	 * accelerator table.
	 * @internal
	 */
	void setAccelId( int id ) { _accelId = id; }

	static uint stringToKey( const QString& keystr );
	static QString keyToString( uint key, bool i18n = false );

signals:

	void activate();
	
	/**
	 * Emitted when the user information (icon, tooltip, WhatsThis ) has
	 * been changed.
	 */
	void infoChanged();

	/**
	 * Emitted when the action expects the parent to set a widget-level
	 * accelerator.
	 */
	void globalAccel( KAction *, int accel );
	
	/**
	 * Emitted when the action expects the parent to remove any
	 * widget-level accelerators that may exist for this action.
	 */
	void removeAccel( KAction * );

private slots:
	/**
	 * Deletes the sender from the trigger list.
	 */
	void senderDead();

	/**
	 * Deletes the sender from the menu list.
	 */
	void menuDead();

	/**
	 * This is connected to all handled menus, and is called on the
	 * menu's activated signal.
	 */
	void menuActivated( int id );

};

#endif // SSK_KACTION_H
