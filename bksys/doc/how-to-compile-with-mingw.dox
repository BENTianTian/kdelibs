/** \page how-to-compile-with-mingw How to Compile with MingW

\section mingw-requirements Requirements

- Unpacking tools like WinZipÂ® (http://www.winzip.de/) or PowerArchiver (http://www.pctipp.ch/downloads/dl/15291.asp)
or unzip http://gnuwin32.sourceforge.net/packages/unzip.htm

- latest QT Windows release with Mingw compiler package 
	- download from http://www.trolltech.com/download/qt/windows.html
	- install Qt into c:\\Qt\\4.0.1
	- install MingW into c:\\Mingw 
	-	alternative MingW download http://prdownloads.sourceforge.net/mingw/MinGW-4.1.0.exe?download

- Python 2.4  
	- http://www.python.org/ftp/python/2.4.2/python-2.4.2.msi
	- install into c:\\Python24
	
- perl (is required because new dcopidl and other required scripts depends on perl) 
	- download from http://downloads.activestate.com/ActivePerl/Windows/5.8/ActivePerl-5.8.7.813-MSWin32-x86-148120.zip
	- install into c:\\Perl 

- sources from svn.kde.org 
  - download subversion client from http://subversion.tigris.org/files/documents/15/25364/svn-1.2.3-setup.exe
  - install
  - checkout source with svn co svn://anonsvn.Kde.org/home/kde/trunk/KDE/kdelibs

- install scons-mini.tar.bz2  
  - unpack the contents of kdelibs\bksys\scons-mini.tar.bz2 to kdelibs

- zlib 
	- download from http://gnuwin32.sourceforge.net/downlinks/zlib-bin-zip.php and 
	http://gnuwin32.sourceforge.net/downlinks/zlib-lib-zip.php
	- unpack to c:\\Mingw or where you have installed mingw

- giflib 
	- download from http://gnuwin32.sourceforge.net/downlinks/giflib-bin-zip.php
	  and http://gnuwin32.sourceforge.net/downlinks/giflib-lib-zip.php
	- unpack to c:\\Mingw or where you have installed mingw

- bzip2
	- download from http://gnuwin32.sourceforge.net/downlinks/bzip2-bin-zip.php 
	and http://gnuwin32.sourceforge.net/downlinks/bzip2-lib-zip.php
	- unpack to c:\\Mingw or where you have installed mingw

- libpng
	- download from http://gnuwin32.sourceforge.net/downlinks/libpng-bin-zip.php
		and http://gnuwin32.sourceforge.net/downlinks/libpng-lib-zip.php

- libjpeg
	- download from http://gnuwin32.sourceforge.net/downlinks/jpeg-bin-zip.php
	and http://gnuwin32.sourceforge.net/downlinks/jpeg-lib-zip.php

-	openssl 
	- download from http://www.slproweb.com/download/Win32OpenSSL-v0.9.8a.exe
	- install into c:\\OpenSSL 

- pcre library 
	- download http://gnuwin32.sourceforge.net/downlinks/pcre-bin-zip.php 
		and http://gnuwin32.sourceforge.net/downlinks/pcre-lib-zip.php
	- unpack to c:\\Mingw or where you have installed mingw

- gettext library 
	- download from http://gnuwin32.sourceforge.net/packages/gettext.htm
	- unpack to c:\\Mingw or where you have installed mingw

- agg library (instruction not complete)
	- download release 2.3 from http://www.antigrain.com/agg23.zip
	- unpack into c:\\agg23 
	- currently there is a packaging problem, which requires to move the include dir  
	into a agg2 subdir below c:\\agg23
	- compile agg23 
\code
cd c:\\agg23\\src
make
copy libagg.a c:\Mingw\lib
mkdir c:\Mingw\include\agg2
xcopy /S ..\include\* c:\Mingw\include\agg2
\endcode

- some not listed packages may be available on http://gnuwin32.sourceforge.net/packages.html

\section optional_components optional Components

- gdb (for debugging purpose) 
	- download from http://prdownloads.sourceforge.net/mingw/gdb-5.2.1-1.exe?download
	- unpack to c:\\Mingw or where you have installed mingw

- wget (for downloading additional packages)
	- download from http://gnuwin32.sourceforge.net/downlinks/wget-bin-zip.php
	- unpack to c:\\Mingw or where you have installed mingw

- msys 
	- download from http://prdownloads.sourceforge.net/mingw/MSYS-1.0.10.exe?download
	- install into c:\\MSYS\\1.0 

\section mingw-setup Setup

- open a command prompt or run start->execute "cmd.exe" 

- run the following commands from the cmd shell. Please note that if one of the above mentioned 
package is installed under a different directory, that you update the related pathes. 

\code
cd < kdelibs-source-root >
set MSYS=c:\MSYS\1.0
set QTDIR=c:\Qt\4.0.1
set QMAKESPEC=win32-g++
set MINGW=c:\Mingw
set PYTHON=c:\Python24
set PERL=c:\Perl
set PATH=%PYTHON%;%PATH%
set PATH=%QTDIR%\bin;%PATH%
set PATH=%MINGW%\bin;%PATH%
set PATH=%MSYS%\bin;%PATH%
set PATH=%PERL%\bin;%PATH%
:: for scons.bat 
set PATH=%CD%;%PATH%
\endcode 

\section mingw-configure Configure

In the above mentioned cmd shell run 
\code
scons configure prefix=c:\KDE4  with-libagg=c:\agg23
\endcode

if you like to add debugging informations into libraries and applications you should use 
\code
scons configure debug=1 prefix=c:\KDE4  with-libagg=c:\agg23
\endcode

\section mingw-compile Compile
run 
\code
scons 
\endcode 

\section mingw-install install applications 
run 
\code
scons install 
\endcode 

This will install kdelibs in c:\KDE4.

\section mingw-run run applications 
run 
\code
cd c:\KDE4
set PATH=%CD%\bin;%CD%\lib;%PATH%
start dcopserver 
\endcode 

To verify that dcopserver is running you may run 
\code
dcopfind -l -a *
\endcode

Now switch to the dcopserver windows: you can see a message indicating dcopserver has recognized the client.
\code
Debug: DCOP: register 'anonymous-xxx' -> number of clients is now 1
Debug: DCOP: unregister 'anonymous-xxxx'
\endcode

\section mingw-whats-next What's next 

If you get trouble you should contact mailto:kde-windows@kde.org 


\section mingw-debugging Debugging


requirements: installed gdb from mingw site 

gdb 


\code
type c:\.DCOP4server_*_NODISPLAY
tcp/BRAMSCHE1:25481
2020
set DCOPSERVER=tcp/BRAMSCHE1:25481 
set ICEAUTHORITY=c:\.ICEauthority

gdb dcopfind

r -l -a * 


\endcode

\section mingw-tips Tips & Tricks 
- changing configure attributes without recompiling the whole package. \n
	If some configuration settings are changed, scons recompute the dependencies 
	and recompiles the whole package, which could be avoided by using the MSYS \b touch tool. \n
	Say you have changed a setting in cache\\libpcre.cache.py and saved the original 
	file into cache\\libpcre.cache.py.bak, the following command will set the 
	timestamp of libpcre.cache.py to the time of the original file. 
\code
 touch -r cache\libpcre.cache.py.bak  cache\libpcre.cache.py
\endcode 



*/ 
