2003-10-24  Dirk Mueller  <mueller@kde.org>

	* rendering/render_form.cpp (updateFromElement): Fix coolo's commit (#61347)

2003-10-24  Germain Garand  <germain@ebooksfrance.org>
	* General scope of the change:
	  - bring back the NodeImpl_NSMask bits in id() for Attributes and XMLElements
	    => the cssselector need that to support CSS namespaces in an efficient way.
	    => fixes CSS selection for XML documents
	  - change Nodeimpl::Id registration mechanism: 
	    We tried to solve the DOM1/DOM2 NS methods compatibility problems
	    by registering the qualifiedName. However, this is doomed to  fail in other
	    places that relies on Ids because prefixes aren't  encoded in  the Ids and 
	    are irrelevant for NS nodes identification.
	    Instead, use registered aliases (see DocumentImpl::getId) to solve  
	    compatibility issues while maintaining a sound Id system.

        * css/cssstyleselector.cpp: change getId calls

        * css/parser.y: ditto

        * dom/dom_doc.cpp: change getId/implementation method calls
        (DOM::Document::createElement): check DOM exceptions
        (DOM::Document::createElementNS): ditto
        (DOM::Document::createAttribute): ditto
        (DOM::Document::createAttributeNS): ditto
        (DOM::Document::createDocumentFragment): ditto

        * dom/dom_element.cpp: change getId/implementation method calls

        * dom/dom_node.cpp: ditto

        * html/html_documentimpl.cpp:
        (HTMLDocumentImpl::createElement): check DOM exceptions

        * html/html_documentimpl.h: ditto 

        * html/html_elementimpl.cpp: use m_xhtml bool flag to distinguish HTML/XHTML elements

        * html/html_elementimpl.h:
        (DOM::HTMLElementImpl::HTMLElementImpl): init m_xhtml
        (DOM::HTMLElementImpl::setXHtmlElement): set/retrieve m_xhtml (non-virtual)
        (DOM::HTMLElementImpl::isXHtmlElement): ditto

        * html/htmlparser.cpp: change getValue/setValue syntax

        * html/htmltokenizer.h: change getId calls

        * rendering/render_frames.cpp: ditto

        * xml/dom_docimpl.cpp: IdNameMapping is now a struct holding QDicts. getId dynamically choses
            the struct to be used based on it's first argument (ElementId, AttributeId, NamespaceId)
        (DOMImplementationImpl::createDocument): factor qualifiedName checking code
        (DocumentImpl::createAttribute): New. Mirrors DOM.
        (DocumentImpl::createAttributeNS): ditto
        (DocumentImpl::createElementNS): check exceptions in qualifiedName

        * xml/dom_docimpl.h: IdNameMapping change

        * xml/dom_elementimpl.h:
        * xml/dom_elementimpl.cpp: 
        (AttrImpl::AttrImpl): no more m_namespaceURI, now dynamically retrieved with getName(NamespaceId...)
        (AttrImpl::nodeName): now built from prefix + localName
        (ElementImpl::setAttributeNS): check exceptions on qualifiedName
        (XMLElementImpl::XMLElementImpl): no more m_namespaceURI, now dynamically retrieved with getName(NamespaceId...)
             restore m_id (as in 3_1_BRANCH) for correct CSS selection on XML Elements

        * xml/dom_elementimpl.h:
        (DOM::checkQualifiedName): inline DOM helper, factoring qualifiedName exception checkings
        (DOM::splitPrefixLocalName): inline DOM helper, avoids scanning qualifiedName multiple times

        * xml/dom_nodeimpl.h:
        (DOM::NodeImpl::): enum IdType for (ElementId, AttributeId, NamespaceId)

        * xml/xml_tokenizer.cpp:
        (XMLHandler::startElement): use the qualifiedName instead of the localName
            in order to know the prefix if any.

2003-10-24  Stephan Kulow  <coolo@kde.org>

	* rendering/render_form.cpp (updateFromElement): support disabled attribute
	select option (#61347)

2003-10-24  Lars Knoll <knoll@kde.org>
	* Make the <button> element work correctly
	* remove lot's of addCSSProperty calls and moved the
	definitions to the default style sheet. This made
	it possible to remove quite some code in html_formimpl.cpp

2003-10-24  Lars Knoll <knoll@kde.org>
	* A few more small fixes to Html event handlers. We can unfortunately not 
	easily get the events for <select> and <textarea> correct, as they use
	either modality or QScrollView (but doesn't work in 3.1.x neither).	

2003-10-24  Lars Knoll <knoll@kde.org>
	* Hopefully fixed most repainting problems.

2003-10-24  Lars Knoll <knoll@kde.org>
	* Fix most of the form related regressions introduced by my
	changes earlier on. onfoo event handlers are now fired in a
	way that is mostly compatible to IE for <input type=xxx>.
	Other form elements might still need some work.

2003-10-23  Lars Knoll <knoll@kde.org>
	* Fix nodeAtPoint for elements that have no child (makes links on images
	work again)
	* Fix null pointer dereferencing in RenderLayer::updateHoverActiveState

2003-10-23  Stephan Kulow  <coolo@kde.org>

	* html/htmltokenizer.cpp (processListing): do not discard all white space
	   in textareas (#62076)

	* css/cssstyleselector.cpp (applyRule): if the first font isn't found,
		continue looking (#60556)

2003-10-22  Dirk Mueller  <mueller@kde.org>

	* rendering/render_box.cpp (calcAbsoluteHorizontal): fixed containing block
	height calculation for position:fixed.
	(paintBackground): fix negative backgroundx/y positioning. fix 
	background-attachment: fixed (http://placenamehere.com/safari/fixedbgtest.html)
	avoid division by zero. fix table background positioning (#49336).
	http://c133.org/testcase1.html, http://c133.org/testcase2.html,
	http://c133.org/testcase3.html

	* misc/loader.cpp (pixmap_size/valid_rect): return useful values for the error image
	to avoid that its shown as null pixmap (#42233).

2003-10-21  Dirk Mueller  <mueller@kde.org>

	* rendering/render_list.cpp (calcListValue): skip anonymous block while searching
	for the <ol> block. Thanks to the Maksim regression testengine.

	* rendering/render_object.cpp (setOverhangingContents): refine assert to avoid
	crash on bananalotto.com. Adjust to changed containingBlock() behavior.

	* html/html_listimpl.cpp (attach): fix thinko. Revert Safari merge which
	broke <ul><p><li>. Thanks to Maksim for noticing.
	
	* rendering/render_list.cpp (calcListValue): handle <ul><p><li> again.

	* rendering/render_box.cpp (repaint): revert commit which introduced another
	4 bytes overhead. No need to waste memory here. 

	* rendering/render_object.cpp (setStyle): schedule repaint on old object
	when the new outline is going to be thinner.

	* rendering/render_form.cpp (RenderCustomButton): Remove.

	* rendering/render_replaced.cpp (RenderReplaced::checkSelectionPoint): Remove.
	RenderObject/RenderBox'es implementation *must* work. No need to add useless code.

	* rendering/render_replaced.cpp (RenderReplacedBlock): Remove.

	* html/html_formimpl.cpp (HTMLButtonElement::attach): Remove.

	* rendering/render_box.cpp (calcWidth): implement CSS min-width/max-width 
	support (#12994).

	* rendering/render_block.cpp (renderName): don't crash when style() is 0L.

	* rendering/render_object.h (class RenderObject): remove isRunIn() / isCompact().
	We can use style()->display() here, and it is inconsistent with the other is*
	members which usually do not access style() (that can be 0L).

	* rendering/render_object.cpp (createObject): create RenderBlock for INLINE_BLOCK.

	* css/html4.css (BUTTON/LEGEND): set display: inline-block.

	* css/cssstyleselector.cpp (styleForElement): handle COMPACT/RUN_IN/INLINE_BLOCK
	(applyRule): handle INLINE_BLOCK.

	* css/makeprop: don't export getPropertyName. declare it.

	* xml/dom_nodeimpl.cpp (replaceChild/appendChild/removeChild): 
	Reverting patch which invalidated layout on child when it was attached.

2003-10-20  Lars Knoll <knoll@kde.org>

	* fix most issues with the layering code by 
	merging and adapting safaris implementation
	* fix a bug in RenderBox::calcAbsoluteVertical(), that probably
	has destroyed a lot of layouts.
	* don't add the scroll offset in RenderBox::paintBoxDecorations()

2003-10-20  Dirk Mueller  <mueller@kde.org>

	* css/html4.css (UL,MENU,DIR,OL): don't set flow-around-floats (#53429).

2003-10-20  David Faure  <faure@kde.org>

	* xml/dom_docimpl.cpp (defaultEventHandler): set current target to 0 for window events.
	* ecma/kjs_events.cpp (handleEvent): Window events like window.onload window.onresize etc.
	must have 'this' set to the window (not to the document).

2003-10-20  Dirk Mueller  <mueller@kde.org>

	* rendering/render_form.cpp (layout): set IE-CSS-extension style palette
	on <textarea> scrollbars (#56532).

	* rendering/render_layer.cpp (showScrollbar): set IE-CSS-extension styled
	palette on the overflow=scroll/auto scrollbars.
	
	* rendering/render_frames.cpp (close): reorder. updateWidget() might
	delete this.

	* html/html_formimpl.cpp (value): return the DOM "defaultValue" when we have
	no renderer.
	(encoding): submit textarea even if display=none (#49829)

	* ecma/kjs_dom.cpp (getValueProperty): add bindings to clientWidth/Height,
	scrollWidth/height,offsetTop/left,offsetWidth/Height,offsetParent.
	(getValueProperty): don't map body to canvas (#59676).

	* split up borderSpacing into a horizontal and vertical border spacing so that
	tables can have assymmetric spacing.

	* html/htmlparser.cpp (insertNode): don't set css list position on stray <li>
	elements. its an inherited attribute, and might mess up rendering of nested
	<ul>/<ol> constructs.

	* rendering/render_list.cpp: ListItems are no longer floats.

2003-10-19  Dirk Mueller  <mueller@kde.org>

	* html/html_headimpl.cpp (childrenChanged): make sure that we respect the media
	attribute of <style> (#47786).

2003-10-19  Harri Porten  <porten@kde.org>

	* html/html_documentimpl.cpp (setCookie): use latin1 encoding to
	have a 1:1 translation of the lowest Unicode row.

2003-10-19  Dirk Mueller  <mueller@kde.org>

	* html/htmltokenizer.cpp (parseEntity): when entity is terminated and result
	is not-ascii, require ending ';'. khtmltests/html/parser/obscure_entity_tokenizing.html

2003-10-18  Dirk Mueller  <mueller@kde.org>

	* css/cssstyleselector.cpp (checkOneSelector): fix selector list matching
	when substrings match in a word. we have to test if we matched a complete word,
	otherwise its not a match.

	* html/htmltokenizer.cpp (parseEntity): don't do the magic-unterminated-entities-IE-hack
	when inside a tag. fixes <a href="/foo.html&section=2">

	* html/htmlparser.cpp (insertNode): fix typo (#66200).

	* rendering/render_table.cpp (seekCell): make static. check for out of bounds.
	* rendering/render_table.cpp (RenderTableSection::checkSelectionPoint): fix
	brain damage (#66198).

2003-10-14  David Faure  <faure@kde.org>

	* misc/htmltags.in, html/htmlparser.cpp, html/dtd.cpp: added very basic
	support for <ilayer>, much like <layer>, as a generic block element.
	Fixes sites looking for such elements by ID, like www.sp ort1.de's diashow.

2003-10-14  Wilco Greven <greven@kde.org>
	* ecma/kjs_window.cpp (tryCall): Scroll should do the same as
	ScrollTo, not ScrollBy. #63301

2003-10-14  David Faure  <faure@kde.org>

	* xml/dom_nodeimpl.cpp (handleLocalEvents): Fixed infinite loop in
	NodeImpl::handleLocalEvents due to braindead QPtrList behavior. #61623.

2003-10-10  Harri Porten  <porten@kde.org>

	* ecma/kjs_html.cpp: title and alt attributes should never be null

	* ecma/kjs_html.cpp (toString): make use of alt attribute if set

2003-10-09  Dirk Mueller  <mueller@kde.org>

	* ecma/kjs_dom.cpp (putValueProperty): don't scroll layer when there is is nothing
	to scroll. (David Hyatt)

	* rendering/render_object.cpp (scrollHeight): return overflowHeight() not contentHeight()
	by default. (David Hyatt)
	
	* rendering/render_object.cpp (scrollWidth): return overflowWidth() not contentWidth()
	by default. (David Hyatt)

	* html/htmltokenizer.cpp (parseEntity): Improve tokenizing of unterminated
	entities.

2003-10-09  Leo Savernik  <l.savernik@aon.at>

	* rendering/render_object.{cpp,h} (getTextDecorationColors),
	rendering/render_text.{cpp,h} (InlineTextBox::paintDecoration, RenderText::paintObject),
	rendering/render_style.{cpp,h},
	css/cssstyleselector.cpp (styleForElement):
	fixed text-decoration issues by merging RenderObject::getTextDecorationColor
	from Safari, changed CSSStyleSelector appropriately

	* rendering/render_text.{cpp,h} (InlineTextBox::paintDecoration),
	rendering/font.{cpp,h} (drawText, drawDecoration):
	fixed drawing of text decoration within selected text

	* rendering/render_text.cpp (paintObject),
	rendering/font.{cpp,h} (drawText):
	 fixed overspilling of selection with unusual line-height configurations

2003-10-07 Germain Garand <germain@ebooksfrance.org>

	* khtmlview.cpp (viewportMouseReleaseEvent/viewportMouseMoveEvent): forward
	meaningful peripheral mouse events to focused widget to restore correct
	mouse handling in proxied widgets. #65216 (selection part)

	* rendering/render_replaced.cpp (handleEvent):
	map MOUSEOUT/MOUSEOVER DOM events to Enter/Leave events. Honours stacking
	while mouse buttons are pressed.

	* html/html_formimpl.cpp (defaultEventHandler): forward MOUSEOUT/MOUSEOVER
	to handleEvent

2003-10-06  Daniel Molkentin  <molkentin@kde.org>

	* ecma/kjs_window.cpp: added window.open targets _self and replace

2003-10-06  David Faure  <faure@kde.org>

	* ecma/kjs_html.cpp: Fixed crash due to onload=null in the onload event
	handler (#57195).

2003-10-06  Dirk Mueller  <mueller@kde.org>

	* khtml_part.cpp (jScript): remove broken #ifdef'ery.
	(popupMenu): add a QGuardedPtr to detect the case when we're destructed
	before the popup menu is closed. avoid accessing any "this" then.
	#43389

	* khtmlview.cpp (viewportMousePressEvent): reorder afaik unrelated code
	to make the one call entering a local event loop the last, so that we can
	cleanly exit when it the view is already deleted.

	* khtml_ext.cpp (KHTMLPopupGUIClient): pass QObject parent

2003-10-05  Dirk Mueller  <mueller@kde.org>

	* ecma/kjs_css.cpp (tryPut): Fix CSSValue refcounting error causing major
	memory leak.

	* dom/css_value.cpp/h (class CSSStyleDeclaration): make accessors const. Add
	binary compatibility wrappers.

2003-10-04 Germain Garand <germain@ebooksfrance.org>

	* rendering/render_replaced.cpp (baselinePosition): use setPos to adjust
	layer position if needed. Fix relatively positioned widgets not being painted.

2003-10-04  Dirk Mueller  <mueller@kde.org>

	* html/htmlparser.h (class KHTMLParser): keep "current" NodeImpl referenced
	to avoid ugly crashes when DHTML deletes the node while we're still parsing.
	#57020, testcase alja.html

	
2003-10-04  Dirk Mueller  <mueller@kde.org>
	
	* khtml_settings.cc (init): change default for JS debugger to off.

	* html/html_elementimpl.cpp (createContextualFragment): Fix memory
	leaks. Adjust code style. Adjust return to avoid dangling return leaks.

	* xml/dom2_rangeimpl.cpp (createContextualFragment): adjust return type.

	* html/html_elementimpl.h (class HTMLElementImpl): adjust return type.

	* dom/dom2_range.cpp (createContextualFragment): Adjust to DocumentFragment 
	return type.

	
