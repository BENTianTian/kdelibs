
This is a short document with the progress of patches in the Safari codebase
being merged into khtml. 

its ordered by directory and by files. Add here the parts that cannot be
immediately merged and need further negotation. 

Its recommended to add a //FIXME_SAFARI comment to places which need merging
in the khtml sourcecode. 

===========================================================================
# css
===========================================================================

- the font changes (except for the konq-body property) are still not merged.
 They are partly not easily portable and I don't understand some parts of them.
 a small part is merged but still unused (seperate font sizes for fixed fonts)

- The Apple specific parts with their DPI settings.

- most of the html4.css changes are not in. I have already added the
  @konq-quirks part

===========================================================================
# dom
===========================================================================

- dom2_events.cpp / .h: layer and page extensions to event interface. 
  to be merged with changes in rendering, ecma and xml

- dom2_range.cpp / .h: createContextualFragment, requires merging of the
  changes xml / html

- dom_doc.cpp / .h: preferred Stylesheet stuff. how does this correlate
  to the changes in css_stylesheet.h / cpp ? <- It's independent (lars).
  requires merging of the impl in xml/html first

- weird change in dom_doc.cpp: doctype()

- dom_string.h: removal of virtual destructor can't be merged, BIC. 
  doesn't make sense anyway, as one might want to inherit from it. 
  if it is a speed problem more stuff has to be handled with DOMStringImpl*

- html_document.cpp / .h setPolicyBaseURL for cooke handling. euhm?

===========================================================================
# ecma
===========================================================================


===========================================================================
# html
===========================================================================


===========================================================================
# misc
===========================================================================

- decoder.cpp/.h: changes in APPLE_CHANGES #ifdef that make decoder
  being a null wrapper just using unicode directly instead of working
  on charset specific 8bit data. 

- htmlhashes.cpp: patches to fix compiler warning. which ?

- htmltags.in: removal of <-konqblock>, to be  merged after 3.1

- loader.cpp/loader.h: many improvements to memory cache handling. 
  will be reviewed and merged. 
  
  some code removal in APPLE_CHANGES

===========================================================================
# rendering
===========================================================================

===========================================================================
# xml
===========================================================================

- dom2_eventsimpl.cpp: computeLayerPos, requires mering of rendering/

- dom2_rangeimpl.cpp: crateContextualFragmet.. merging needed

- dom_docimpl.cpp: 
    renderArena support.. merging needed. 
    lowercase attribute names.. requires confirmation
    preferred style sheet / delay recalcing style selector till
    all external stylesheets are loaded. 

- dom_nodeimpl.cpp: rendererNeedsClose. I don't fully understand this
  seems to be only required for the avoid-unstyled-elements-flicker
  restoreState -> QStringList change. will merge. 
  setLayouted(false) calls in attach(). this should imho be handled
  in the rendering tree. needs feedback. 

- dom_nodeimpl.cpp / .h: setMalformed() hack. 
  isInline() fixes. 
  previous/nextrenderer addition

- dom_stringimpl.cpp: toLengthArray alternative implementation not merged

- dom_textimpl.cpp: setNodeValue: whitespace nuking needs merged!!

- xml_tokenizer.cpp/.h: completely skipped. unfinished work. 

- dom_docimpl.cpp: micro optimisation regarding if() clause.  Checking
  .isEmpty() checks both .isNull() and == "", and it's cheaper than string
  compares.

