/*
 * This file is part of the DOM implementation for KDE.
 *
 * Copyright (C) 2003 Lars Knoll (knoll@kde.org)
 *
 * $Id$
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

/* This file is mostly data generated by flex. Unfortunately flex
   can't handle 16bit strings directly, so we just copy the part of
   the code we need and modify it to our needs.

   Most of the defines below are to make sure we can easily use the
   flex generated code, using as little editing as possible.

   The flex syntax to generate the lexer are more or less directly
   copied from the CSS2.1 specs, with some fixes for comments and
   the important symbol.

   To regenerate, run flex on tokenizer.flex. After this, copy the
   data tables and the YY_DECL method over to this file. Remove the
   init code from YY_DECL and change the YY_END_OF_BUFFER to only call
   yyterminate().

*/

// --------- begin generated code -------------------


#define YY_NUM_RULES 46
#define YY_END_OF_BUFFER 47
static yyconst short int yy_accept[293] =
    {   0,
        0,    0,    0,    0,   47,   45,    5,    5,   45,   45,
       45,   45,   45,   45,   45,   39,   45,   45,   45,   11,
       11,   45,   45,    4,    3,    4,    5,    0,    0,    0,
       10,    0,   12,    0,    0,    0,    0,   39,    1,   38,
        0,   39,    0,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   34,    0,    0,    0,    0,    0,
        0,    0,   11,   11,   42,   11,    0,    0,   11,    9,
        8,    2,    0,    0,    0,   10,    0,    0,   12,   12,
        0,    0,   10,    0,    0,    7,   37,   37,   37,    0,
       25,   37,   22,   23,   37,   35,   27,   37,   26,   33,

       29,   28,   24,   37,    0,    0,    0,    0,    0,    0,
        0,   11,   11,   11,   43,   43,   11,    0,    0,    0,
       12,    0,    0,   37,   37,   37,   30,   37,   36,   31,
        6,    0,    0,    0,    0,    0,    0,   11,   11,    0,
       43,   43,   43,   42,    0,    0,   12,    0,   37,   37,
       32,    0,    0,    0,    0,    0,   14,   11,   11,   44,
       43,   43,   43,   43,    0,    0,    0,    0,   41,    0,
        0,    0,   12,    0,   37,   37,    0,    0,    0,    0,
       15,   11,   11,   44,   43,   43,   43,   43,   43,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   41,    0,

        0,    0,    0,   12,    0,   37,   37,    0,    0,    0,
       13,   11,   11,   44,   43,   43,   43,   43,   43,   43,
        0,   40,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   12,    0,   37,   37,    0,
        0,    0,   17,    0,   11,   44,   43,   43,   43,   43,
       43,   43,   43,    0,   40,    0,    0,    0,   40,    0,
        0,    0,    0,   37,    0,    0,    0,    0,   44,    0,
        0,    0,   21,    0,    0,    0,   16,   44,    0,    0,
        0,    0,   18,    0,    0,    0,    0,   19,   20,    0,
        0,    0

    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    4,    5,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   10,   12,   13,
       14,   15,   16,   10,   17,   18,   19,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   10,   10,   21,
       22,   23,   24,   25,   28,   29,   30,   31,   32,   33,
       34,   35,   36,   27,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,   47,   48,   27,   49,   27,   50,
       10,   26,   10,   10,   27,   10,   28,   29,   30,   31,

       32,   33,   34,   35,   36,   27,   37,   38,   39,   40,
       41,   42,   43,   44,   45,   46,   47,   48,   27,   49,
       27,   50,   10,   51,   10,   52,    1,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,

       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53
    } ;

static yyconst int yy_meta[54] =
    {   0,
        1,    2,    3,    3,    3,    4,    4,    4,    4,    4,
        4,    4,    5,    4,    4,    4,    6,    4,    4,    7,
        4,    4,    4,    8,    4,    9,    9,    7,    7,    7,
        7,    7,    7,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        4,    4,    9
    } ;

static yyconst short int yy_base[318] =
    {   0,
        0,    0,   51,   52,  697, 1546,   54,   59,   66,   65,
      669,   62,  677,  673,  669,   92,  676,   59,   76,   64,
       67,  660,  659, 1546, 1546,  661,  111,  144,  633,   71,
     1546,  179,  644,  123,   73,  211,  646,   64, 1546, 1546,
      648,    0,  137,  628,   55,  132,  136,  133,  145,   60,
       52,  134,  148,  135,  627,  635,  614,  615,  608,  609,
      602,  603,  163,  243, 1546,  175,  197,  606,  180, 1546,
     1546, 1546,  587,  195,  164,  178,  275,  307,  602,  339,
      256,  207,  208,  371,  403, 1546,  588,  435,  568,  293,
      565,  166,  564,  563,  196,  562,  553,  210,  551,  550,

      549,  535,  513,  165,  521,  496,  508,  495,  492,  501,
      497,  389,  225,  467,  233,  506,  239,  488,  227,  460,
      474,  258,  481,  488,  502,  520,  501,  235,  489,  460,
     1546,  445,  440,  437,  441,  445,  447,  513,  527,  534,
      238,  454,  453,  566,  432,  553,  567,  573,  587,  593,
      449,  419,  414,  441,  413,  428, 1546,  607,  613,  627,
      268,  430,  429,  428,  659,  684,  288,  274, 1546,  709,
      405,  646,  671,  716,  723,  730,  433,  417,  414,  368,
     1546,  737,  744,  751,  270,  386,  366,  363,  362,  314,
      321,  346,  783,  276,  815,  847,  872,  897,  922,  947,

      979,  357,  769,  801,  834,  859,  884,  348,  338,  354,
     1546,  909,  986,  993,  273,  354,  338,  337,  329,  310,
      352, 1546,  385,  338, 1025, 1050, 1082,  386,  368, 1114,
     1139, 1171, 1012,  292, 1068, 1101, 1157,  422, 1178,  299,
      283,  271, 1546,  268,  440, 1185,  276, 1546, 1546, 1546,
     1546, 1546, 1546, 1217,  355,  387, 1204, 1242,  404,  448,
     1229, 1243,  245,  606,  259,  229,  226,  226, 1249, 1263,
     1269, 1283, 1546,  216,  200,  155, 1546, 1546, 1289, 1303,
     1309,   99, 1546,   43, 1323, 1329, 1343, 1546, 1546, 1349,
     1363, 1546, 1396, 1404, 1408, 1416, 1422, 1427, 1435, 1441,

     1449, 1455, 1459, 1465, 1468, 1473, 1477, 1480, 1487, 1491,
     1498, 1506, 1514, 1518, 1525, 1533, 1537
    } ;

static yyconst short int yy_def[318] =
    {   0,
      292,    1,  293,  293,  292,  292,  292,  292,  292,  294,
      295,  296,  292,  292,  292,  292,  292,  292,  297,  298,
      298,  292,  292,  292,  292,  292,  292,  292,  292,  294,
      292,  299,  295,  300,  296,  301,  292,   16,  292,  292,
      292,   16,  302,  303,  303,  303,  303,  303,  303,  303,
      303,  303,  303,  303,  303,  292,  292,  292,  292,  292,
      292,  292,  298,  298,  292,  298,  304,  305,  298,  292,
      292,  292,  292,  294,  294,  294,  294,  299,  295,  295,
      296,  296,  296,  296,  301,  292,  303,  303,  303,  306,
      303,  303,  303,  303,  303,  303,  303,  303,  303,  303,

      303,  303,  303,  303,  292,  292,  292,  292,  292,  292,
      292,   64,  298,   64,  307,  292,  298,  292,  294,   77,
       80,  296,   84,   88,  303,   88,  303,  303,  303,  303,
      292,  292,  292,  292,  292,  292,  292,   64,  114,  292,
      308,  292,  292,  309,  292,   77,   80,   84,   88,  126,
      303,  292,  292,  292,  292,  292,  292,   64,  114,  292,
      310,  292,  292,  292,  309,  309,  311,  312,  292,  313,
      292,   77,   80,   84,   88,  126,  292,  292,  292,  292,
      292,   64,  114,  292,  314,  292,  292,  292,  292,  292,
      311,  292,  315,  312,  316,  309,  309,  309,  309,  309,

      313,  292,   77,   80,   84,   88,  126,  292,  292,  292,
      292,   64,  114,  292,  317,  292,  292,  292,  292,  292,
      292,  292,  311,  311,  311,  311,  315,  312,  312,  312,
      312,  316,  200,  292,   77,   80,   84,  303,  126,  292,
      292,  292,  292,  292,  212,  292,  292,  292,  292,  292,
      292,  292,  292,  311,  311,  311,  226,  312,  312,  312,
      231,  200,  292,  303,  292,  292,  292,  292,  292,  226,
      231,  200,  292,  292,  292,  292,  292,  292,  226,  231,
      200,  292,  292,  292,  226,  231,  200,  292,  292,  226,
      231,    0,  292,  292,  292,  292,  292,  292,  292,  292,

      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292
    } ;

static yyconst short int yy_nxt[1600] =
    {   0,
        6,    7,    8,    7,    7,    7,    9,   10,   11,    6,
        6,   12,    6,    6,    6,    6,   13,   14,   15,   16,
       17,    6,    6,    6,   18,   19,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   21,   20,   20,   20,
       22,   23,   20,   25,   25,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   26,   26,   28,   28,   28,
       28,   28,   31,   31,  289,   57,   65,   90,   31,   65,
       90,  292,   68,   38,   31,   90,   98,   36,   58,   67,
       32,   59,   67,   91,   60,   64,   32,   61,   36,   97,

       62,   29,   40,   64,   64,   64,   64,   64,   64,   41,
       69,   42,   27,   27,   27,   27,   27,   43,   44,   44,
       44,   45,   46,   47,   44,   48,   49,   50,   51,   44,
       52,   44,   44,   53,   44,   54,   55,   44,   44,   44,
       44,   44,   80,  288,   44,   28,   28,   28,   28,   28,
       80,   80,   80,   80,   80,   80,   88,   90,   90,   90,
       90,   90,  104,   92,   88,   88,   88,   88,   88,   88,
       90,   31,   99,   90,   93,   65,   95,  101,  100,   29,
       30,   30,   30,   74,   94,   31,   76,   65,   67,   32,
       90,   90,   65,  102,   96,  130,  103,   30,   77,  127,

       67,  284,   31,   32,   78,   67,   77,   77,   77,   77,
       77,   77,   35,   35,   35,   81,  114,  117,   31,   31,
       32,   90,   83,  128,  114,  114,  114,  114,  114,  114,
       84,  283,   36,   36,   31,   90,   85,   65,   84,   84,
       84,   84,   84,   84,   63,   63,   63,   63,   63,  140,
       67,  144,   32,  282,  140,   65,  142,  277,   35,  129,
       90,  162,  112,  276,   67,  151,  275,   31,   67,   31,
      112,  112,  112,  112,  112,  112,   75,  119,  119,  119,
       75,   36,   31,   36,  140,  192,  140,  192,  274,  140,
      273,  186,  140,  216,  120,  192,  248,  268,  267,  195,

       32,  195,  120,  120,  120,  120,  120,  120,   30,   30,
       30,   74,  126,  193,   76,  190,  190,  190,  190,  190,
      126,  126,  126,  126,  126,  126,   77,  169,  192,  266,
      265,  263,   78,  253,   77,   77,   77,   77,   77,   77,
       79,   79,   79,   79,   79,  192,  193,  221,  221,  221,
      221,  221,  252,  221,  221,  221,  221,  221,  121,  222,
      251,  250,  192,  193,   34,  222,  121,  121,  121,  121,
      121,  121,   82,  122,  122,  122,   82,  249,  240,  192,
      193,  244,   31,  243,  234,  220,  219,  191,  194,  218,
      123,  241,  192,  195,  192,  242,   36,  192,  123,  123,

      123,  123,  123,  123,   35,   35,   35,   81,  138,  217,
      193,  195,  193,  211,   83,  192,  138,  138,  138,  138,
      138,  138,   84,   87,   87,   87,   87,   87,   85,  195,
       84,   84,   84,   84,   84,   84,   87,   87,   87,   87,
       87,  113,  113,  113,  113,  113,  210,   90,  209,  208,
      202,  189,  188,  187,  124,  181,  180,  179,  178,  192,
       90,  177,  124,  124,  124,  124,  124,  124,  113,  113,
      113,  113,  113,  195,   90,  171,  164,  163,  157,  146,
      156,  155,  154,  153,  152,   90,  139,  146,  146,  146,
      146,  146,  146,  147,  139,  139,  139,  139,  139,  139,

      148,  147,  147,  147,  147,  147,  147,  149,  148,  148,
      148,  148,  148,  148,   90,  149,  149,  149,  149,  149,
      149,  125,  125,  125,  125,  125,   90,   90,  145,  143,
      137,  136,  158,  135,  134,  133,  132,  131,   90,  150,
      158,  158,  158,  158,  158,  158,  159,  150,  150,  150,
      150,  150,  150,  160,  159,  159,  159,  159,  159,  159,
       90,  160,  160,  160,  160,  160,  160,  165,  165,  165,
      165,  165,  172,  167,   90,   90,   90,  168,   90,  169,
      172,  172,  172,  172,  172,  172,  173,   90,   90,   90,
       90,  170,  174,   90,  173,  173,  173,  173,  173,  173,

      174,  174,  174,  174,  174,  174,  175,  125,  125,  125,
      125,  125,  176,   90,  175,  175,  175,  175,  175,  175,
      176,  176,  176,  176,  176,  176,  182,   34,  118,  116,
      111,   90,  183,  110,  182,  182,  182,  182,  182,  182,
      183,  183,  183,  183,  183,  183,  184,  109,  108,  107,
      106,  105,   90,   90,  184,  184,  184,  184,  184,  184,
      165,  165,  165,  165,  165,  203,  167,   38,   86,   34,
      168,   73,  169,  203,  203,  203,  203,  203,  203,   72,
       71,   70,   56,   39,  170,  190,  190,  190,  190,  190,
      204,  292,   38,   37,   34,  292,  292,  169,  204,  204,

      204,  204,  204,  204,  292,  292,  292,  292,  292,  170,
      190,  190,  190,  190,  196,  292,  198,  292,  292,  292,
      198,  198,  199,  292,  292,  292,  292,  292,  200,  292,
      292,  292,  292,  292,  201,  205,  200,  200,  200,  200,
      200,  200,  206,  205,  205,  205,  205,  205,  205,  207,
      206,  206,  206,  206,  206,  206,  212,  207,  207,  207,
      207,  207,  207,  213,  212,  212,  212,  212,  212,  212,
      214,  213,  213,  213,  213,  213,  213,  292,  214,  214,
      214,  214,  214,  214,  191,  191,  191,  223,  235,  292,
      225,  292,  292,  292,  292,  292,  235,  235,  235,  235,

      235,  235,  226,  292,  292,  292,  292,  292,  227,  292,
      226,  226,  226,  226,  226,  226,  194,  194,  194,  228,
      236,  292,  292,  292,  292,  292,  230,  292,  236,  236,
      236,  236,  236,  236,  231,  292,  292,  292,  292,  292,
      232,  292,  231,  231,  231,  231,  231,  231,  190,  190,
      190,  190,  190,  237,  292,  292,  292,  292,  292,  292,
      169,  237,  237,  237,  237,  237,  237,  292,  292,  292,
      292,  292,  170,  190,  190,  190,  190,  190,  238,  292,
      292,  292,  292,  292,  292,  169,  238,  238,  238,  238,
      238,  238,  292,  292,  292,  292,  292,  170,  190,  190,

      190,  190,  190,  239,  292,  292,  292,  292,  292,  292,
      169,  239,  239,  239,  239,  239,  239,  292,  292,  292,
      292,  292,  170,  190,  190,  190,  190,  190,   66,  292,
      292,  292,  292,  292,  292,  169,   66,   66,   66,   66,
       66,   66,  292,  292,  292,  292,  292,  170,  196,  196,
      196,  196,  196,  292,  292,  292,  292,  292,  292,  292,
      169,  292,  292,  292,  292,  292,  233,  292,  292,  292,
      292,  292,  170,  292,  233,  233,  233,  233,  233,  233,
      190,  190,  190,  190,  196,  292,  198,  292,  292,  292,
      198,  198,  199,  292,  292,  292,  292,  292,  200,  292,

      292,  292,  292,  292,  201,  245,  200,  200,  200,  200,
      200,  200,  246,  245,  245,  245,  245,  245,  245,  292,
      246,  246,  246,  246,  246,  246,  254,  221,  221,  221,
      254,  262,  192,  292,  292,  292,  292,  292,  255,  262,
      262,  262,  262,  262,  262,  292,  292,  292,  292,  292,
      193,  224,  256,  256,  256,  224,  292,  192,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  257,
      292,  292,  292,  292,  292,  193,  292,  257,  257,  257,
      257,  257,  257,  191,  191,  191,  223,   30,  292,  225,
      292,  292,  292,  292,  292,   30,   30,   30,   30,   30,

       30,  226,  292,  292,  292,  292,  292,  227,  292,  226,
      226,  226,  226,  226,  226,  258,  221,  221,  221,  258,
       33,  292,  292,  292,  292,  192,  292,  259,   33,   33,
       33,   33,   33,   33,  292,  292,  292,  292,  292,  195,
      229,  260,  260,  260,  229,  292,  292,  292,  292,  292,
      192,  292,  292,  292,  292,  292,  292,  292,  261,  292,
      292,  292,  292,  292,  195,  292,  261,  261,  261,  261,
      261,  261,  194,  194,  194,  228,   35,  292,  292,  292,
      292,  292,  230,  292,   35,   35,   35,   35,   35,   35,
      231,  292,  292,  292,  292,  292,  232,  264,  231,  231,

      231,  231,  231,  231,  269,  264,  264,  264,  264,  264,
      264,  292,  269,  269,  269,  269,  269,  269,  254,  221,
      221,  221,  254,  270,  192,  292,  292,  292,  292,  292,
      255,  270,  270,  270,  270,  270,  270,  292,  292,  292,
      292,  292,  193,  258,  221,  221,  221,  258,  271,  292,
      292,  292,  292,  192,  292,  259,  271,  271,  271,  271,
      271,  271,  272,  292,  292,  292,  292,  195,  278,  292,
      272,  272,  272,  272,  272,  272,  278,  278,  278,  278,
      278,  278,  279,  292,  292,  292,  292,  292,  280,  292,
      279,  279,  279,  279,  279,  279,  280,  280,  280,  280,

      280,  280,  281,  292,  292,  292,  292,  292,  285,  292,
      281,  281,  281,  281,  281,  281,  285,  285,  285,  285,
      285,  285,  286,  292,  292,  292,  292,  292,  287,  292,
      286,  286,  286,  286,  286,  286,  287,  287,  287,  287,
      287,  287,  290,  292,  292,  292,  292,  292,  291,  292,
      290,  290,  290,  290,  290,  290,  291,  291,  291,  291,
      291,  291,  166,  292,  292,  292,  292,  292,  191,  292,
      166,  166,  166,  166,  166,  166,  191,  191,  191,  191,
      191,  191,  194,  292,  292,  292,  292,  292,  292,  292,
      194,  194,  194,  194,  194,  194,   24,   24,   24,   24,

       24,   24,   24,   24,   24,   30,  292,   30,   30,   30,
       30,   30,   30,   33,   33,  292,   33,   35,  292,   35,
       35,   35,   35,   35,   35,   63,   63,   63,   63,   63,
       63,   66,   66,   66,  292,   66,   75,   75,   75,   75,
       75,   75,   75,   75,   79,   79,   79,   79,   79,   79,
       82,   82,   82,   82,   82,   82,   82,   82,   87,   87,
       87,   87,   87,   87,   89,   89,  292,   89,  113,  113,
      113,  113,  113,  113,  115,  115,  125,  125,  125,  125,
      125,  125,  141,  141,  141,  161,  161,  161,  166,  166,
      166,  292,  166,  166,  166,  166,  185,  185,  185,  191,

      292,  191,  191,  191,  191,  191,  191,  194,  292,  194,
      194,  194,  194,  194,  194,  197,  197,  197,  197,  197,
      197,  197,  197,  215,  215,  215,  224,  224,  224,  224,
      224,  224,  224,  224,  229,  229,  229,  229,  229,  229,
      229,  229,  247,  247,  247,    5,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292

    } ;

static yyconst short int yy_chk[1600] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    3,    4,    7,    7,    7,    7,    7,
        8,    8,    8,    8,    8,    3,    4,    9,    9,    9,
        9,    9,   10,   12,  284,   18,   20,   51,   30,   21,
       45,   38,   21,   38,   35,   50,   51,   12,   18,   20,
       10,   18,   21,   45,   18,   19,   30,   18,   35,   50,

       18,    9,   16,   19,   19,   19,   19,   19,   19,   16,
       21,   16,   27,   27,   27,   27,   27,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   34,  282,   16,   28,   28,   28,   28,   28,
       34,   34,   34,   34,   34,   34,   43,   46,   48,   52,
       54,   47,   54,   46,   43,   43,   43,   43,   43,   43,
       49,   75,   52,   53,   47,   63,   48,   53,   52,   28,
       32,   32,   32,   32,   47,   76,   32,   66,   63,   75,
      104,   92,   69,   53,   49,  104,   53,   74,   32,   92,

       66,  276,   74,   76,   32,   69,   32,   32,   32,   32,
       32,   32,   36,   36,   36,   36,   67,   69,   82,   83,
       74,   95,   36,   95,   67,   67,   67,   67,   67,   67,
       36,  275,   82,   83,  119,   98,   36,  113,   36,   36,
       36,   36,   36,   36,   64,   64,   64,   64,   64,  115,
      113,  117,  119,  274,  141,   64,  115,  268,   81,   98,
      128,  141,   64,  267,  117,  128,  266,   81,   64,  122,
       64,   64,   64,   64,   64,   64,   77,   77,   77,   77,
       77,   81,   77,  122,  161,  168,  185,  194,  265,  215,
      263,  161,  247,  185,   77,  167,  215,  244,  242,  168,

       77,  194,   77,   77,   77,   77,   77,   77,   78,   78,
       78,   78,   90,  167,   78,  190,  190,  190,  190,  190,
       90,   90,   90,   90,   90,   90,   78,  190,  191,  241,
      240,  234,   78,  220,   78,   78,   78,   78,   78,   78,
       80,   80,   80,   80,   80,  224,  191,  192,  192,  192,
      192,  192,  219,  221,  221,  221,  221,  221,   80,  192,
      218,  217,  255,  224,   80,  221,   80,   80,   80,   80,
       80,   80,   84,   84,   84,   84,   84,  216,  208,  229,
      255,  210,   84,  209,  202,  189,  188,  223,  228,  187,
       84,  208,  223,  229,  256,  208,   84,  228,   84,   84,

       84,   84,   84,   84,   85,   85,   85,   85,  112,  186,
      223,  228,  256,  180,   85,  259,  112,  112,  112,  112,
      112,  112,   85,  238,  238,  238,  238,  238,   85,  259,
       85,   85,   85,   85,   85,   85,   88,   88,   88,   88,
       88,  245,  245,  245,  245,  245,  179,  238,  178,  177,
      171,  164,  163,  162,   88,  156,  155,  154,  153,  260,
       88,  152,   88,   88,   88,   88,   88,   88,  114,  114,
      114,  114,  114,  260,  151,  145,  143,  142,  137,  120,
      136,  135,  134,  133,  132,  130,  114,  120,  120,  120,
      120,  120,  120,  121,  114,  114,  114,  114,  114,  114,

      123,  121,  121,  121,  121,  121,  121,  124,  123,  123,
      123,  123,  123,  123,  129,  124,  124,  124,  124,  124,
      124,  126,  126,  126,  126,  126,  127,  125,  118,  116,
      111,  110,  138,  109,  108,  107,  106,  105,  103,  126,
      138,  138,  138,  138,  138,  138,  139,  126,  126,  126,
      126,  126,  126,  140,  139,  139,  139,  139,  139,  139,
      102,  140,  140,  140,  140,  140,  140,  144,  144,  144,
      144,  144,  146,  144,  101,  100,   99,  144,   97,  144,
      146,  146,  146,  146,  146,  146,  147,   96,   94,   93,
       91,  144,  148,   89,  147,  147,  147,  147,  147,  147,

      148,  148,  148,  148,  148,  148,  149,  264,  264,  264,
      264,  264,  150,   87,  149,  149,  149,  149,  149,  149,
      150,  150,  150,  150,  150,  150,  158,   79,   73,   68,
       62,  264,  159,   61,  158,  158,  158,  158,  158,  158,
      159,  159,  159,  159,  159,  159,  160,   60,   59,   58,
       57,   56,   55,   44,  160,  160,  160,  160,  160,  160,
      165,  165,  165,  165,  165,  172,  165,   41,   37,   33,
      165,   29,  165,  172,  172,  172,  172,  172,  172,   26,
       23,   22,   17,   15,  165,  166,  166,  166,  166,  166,
      173,  166,   14,   13,   11,  166,    5,  166,  173,  173,

      173,  173,  173,  173,    0,    0,    0,    0,    0,  166,
      170,  170,  170,  170,  170,    0,  170,    0,    0,    0,
      170,  170,  170,    0,    0,    0,    0,    0,  170,    0,
        0,    0,    0,    0,  170,  174,  170,  170,  170,  170,
      170,  170,  175,  174,  174,  174,  174,  174,  174,  176,
      175,  175,  175,  175,  175,  175,  182,  176,  176,  176,
      176,  176,  176,  183,  182,  182,  182,  182,  182,  182,
      184,  183,  183,  183,  183,  183,  183,    0,  184,  184,
      184,  184,  184,  184,  193,  193,  193,  193,  203,    0,
      193,    0,    0,    0,    0,    0,  203,  203,  203,  203,

      203,  203,  193,    0,    0,    0,    0,    0,  193,    0,
      193,  193,  193,  193,  193,  193,  195,  195,  195,  195,
      204,    0,    0,    0,    0,    0,  195,    0,  204,  204,
      204,  204,  204,  204,  195,    0,    0,    0,    0,    0,
      195,    0,  195,  195,  195,  195,  195,  195,  196,  196,
      196,  196,  196,  205,  196,    0,    0,    0,  196,    0,
      196,  205,  205,  205,  205,  205,  205,    0,    0,    0,
        0,    0,  196,  197,  197,  197,  197,  197,  206,  197,
        0,    0,    0,  197,    0,  197,  206,  206,  206,  206,
      206,  206,    0,    0,    0,    0,    0,  197,  198,  198,

      198,  198,  198,  207,  198,    0,    0,    0,  198,    0,
      198,  207,  207,  207,  207,  207,  207,    0,    0,    0,
        0,    0,  198,  199,  199,  199,  199,  199,  212,  199,
        0,    0,    0,  199,    0,  199,  212,  212,  212,  212,
      212,  212,    0,    0,    0,    0,    0,  199,  200,  200,
      200,  200,  200,    0,  200,    0,    0,    0,  200,    0,
      200,    0,    0,    0,    0,    0,  200,    0,    0,    0,
        0,    0,  200,    0,  200,  200,  200,  200,  200,  200,
      201,  201,  201,  201,  201,    0,  201,    0,    0,    0,
      201,  201,  201,    0,    0,    0,    0,    0,  201,    0,

        0,    0,    0,    0,  201,  213,  201,  201,  201,  201,
      201,  201,  214,  213,  213,  213,  213,  213,  213,    0,
      214,  214,  214,  214,  214,  214,  225,  225,  225,  225,
      225,  233,  225,    0,    0,    0,    0,    0,  225,  233,
      233,  233,  233,  233,  233,    0,    0,    0,    0,    0,
      225,  226,  226,  226,  226,  226,    0,  226,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  226,
        0,    0,    0,    0,    0,  226,    0,  226,  226,  226,
      226,  226,  226,  227,  227,  227,  227,  235,    0,  227,
        0,    0,    0,    0,    0,  235,  235,  235,  235,  235,

      235,  227,    0,    0,    0,    0,    0,  227,    0,  227,
      227,  227,  227,  227,  227,  230,  230,  230,  230,  230,
      236,    0,    0,    0,    0,  230,    0,  230,  236,  236,
      236,  236,  236,  236,    0,    0,    0,    0,    0,  230,
      231,  231,  231,  231,  231,    0,    0,    0,    0,    0,
      231,    0,    0,    0,    0,    0,    0,    0,  231,    0,
        0,    0,    0,    0,  231,    0,  231,  231,  231,  231,
      231,  231,  232,  232,  232,  232,  237,    0,    0,    0,
        0,    0,  232,    0,  237,  237,  237,  237,  237,  237,
      232,    0,    0,    0,    0,    0,  232,  239,  232,  232,

      232,  232,  232,  232,  246,  239,  239,  239,  239,  239,
      239,    0,  246,  246,  246,  246,  246,  246,  254,  254,
      254,  254,  254,  257,  254,    0,    0,    0,    0,    0,
      254,  257,  257,  257,  257,  257,  257,    0,    0,    0,
        0,    0,  254,  258,  258,  258,  258,  258,  261,    0,
        0,    0,    0,  258,    0,  258,  261,  261,  261,  261,
      261,  261,  262,    0,    0,    0,    0,  258,  269,    0,
      262,  262,  262,  262,  262,  262,  269,  269,  269,  269,
      269,  269,  270,    0,    0,    0,    0,    0,  271,    0,
      270,  270,  270,  270,  270,  270,  271,  271,  271,  271,

      271,  271,  272,    0,    0,    0,    0,    0,  279,    0,
      272,  272,  272,  272,  272,  272,  279,  279,  279,  279,
      279,  279,  280,    0,    0,    0,    0,    0,  281,    0,
      280,  280,  280,  280,  280,  280,  281,  281,  281,  281,
      281,  281,  285,    0,    0,    0,    0,    0,  286,    0,
      285,  285,  285,  285,  285,  285,  286,  286,  286,  286,
      286,  286,  287,    0,    0,    0,    0,    0,  290,    0,
      287,  287,  287,  287,  287,  287,  290,  290,  290,  290,
      290,  290,  291,    0,    0,    0,    0,    0,    0,    0,
      291,  291,  291,  291,  291,  291,  293,  293,  293,  293,

      293,  293,  293,  293,  293,  294,    0,  294,  294,  294,
      294,  294,  294,  295,  295,    0,  295,  296,    0,  296,
      296,  296,  296,  296,  296,  297,  297,  297,  297,  297,
      297,  298,  298,  298,    0,  298,  299,  299,  299,  299,
      299,  299,  299,  299,  300,  300,  300,  300,  300,  300,
      301,  301,  301,  301,  301,  301,  301,  301,  302,  302,
      302,  302,  302,  302,  303,  303,    0,  303,  304,  304,
      304,  304,  304,  304,  305,  305,  306,  306,  306,  306,
      306,  306,  307,  307,  307,  308,  308,  308,  309,  309,
      309,    0,  309,  309,  309,  309,  310,  310,  310,  311,

        0,  311,  311,  311,  311,  311,  311,  312,    0,  312,
      312,  312,  312,  312,  312,  313,  313,  313,  313,  313,
      313,  313,  313,  314,  314,  314,  315,  315,  315,  315,
      315,  315,  315,  315,  316,  316,  316,  316,  316,  316,
      316,  316,  317,  317,  317,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292

    } ;

YY_DECL
	{
	register yy_state_type yy_current_state;
	register unsigned short *yy_cp, *yy_bp;
	register int yy_act;


	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 293 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 1546 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 26 "tokenizer.flex"
{BEGIN(COMMENT);}
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 27 "tokenizer.flex"
{BEGIN(0);}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 28 "tokenizer.flex"
{/* ignore */}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 29 "tokenizer.flex"
{/* ignore */}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 31 "tokenizer.flex"
{yyTok = S; return yyTok;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 33 "tokenizer.flex"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 34 "tokenizer.flex"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 35 "tokenizer.flex"
{yyTok = INCLUDES; return yyTok;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 36 "tokenizer.flex"
{yyTok = DASHMATCH; return yyTok;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 38 "tokenizer.flex"
{yyTok = STRING; return yyTok;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 40 "tokenizer.flex"
{yyTok = IDENT; return yyTok;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 42 "tokenizer.flex"
{yyTok = HASH; return yyTok;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 44 "tokenizer.flex"
{yyTok = IMPORT_SYM; return yyTok;}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 45 "tokenizer.flex"
{yyTok = PAGE_SYM; return yyTok;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 46 "tokenizer.flex"
{yyTok = MEDIA_SYM; return yyTok;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 47 "tokenizer.flex"
{yyTok = FONT_FACE_SYM; return yyTok;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 48 "tokenizer.flex"
{yyTok = CHARSET_SYM; return yyTok;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 49 "tokenizer.flex"
{yyTok = KONQ_RULE_SYM; return yyTok; }
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 50 "tokenizer.flex"
{yyTok = KONQ_DECLS_SYM; return yyTok; }
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 51 "tokenizer.flex"
{yyTok = KONQ_VALUE_SYM; return yyTok; }
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 53 "tokenizer.flex"
{yyTok = IMPORTANT_SYM; return yyTok;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 55 "tokenizer.flex"
{yyTok = EMS; return yyTok;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 56 "tokenizer.flex"
{yyTok = EXS; return yyTok;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 57 "tokenizer.flex"
{yyTok = PXS; return yyTok;}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 58 "tokenizer.flex"
{yyTok = CMS; return yyTok;}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 59 "tokenizer.flex"
{yyTok = MMS; return yyTok;}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 60 "tokenizer.flex"
{yyTok = INS; return yyTok;}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 61 "tokenizer.flex"
{yyTok = PTS; return yyTok;}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 62 "tokenizer.flex"
{yyTok = PCS; return yyTok;}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 63 "tokenizer.flex"
{yyTok = DEGS; return yyTok;}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 64 "tokenizer.flex"
{yyTok = RADS; return yyTok;}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 65 "tokenizer.flex"
{yyTok = GRADS; return yyTok;}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 66 "tokenizer.flex"
{yyTok = MSECS; return yyTok;}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 67 "tokenizer.flex"
{yyTok = SECS; return yyTok;}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 68 "tokenizer.flex"
{yyTok = HERZ; return yyTok;}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 69 "tokenizer.flex"
{yyTok = KHERZ; return yyTok;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 70 "tokenizer.flex"
{yyTok = DIMEN; return yyTok;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 71 "tokenizer.flex"
{yyTok = PERCENTAGE; return yyTok;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 72 "tokenizer.flex"
{yyTok = NUMBER; return yyTok;}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 74 "tokenizer.flex"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 75 "tokenizer.flex"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 76 "tokenizer.flex"
{yyTok = FUNCTION; return yyTok;}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 78 "tokenizer.flex"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 79 "tokenizer.flex"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 81 "tokenizer.flex"
{yyTok = *yytext; return yyTok;}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 83 "tokenizer.flex"
ECHO;
	YY_BREAK
#line 1289 "lex.yy.c"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(COMMENT):
	yyterminate();

	case YY_END_OF_BUFFER:
	yyterminate();
	default:
		YY_FATAL_ERROR( "fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */

