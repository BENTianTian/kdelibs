/*
 * This file is part of the DOM implementation for KDE.
 *
 * Copyright (C) 2003 Lars Knoll (knoll@kde.org)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

/* This file is mostly data generated by flex. Unfortunately flex
   can't handle 16bit strings directly, so we just copy the part of
   the code we need and modify it to our needs.

   Most of the defines below are to make sure we can easily use the
   flex generated code, using as little editing as possible.

   The flex syntax to generate the lexer are more or less directly
   copied from the CSS2.1 specs, with some fixes for comments and
   the important symbol.

   To regenerate, run flex on tokenizer.flex. After this, copy the
   data tables and the YY_DECL method over to this file. Remove the
   init code from YY_DECL and change the YY_END_OF_BUFFER to only call
   yyterminate().

*/

// --------- begin generated code -------------------
#define YY_NUM_RULES 50
#define YY_END_OF_BUFFER 51
static yyconst short int yy_accept[366] =
    {   0,
        0,    0,   51,   49,    2,    2,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   42,   49,   49,   49,   49,
       11,   11,   11,   11,   49,   49,    2,    0,    0,    0,
       10,    0,   13,    0,    8,    0,    0,    9,    0,    0,
        0,   11,   11,   42,    0,   41,    0,    0,   42,   47,
        0,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   12,   40,   40,   37,    0,    0,    0,    0,
        0,    0,    0,    0,   11,   11,    7,   46,   11,    0,
       11,    0,   11,    0,   11,    6,    5,    0,    0,    0,
       10,    0,    0,   13,   13,    0,    0,   10,    0,    0,

        4,   12,   40,   40,   40,    0,    0,   42,   47,   40,
       40,   40,   40,   47,   40,   40,   40,    0,   40,   40,
       28,   40,   24,   26,   40,   38,   30,   40,   29,   36,
       32,   31,   27,   40,    0,    0,    0,    0,    0,    0,
        0,    0,   11,   11,   11,   11,   12,   11,    0,   47,
       11,    0,    0,    0,   13,    0,    0,   40,    0,    1,
       42,   47,   40,   40,   40,   40,   47,   40,   40,   47,
       40,   40,   40,   40,   33,   40,   39,   34,    3,    0,
        0,    0,    0,    0,    0,    0,   11,   11,   11,   43,
        0,    0,   47,   46,    0,    0,   13,    0,    0,    0,

       42,   47,   40,   40,   40,   40,   47,   40,   40,   47,
       47,   40,   40,   40,   35,    0,    0,    0,    0,    0,
        0,   15,   11,   11,   11,   48,    0,   47,    0,    0,
        0,    0,   45,    0,    0,    0,   13,    0,   42,   47,
       40,   40,   40,   40,   47,   40,   40,   47,   47,   47,
       40,   40,   25,    0,    0,    0,    0,   16,    0,   11,
       11,   11,   48,    0,   47,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   45,    0,    0,    0,    0,   13,
        0,   42,   40,   40,    0,    0,    0,   14,    0,   11,
       11,   48,    0,   47,    0,   44,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,   13,
        0,   40,   40,    0,   18,    0,    0,   11,   48,    0,
       47,    0,   44,    0,    0,    0,   44,    0,    0,    0,
        0,   40,    0,    0,    0,    0,    0,   48,    0,    0,
        0,   23,    0,    0,    0,   17,   19,   48,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   20,    0,
        0,    0,   21,   22,    0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    4,    5,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   12,   18,   19,   20,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   12,   12,   22,
       23,   24,   25,   26,   30,   31,   32,   33,   34,   35,
       36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
       46,   47,   48,   49,   50,   51,   39,   52,   39,   53,
       12,   27,   12,   28,   29,   12,   30,   31,   32,   33,

       34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
       44,   45,   46,   47,   48,   49,   50,   51,   39,   52,
       39,   53,   12,   54,   12,   55,    1,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,

       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   56,   56
    } ;

static yyconst int yy_meta[57] =
    {   0,
        1,    2,    3,    3,    3,    4,    4,    4,    4,    4,
        4,    4,    4,    5,    4,    4,    4,    6,    4,    4,
        6,    4,    4,    4,    4,    4,    7,    4,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    4,    4,    7
    } ;

static yyconst short int yy_base[389] =
    {   0,
        0,    0,  834, 1871,   55,   60,   65,   64,  798,  800,
       60,  799,   56,  800,  804,   93,  799,   63,  126,  782,
       61,  148,   65,  137,  781,  780,  183,  188,  760,   70,
     1871,  225,  774,  174, 1871,   63,  259, 1871,  776,   59,
      180,   80,  136,  276,  783, 1871,  770,  775,  210,  757,
      244,   57,  299,  739,  745,   58,   66,   62,  125,  750,
      128,  175,  149,  221,   89,  749,  757,  727,  723,  707,
      708,  715,  718,  717,  189,  333, 1871, 1871,  205,  282,
      348,  725,  220,  363,  210, 1871, 1871,  700,  169,  140,
      191,  397,  431,  716,  465,  315,  209,  212,  499,  533,

     1871,  725,  239,  271,  298,  725,  101,  416,  715,  518,
      697,  704,  299,  695,  692,  567,  690,  574,  222,    0,
      688,  678,  686,  678,  144,  677,  676,  269,  675,  673,
      672,  671,  657,  255,  665,  643,  649,  635,  632,  630,
      620,  618,  582,  240,  616,  608,  632,  257,  634,  620,
      273,  600,  275,  640,  655,  272,  661,  316,  620, 1871,
      676,  610,  691,  592,  598,  303,  606,    0,  594,  603,
      697,  600,  731,  319,  599,  294,  598,  597, 1871,  574,
      564,  561,  552,  555,  558,  557,  723,  738,  753, 1871,
      759,  777,  565,  811,  542,  797,  812,  818,  571,  328,

      833,  561,  848,  543,  550,  305,  558,    0,  546,  556,
      554,  854,  869,  329,  535,  519,  499,  527,  497,  512,
      493, 1871,  875,  890,  905,  911,  929,  500,  963,  989,
      296,  347, 1871, 1015,  473,  949,  975, 1022, 1037, 1871,
      487,  334,  343,  362, 1871,  486,  379, 1871, 1871, 1871,
     1043, 1058,  484,  465,  457,  454,  439, 1871,  442, 1064,
     1079, 1094, 1100, 1118,  459,  405,  364,  470, 1152,  399,
     1186, 1220, 1246, 1272, 1298, 1324, 1358,  452, 1137, 1171,
     1206,    0, 1232, 1258,  442,  394,  392, 1871,  387,  451,
     1284, 1365, 1383,  388,  475, 1871,  413,  411,  513, 1417,

     1451,  480,  432, 1430, 1485, 1519, 1504,  349, 1526, 1534,
     1541,  553, 1549,  476, 1871,  358,  355,  572, 1556,  368,
     1871, 1338,  415,  417, 1564, 1598,  481,  497, 1584, 1599,
      336,  654,  341,  312,  329,  315,  216, 1605, 1620, 1626,
     1641, 1871,  206,  180,  179, 1871, 1871, 1871, 1647, 1662,
     1668,  159,  164,  147, 1683, 1689, 1704,  122, 1871,   62,
     1710, 1725, 1871, 1871, 1871, 1759, 1761, 1767, 1769, 1773,
     1776, 1782, 1786, 1792, 1799,   78, 1803, 1805, 1809, 1816,
     1820, 1827, 1833, 1839, 1845, 1851, 1857, 1863
    } ;

static yyconst short int yy_def[389] =
    {   0,
      365,    1,  365,  365,  365,  365,  365,  366,  367,  365,
      368,  365,  369,  365,  365,  365,  365,  365,  370,  365,
      371,  371,  371,  371,  365,  365,  365,  365,  365,  366,
      365,  372,  367,  373,  365,  368,  374,  365,  365,  365,
      370,  371,  371,   16,  375,  365,  376,  365,   16,  365,
      377,  378,  378,   53,   53,   53,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  365,  365,  365,  365,
      365,  365,  365,  365,  371,   22,  365,  365,  371,  379,
       22,  365,  371,  365,  371,  365,  365,  365,  366,  366,
      366,  366,  372,  367,  367,  368,  368,  368,  368,  374,

      365,  365,  378,  378,  378,  375,  380,   16,  365,   53,
      110,  110,  110,  365,  378,  378,  378,  381,  378,  110,
      378,  110,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  365,  365,  365,  365,  365,  365,
      365,  365,   76,  371,   76,   22,  365,  371,  365,  365,
      371,  365,  366,   92,   95,  368,   99,  378,  382,  365,
       16,  365,  110,  163,  163,  163,  365,  163,  163,  365,
      116,  378,  116,  378,  378,  378,  378,  378,  365,  365,
      365,  365,  365,  365,  365,  365,   76,  145,   22,  365,
      365,  365,  365,  383,  365,   92,   95,   99,  382,  380,

       16,  365,  163,  203,  203,  203,  365,  203,  203,  365,
      365,  116,  173,  378,  378,  365,  365,  365,  365,  365,
      365,  365,   76,  145,   22,  365,  365,  365,  383,  383,
      384,  385,  365,  386,  365,   92,   95,   99,   16,  365,
      378,  378,  378,  378,  365,  378,  378,  365,  365,  365,
      116,  173,  378,  365,  365,  365,  365,  365,  365,   76,
      145,   22,  365,  365,  365,  365,  384,  365,  387,  385,
      388,  383,  383,  383,  383,  383,  386,  365,   92,   95,
       99,  239,  116,  173,  365,  365,  365,  365,  365,  262,
      145,  365,  365,  365,  365,  365,  384,  384,  384,  384,

      387,  385,  385,  385,  385,  388,  276,  365,   92,   95,
       99,  378,  173,  365,  365,  365,  365,  262,  365,  365,
      365,  384,  384,  384,  300,  385,  385,  385,  305,  276,
      365,  378,  365,  365,  365,  365,  365,  365,  300,  305,
      276,  365,  365,  365,  365,  365,  365,  365,  300,  305,
      276,  365,  365,  365,  300,  305,  276,  365,  365,  365,
      300,  305,  365,  365,    0,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365
    } ;

static yyconst short int yy_nxt[1928] =
    {   0,
        4,    5,    6,    5,    5,    5,    7,    8,    9,   10,
        4,    4,   11,    4,    4,   12,    4,   13,   14,   15,
       16,   17,    4,    4,    4,   18,   19,   20,   21,   22,
       22,   22,   22,   22,   22,   21,   21,   21,   21,   21,
       21,   21,   23,   21,   21,   21,   21,   21,   21,   24,
       21,   21,   21,   25,   26,   21,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   28,   28,   28,   28,
       28,   31,   31,   39,   78,   31,   40,   31,   78,   40,
       68,   82,   41,  118,   60,  119,   37,   80,  118,   37,
       32,   80,  118,   78,   69,  364,   32,   70,   43,  123,

       71,  102,   29,   46,   72,   73,   80,   74,   83,  124,
       47,   48,  125,   49,  126,  118,  107,   50,  134,   51,
      160,   52,   53,   53,   54,   55,   56,   53,   57,   58,
       59,   60,   61,   60,   62,   63,   60,   64,   60,   65,
       66,   60,   60,   60,   60,   60,   76,   31,   60,   78,
       78,  118,   82,   84,  118,   76,   76,   76,   76,   76,
       76,   78,   80,   80,  128,   82,   32,  127,   81,  363,
      118,   30,   50,  176,   80,  118,   31,   81,   81,   81,
       81,   81,   81,   85,   27,   27,   27,   27,   27,   28,
       28,   28,   28,   28,   95,   32,  360,  359,   31,  358,

       76,  118,   78,   95,   95,   95,   95,   95,   95,   76,
       76,   76,   76,   76,   76,   80,  129,   32,   78,  354,
      353,   31,  130,   78,   31,   29,   30,   30,   30,   89,
      108,   80,   91,   78,  109,   37,   80,  352,   37,  110,
      110,  111,  112,  113,  110,   92,   80,  118,  118,  347,
      151,   93,  131,   78,   92,   92,   92,   92,   92,   92,
       36,   36,   36,   96,  116,  118,   80,  174,  148,  132,
      190,   98,  133,  116,  116,  116,  116,  116,  116,   99,
      121,  118,   31,   80,   31,  100,  194,  178,   99,   99,
       99,   99,   99,   99,  365,  118,   44,  118,   37,   80,

      365,   32,  145,  268,  158,   60,   60,  103,  104,  105,
       60,  145,  145,  145,  145,  145,  145,   36,   60,  120,
      118,  177,  269,  109,  118,  118,  215,   31,  120,  120,
      120,  120,  120,  120,   75,   75,   75,   75,   75,  123,
      123,   37,  118,  200,  123,  118,  123,  160,  346,  124,
      124,  175,  214,  143,  124,  118,  124,  365,  345,  268,
      118,  344,  143,  143,  143,  143,  143,  143,  146,  118,
      253,  268,  109,  271,  343,  121,  158,  146,  146,  146,
      146,  146,  146,  149,  342,  191,  337,  150,  118,  336,
      269,  331,  149,  149,  149,  149,  149,  149,   90,  153,

      153,  153,   90,  123,   31,  118,  266,  266,  266,  266,
      266,  268,  321,  124,  175,  267,  317,  154,  268,  233,
      268,  316,  268,   32,  268,  271,  154,  154,  154,  154,
      154,  154,   30,   30,   30,   89,  161,  269,   91,  269,
      162,  269,  315,  269,  268,  163,  163,  164,  165,  166,
      163,   92,   75,   75,   75,   75,   75,   93,  271,  314,
       92,   92,   92,   92,   92,   92,   94,   94,   94,   94,
       94,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  308,  270,  294,  296,  155,  289,  288,  287,  296,
      286,   34,  268,  268,  155,  155,  155,  155,  155,  155,

       97,  156,  156,  156,   97,  285,  271,  271,  333,  268,
      118,   31,  118,  118,  322,  295,  295,  295,  322,  157,
      268,  278,  334,  271,  265,   37,  335,  323,  157,  157,
      157,  157,  157,  157,   36,   36,   36,   96,  168,  269,
      259,  258,  162,  257,  256,   98,  255,  168,  168,  168,
      168,  168,  168,   99,  115,  115,  115,  115,  115,  100,
      254,  118,   99,   99,   99,   99,   99,   99,  115,  115,
      115,  115,  115,  144,  144,  144,  144,  144,  250,  118,
      249,  175,  248,  247,  121,  245,  200,  171,  235,  228,
      222,  221,  220,  118,  173,  219,  171,  171,  171,  171,

      171,  171,  187,  173,  173,  173,  173,  173,  173,  218,
      217,  187,  187,  187,  187,  187,  187,  144,  144,  144,
      144,  144,  216,  118,  118,  118,  118,  211,  189,  175,
      210,  209,  162,  121,  207,  200,  188,  189,  189,  189,
      189,  189,  189,  195,  193,  188,  188,  188,  188,  188,
      188,  191,  147,  186,  192,  172,  172,  172,  172,  172,
      196,  185,  184,  192,  192,  192,  192,  192,  192,  196,
      196,  196,  196,  196,  196,  197,  183,  182,  181,  180,
      118,  198,  179,  118,  197,  197,  197,  197,  197,  197,
      198,  198,  198,  198,  198,  198,  201,  118,  118,  118,

      202,  118,  118,  118,  118,  203,  203,  204,  205,  206,
      203,  208,  118,  175,  118,  202,  118,  212,  118,  170,
      208,  208,  208,  208,  208,  208,  212,  212,  212,  212,
      212,  212,  172,  172,  172,  172,  172,  169,  121,  167,
      107,   82,   34,  223,  152,  147,  142,  141,  140,  139,
      138,  213,  223,  223,  223,  223,  223,  223,  224,  137,
      213,  213,  213,  213,  213,  213,  136,  224,  224,  224,
      224,  224,  224,  225,  135,  118,  118,  202,  122,  226,
      121,  114,  225,  225,  225,  225,  225,  225,  226,  226,
      226,  226,  226,  226,  191,   44,   51,  227,  107,  101,

       34,   88,   87,   86,   77,   67,  227,  227,  227,  227,
      227,  227,  229,  229,  229,  229,  229,  236,  231,   45,
       44,   38,   35,  232,   34,  233,  236,  236,  236,  236,
      236,  236,  237,  365,  365,  365,  365,  234,  238,  365,
      365,  237,  237,  237,  237,  237,  237,  238,  238,  238,
      238,  238,  238,  239,  365,  365,  365,  240,  365,  365,
      365,  365,  241,  241,  242,  243,  244,  241,  246,  365,
      365,  365,  240,  365,  251,  365,  365,  246,  246,  246,
      246,  246,  246,  251,  251,  251,  251,  251,  251,  252,
      365,  365,  365,  365,  365,  260,  365,  365,  252,  252,

      252,  252,  252,  252,  260,  260,  260,  260,  260,  260,
      261,  365,  365,  365,  365,  365,  365,  365,  365,  261,
      261,  261,  261,  261,  261,  262,  365,  365,  365,  240,
      365,  263,  365,  365,  262,  262,  262,  262,  262,  262,
      263,  263,  263,  263,  263,  263,  191,  365,  365,  264,
      365,  365,  365,  365,  365,  365,  365,  365,  264,  264,
      264,  264,  264,  264,  229,  229,  229,  229,  229,  279,
      231,  365,  365,  365,  365,  232,  365,  233,  279,  279,
      279,  279,  279,  279,  365,  365,  365,  365,  365,  234,
      266,  266,  266,  266,  266,  280,  365,  365,  365,  365,

      365,  365,  365,  233,  280,  280,  280,  280,  280,  280,
      365,  365,  365,  365,  365,  234,  266,  266,  266,  266,
      272,  365,  274,  365,  365,  365,  365,  274,  274,  275,
      365,  365,  365,  365,  365,  276,  365,  365,  365,  365,
      365,  277,  281,  365,  276,  276,  276,  276,  276,  276,
      365,  281,  281,  281,  281,  281,  281,  282,  365,  365,
      365,  365,  365,  283,  365,  365,   60,   60,  103,  104,
      105,   60,  283,  283,  283,  283,  283,  283,  284,  365,
      365,  365,  365,  365,  290,  365,  365,  284,  284,  284,
      284,  284,  284,  290,  290,  290,  290,  290,  290,  291,

      365,  365,  365,  365,  365,  365,  365,  365,  291,  291,
      291,  291,  291,  291,   79,  365,  365,  365,  365,  365,
      292,  365,  365,   79,   79,   79,   79,   79,   79,  292,
      292,  292,  292,  292,  292,  191,  365,  365,  293,  365,
      365,  365,  365,  365,  365,  365,  365,  293,  293,  293,
      293,  293,  293,  267,  267,  267,  297,  309,  365,  299,
      365,  365,  365,  365,  365,  365,  309,  309,  309,  309,
      309,  309,  300,  365,  365,  365,  365,  365,  301,  365,
      365,  300,  300,  300,  300,  300,  300,  270,  270,  270,
      302,  310,  365,  365,  365,  365,  365,  365,  304,  365,

      310,  310,  310,  310,  310,  310,  305,  365,  365,  365,
      365,  365,  306,  365,  365,  305,  305,  305,  305,  305,
      305,  266,  266,  266,  266,  266,  311,  365,  365,  365,
      365,  365,  365,  365,  233,  311,  311,  311,  311,  311,
      311,  365,  365,  365,  365,  365,  234,  266,  266,  266,
      266,  266,  312,  365,  365,  365,  365,  365,  365,  365,
      233,  312,  312,  312,  312,  312,  312,  365,  365,  365,
      365,  365,  234,  266,  266,  266,  266,  266,  313,  365,
      365,  365,  365,  365,  365,  365,  233,  313,  313,  313,
      313,  313,  313,  365,  365,  365,  365,  365,  234,  266,

      266,  266,  266,  266,  318,  365,  365,  365,  365,  365,
      365,  365,  233,  318,  318,  318,  318,  318,  318,  365,
      365,  365,  365,  365,  234,  272,  272,  272,  272,  272,
      365,  365,  365,  365,  365,  365,  365,  365,  233,  322,
      295,  295,  295,  322,  307,  268,  365,  365,  365,  365,
      234,  365,  323,  307,  307,  307,  307,  307,  307,  266,
      266,  266,  266,  272,  269,  274,  365,  365,  365,  365,
      274,  274,  275,  365,  365,  365,  365,  365,  276,  365,
      365,  365,  365,  365,  277,  319,  365,  276,  276,  276,
      276,  276,  276,  365,  319,  319,  319,  319,  319,  319,

      191,  365,  365,  320,  365,  365,  365,  365,  365,  365,
      365,  365,  320,  320,  320,  320,  320,  320,  298,  324,
      324,  324,  298,  365,  268,  365,  365,  365,  365,  365,
      365,  326,  295,  295,  295,  326,  365,  325,  365,  365,
      365,  365,  268,  269,  327,  365,  325,  325,  325,  325,
      325,  325,  267,  267,  267,  297,  271,  365,  299,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  300,  365,  365,  365,  365,  365,  301,  365,  365,
      300,  300,  300,  300,  300,  300,  303,  328,  328,  328,
      303,  365,  365,  365,  365,  365,  365,  268,  365,  365,

      365,  365,  365,  365,  365,  329,  365,  365,  365,  365,
      365,  271,  365,  365,  329,  329,  329,  329,  329,  329,
      270,  270,  270,  302,  330,  365,  365,  365,  365,  365,
      365,  304,  365,  330,  330,  330,  330,  330,  330,  305,
      365,  365,  365,  365,  365,  306,   30,  365,  305,  305,
      305,  305,  305,  305,   33,   30,   30,   30,   30,   30,
       30,   36,  365,   33,   33,   33,   33,   33,   33,  332,
       36,   36,   36,   36,   36,   36,  338,  365,  332,  332,
      332,  332,  332,  332,  339,  338,  338,  338,  338,  338,
      338,  365,  365,  339,  339,  339,  339,  339,  339,  326,

      295,  295,  295,  326,  340,  365,  365,  365,  365,  365,
      268,  365,  327,  340,  340,  340,  340,  340,  340,  341,
      365,  365,  365,  365,  271,  348,  365,  365,  341,  341,
      341,  341,  341,  341,  348,  348,  348,  348,  348,  348,
      349,  365,  365,  365,  365,  365,  350,  365,  365,  349,
      349,  349,  349,  349,  349,  350,  350,  350,  350,  350,
      350,  351,  365,  365,  365,  365,  365,  355,  365,  365,
      351,  351,  351,  351,  351,  351,  355,  355,  355,  355,
      355,  355,  356,  365,  365,  365,  365,  365,  357,  365,
      365,  356,  356,  356,  356,  356,  356,  357,  357,  357,

      357,  357,  357,  361,  365,  365,  365,  365,  365,  362,
      365,  365,  361,  361,  361,  361,  361,  361,  362,  362,
      362,  362,  362,  362,  230,  365,  365,  365,  365,  365,
      267,  365,  365,  230,  230,  230,  230,  230,  230,  267,
      267,  267,  267,  267,  267,  270,  365,  365,  365,  365,
      365,  365,  365,  365,  270,  270,  270,  270,  270,  270,
       30,  365,   30,   30,   30,   30,   33,   33,   36,  365,
       36,   36,   36,   36,   42,   42,   75,   75,   75,   75,
       79,   79,   79,   90,   90,   90,   90,   90,   90,   94,
       94,   94,   94,   97,   97,   97,   97,   97,   97,  106,

      106,  106,  106,  106,  106,  106,  115,  115,  115,  115,
      117,  117,  144,  144,  144,  144,  159,  159,  159,  159,
      159,  159,  159,  172,  172,  172,  172,  199,  199,  199,
      199,  199,  199,  199,  230,  230,  230,  365,  230,  230,
      267,  365,  267,  267,  267,  267,  270,  365,  270,  270,
      270,  270,  273,  273,  273,  273,  273,  273,  298,  298,
      298,  298,  298,  298,  303,  303,  303,  303,  303,  303,
        3,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,

      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365
    } ;

static yyconst short int yy_chk[1928] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    5,    5,    5,    5,
        5,    6,    6,    6,    6,    6,    7,    7,    7,    7,
        7,    8,   11,   13,   21,   36,   13,   30,   23,   40,
       18,   23,   13,   52,  376,   52,   11,   21,   58,   36,
        8,   23,   57,   42,   18,  360,   30,   18,   13,   56,

       18,   40,    7,   16,   18,   18,   42,   18,   23,   56,
       16,   16,   57,   16,   58,   65,  107,   16,   65,   16,
      107,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   19,   90,   16,   43,
       24,   59,   43,   24,   61,   19,   19,   19,   19,   19,
       19,   22,   43,   24,   61,   63,   90,   59,   22,  358,
      125,   89,   22,  125,   22,   63,   89,   22,   22,   22,
       22,   22,   22,   24,   27,   27,   27,   27,   27,   28,
       28,   28,   28,   28,   34,   89,  354,  353,   91,  352,

       41,   62,   75,   34,   34,   34,   34,   34,   34,   41,
       41,   41,   41,   41,   41,   75,   62,   91,   79,  345,
      344,   97,   62,   85,   98,   28,   32,   32,   32,   32,
       49,   79,   32,   83,   49,   97,   85,  343,   98,   49,
       49,   49,   49,   49,   49,   32,   83,   64,  119,  337,
       85,   32,   64,  144,   32,   32,   32,   32,   32,   32,
       37,   37,   37,   37,   51,  103,  144,  119,   83,   64,
      148,   37,   64,   51,   51,   51,   51,   51,   51,   37,
      103,  134,  153,  148,  156,   37,  151,  134,   37,   37,
       37,   37,   37,   37,   44,  128,   44,  104,  156,  151,

       44,  153,   80,  231,  104,   44,   44,   44,   44,   44,
       44,   80,   80,   80,   80,   80,   80,   96,   44,   53,
      176,  128,  231,   53,  105,   53,  176,   96,   53,   53,
       53,   53,   53,   53,   76,   76,   76,   76,   76,  105,
      113,   96,  158,  200,  166,  174,  206,  200,  336,  105,
      113,  158,  174,   76,  166,  214,  206,   76,  335,  232,
      242,  334,   76,   76,   76,   76,   76,   76,   81,  243,
      214,  267,   81,  232,  333,  242,  243,   81,   81,   81,
       81,   81,   81,   84,  331,  320,  317,   84,  244,  316,
      267,  308,   84,   84,   84,   84,   84,   84,   92,   92,

       92,   92,   92,  244,   92,  247,  266,  266,  266,  266,
      266,  270,  294,  244,  247,  297,  289,   92,  298,  266,
      297,  287,  323,   92,  324,  270,   92,   92,   92,   92,
       92,   92,   93,   93,   93,   93,  108,  298,   93,  297,
      108,  323,  286,  324,  303,  108,  108,  108,  108,  108,
      108,   93,  290,  290,  290,  290,  290,   93,  303,  285,
       93,   93,   93,   93,   93,   93,   95,   95,   95,   95,
       95,  268,  268,  268,  268,  268,  295,  295,  295,  295,
      295,  278,  302,  265,  268,   95,  259,  257,  256,  295,
      255,   95,  302,  327,   95,   95,   95,   95,   95,   95,

       99,   99,   99,   99,   99,  254,  302,  327,  314,  328,
      253,   99,  246,  241,  299,  299,  299,  299,  299,   99,
      299,  235,  314,  328,  228,   99,  314,  299,   99,   99,
       99,   99,   99,   99,  100,  100,  100,  100,  110,  299,
      221,  220,  110,  219,  218,  100,  217,  110,  110,  110,
      110,  110,  110,  100,  312,  312,  312,  312,  312,  100,
      216,  215,  100,  100,  100,  100,  100,  100,  116,  116,
      116,  116,  116,  318,  318,  318,  318,  318,  211,  312,
      210,  209,  207,  205,  204,  202,  199,  116,  195,  193,
      186,  185,  184,  116,  118,  183,  116,  116,  116,  116,

      116,  116,  143,  118,  118,  118,  118,  118,  118,  182,
      181,  143,  143,  143,  143,  143,  143,  145,  145,  145,
      145,  145,  180,  178,  177,  175,  172,  170,  146,  169,
      167,  165,  146,  164,  162,  159,  145,  146,  146,  146,
      146,  146,  146,  152,  150,  145,  145,  145,  145,  145,
      145,  149,  147,  142,  149,  332,  332,  332,  332,  332,
      154,  141,  140,  149,  149,  149,  149,  149,  149,  154,
      154,  154,  154,  154,  154,  155,  139,  138,  137,  136,
      332,  157,  135,  133,  155,  155,  155,  155,  155,  155,
      157,  157,  157,  157,  157,  157,  161,  132,  131,  130,

      161,  129,  127,  126,  124,  161,  161,  161,  161,  161,
      161,  163,  123,  122,  121,  163,  117,  171,  115,  114,
      163,  163,  163,  163,  163,  163,  171,  171,  171,  171,
      171,  171,  173,  173,  173,  173,  173,  112,  111,  109,
      106,  102,   94,  187,   88,   82,   74,   73,   72,   71,
       70,  173,  187,  187,  187,  187,  187,  187,  188,   69,
      173,  173,  173,  173,  173,  173,   68,  188,  188,  188,
      188,  188,  188,  189,   67,   66,   60,  189,   55,  191,
       54,   50,  189,  189,  189,  189,  189,  189,  191,  191,
      191,  191,  191,  191,  192,   48,   47,  192,   45,   39,

       33,   29,   26,   25,   20,   17,  192,  192,  192,  192,
      192,  192,  194,  194,  194,  194,  194,  196,  194,   15,
       14,   12,   10,  194,    9,  194,  196,  196,  196,  196,
      196,  196,  197,    3,    0,    0,    0,  194,  198,    0,
        0,  197,  197,  197,  197,  197,  197,  198,  198,  198,
      198,  198,  198,  201,    0,    0,    0,  201,    0,    0,
        0,    0,  201,  201,  201,  201,  201,  201,  203,    0,
        0,    0,  203,    0,  212,    0,    0,  203,  203,  203,
      203,  203,  203,  212,  212,  212,  212,  212,  212,  213,
        0,    0,    0,    0,    0,  223,    0,    0,  213,  213,

      213,  213,  213,  213,  223,  223,  223,  223,  223,  223,
      224,    0,    0,    0,    0,    0,    0,    0,    0,  224,
      224,  224,  224,  224,  224,  225,    0,    0,    0,  225,
        0,  226,    0,    0,  225,  225,  225,  225,  225,  225,
      226,  226,  226,  226,  226,  226,  227,    0,    0,  227,
        0,    0,    0,    0,    0,    0,    0,    0,  227,  227,
      227,  227,  227,  227,  229,  229,  229,  229,  229,  236,
      229,    0,    0,    0,    0,  229,    0,  229,  236,  236,
      236,  236,  236,  236,    0,    0,    0,    0,    0,  229,
      230,  230,  230,  230,  230,  237,  230,    0,    0,    0,

        0,  230,    0,  230,  237,  237,  237,  237,  237,  237,
        0,    0,    0,    0,    0,  230,  234,  234,  234,  234,
      234,    0,  234,    0,    0,    0,    0,  234,  234,  234,
        0,    0,    0,    0,    0,  234,    0,    0,    0,    0,
        0,  234,  238,    0,  234,  234,  234,  234,  234,  234,
        0,  238,  238,  238,  238,  238,  238,  239,    0,    0,
        0,  239,    0,  251,    0,    0,  239,  239,  239,  239,
      239,  239,  251,  251,  251,  251,  251,  251,  252,    0,
        0,    0,    0,    0,  260,    0,    0,  252,  252,  252,
      252,  252,  252,  260,  260,  260,  260,  260,  260,  261,

        0,    0,    0,    0,    0,    0,    0,    0,  261,  261,
      261,  261,  261,  261,  262,    0,    0,    0,  262,    0,
      263,    0,    0,  262,  262,  262,  262,  262,  262,  263,
      263,  263,  263,  263,  263,  264,    0,    0,  264,    0,
        0,    0,    0,    0,    0,    0,    0,  264,  264,  264,
      264,  264,  264,  269,  269,  269,  269,  279,    0,  269,
        0,    0,    0,    0,    0,    0,  279,  279,  279,  279,
      279,  279,  269,    0,    0,    0,    0,    0,  269,    0,
        0,  269,  269,  269,  269,  269,  269,  271,  271,  271,
      271,  280,    0,    0,    0,    0,    0,    0,  271,    0,

      280,  280,  280,  280,  280,  280,  271,    0,    0,    0,
        0,    0,  271,    0,    0,  271,  271,  271,  271,  271,
      271,  272,  272,  272,  272,  272,  281,  272,    0,    0,
        0,    0,  272,    0,  272,  281,  281,  281,  281,  281,
      281,    0,    0,    0,    0,    0,  272,  273,  273,  273,
      273,  273,  283,  273,    0,    0,    0,    0,  273,    0,
      273,  283,  283,  283,  283,  283,  283,    0,    0,    0,
        0,    0,  273,  274,  274,  274,  274,  274,  284,  274,
        0,    0,    0,    0,  274,    0,  274,  284,  284,  284,
      284,  284,  284,    0,    0,    0,    0,    0,  274,  275,

      275,  275,  275,  275,  291,  275,    0,    0,    0,    0,
      275,    0,  275,  291,  291,  291,  291,  291,  291,    0,
        0,    0,    0,    0,  275,  276,  276,  276,  276,  276,
        0,  276,    0,    0,    0,    0,  276,    0,  276,  322,
      322,  322,  322,  322,  276,  322,    0,    0,    0,    0,
      276,    0,  322,  276,  276,  276,  276,  276,  276,  277,
      277,  277,  277,  277,  322,  277,    0,    0,    0,    0,
      277,  277,  277,    0,    0,    0,    0,    0,  277,    0,
        0,    0,    0,    0,  277,  292,    0,  277,  277,  277,
      277,  277,  277,    0,  292,  292,  292,  292,  292,  292,

      293,    0,    0,  293,    0,    0,    0,    0,    0,    0,
        0,    0,  293,  293,  293,  293,  293,  293,  300,  300,
      300,  300,  300,    0,  300,    0,    0,    0,    0,    0,
        0,  304,  304,  304,  304,  304,    0,  300,    0,    0,
        0,    0,  304,  300,  304,    0,  300,  300,  300,  300,
      300,  300,  301,  301,  301,  301,  304,    0,  301,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  301,    0,    0,    0,    0,    0,  301,    0,    0,
      301,  301,  301,  301,  301,  301,  305,  305,  305,  305,
      305,    0,    0,    0,    0,    0,    0,  305,    0,    0,

        0,    0,    0,    0,    0,  305,    0,    0,    0,    0,
        0,  305,    0,    0,  305,  305,  305,  305,  305,  305,
      306,  306,  306,  306,  307,    0,    0,    0,    0,    0,
        0,  306,    0,  307,  307,  307,  307,  307,  307,  306,
        0,    0,    0,    0,    0,  306,  309,    0,  306,  306,
      306,  306,  306,  306,  310,  309,  309,  309,  309,  309,
      309,  311,    0,  310,  310,  310,  310,  310,  310,  313,
      311,  311,  311,  311,  311,  311,  319,    0,  313,  313,
      313,  313,  313,  313,  325,  319,  319,  319,  319,  319,
      319,    0,    0,  325,  325,  325,  325,  325,  325,  326,

      326,  326,  326,  326,  329,    0,    0,    0,    0,    0,
      326,    0,  326,  329,  329,  329,  329,  329,  329,  330,
        0,    0,    0,    0,  326,  338,    0,    0,  330,  330,
      330,  330,  330,  330,  338,  338,  338,  338,  338,  338,
      339,    0,    0,    0,    0,    0,  340,    0,    0,  339,
      339,  339,  339,  339,  339,  340,  340,  340,  340,  340,
      340,  341,    0,    0,    0,    0,    0,  349,    0,    0,
      341,  341,  341,  341,  341,  341,  349,  349,  349,  349,
      349,  349,  350,    0,    0,    0,    0,    0,  351,    0,
        0,  350,  350,  350,  350,  350,  350,  351,  351,  351,

      351,  351,  351,  355,    0,    0,    0,    0,    0,  356,
        0,    0,  355,  355,  355,  355,  355,  355,  356,  356,
      356,  356,  356,  356,  357,    0,    0,    0,    0,    0,
      361,    0,    0,  357,  357,  357,  357,  357,  357,  361,
      361,  361,  361,  361,  361,  362,    0,    0,    0,    0,
        0,    0,    0,    0,  362,  362,  362,  362,  362,  362,
      366,    0,  366,  366,  366,  366,  367,  367,  368,    0,
      368,  368,  368,  368,  369,  369,  370,  370,  370,  370,
      371,  371,  371,  372,  372,  372,  372,  372,  372,  373,
      373,  373,  373,  374,  374,  374,  374,  374,  374,  375,

      375,  375,  375,  375,  375,  375,  377,  377,  377,  377,
      378,  378,  379,  379,  379,  379,  380,  380,  380,  380,
      380,  380,  380,  381,  381,  381,  381,  382,  382,  382,
      382,  382,  382,  382,  383,  383,  383,    0,  383,  383,
      384,    0,  384,  384,  384,  384,  385,    0,  385,  385,
      385,  385,  386,  386,  386,  386,  386,  386,  387,  387,
      387,  387,  387,  387,  388,  388,  388,  388,  388,  388,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,

      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365
    } ;


YY_DECL
	{
	register yy_state_type yy_current_state;
	register unsigned short *yy_cp, *yy_bp;
	register int yy_act;

#line 24 "tokenizer.flex"


#line 1146"lex.yy.c"

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 366 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 1871 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;


case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 26 "tokenizer.flex"
/* ignore comments */
	YY_BREAK
case 2:
/* rule 2 can match eol */
YY_RULE_SETUP
#line 28 "tokenizer.flex"
{yyTok = S; return yyTok;}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 30 "tokenizer.flex"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 31 "tokenizer.flex"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 32 "tokenizer.flex"
{yyTok = INCLUDES; return yyTok;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 33 "tokenizer.flex"
{yyTok = DASHMATCH; return yyTok;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 34 "tokenizer.flex"
{yyTok = BEGINSWITH; return yyTok;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 35 "tokenizer.flex"
{yyTok = ENDSWITH; return yyTok;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 36 "tokenizer.flex"
{yyTok = CONTAINS; return yyTok;}
	YY_BREAK
case 10:
/* rule 10 can match eol */
YY_RULE_SETUP
#line 38 "tokenizer.flex"
{yyTok = STRING; return yyTok;}
	YY_BREAK
case 11:
/* rule 11 can match eol */
YY_RULE_SETUP
#line 40 "tokenizer.flex"
{yyTok = IDENT; return yyTok;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 42 "tokenizer.flex"
{yyTok = NTH; return yyTok;}
	YY_BREAK
case 13:
/* rule 13 can match eol */
YY_RULE_SETUP
#line 44 "tokenizer.flex"
{yyTok = HASH; return yyTok;}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 46 "tokenizer.flex"
{yyTok = IMPORT_SYM; return yyTok;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 47 "tokenizer.flex"
{yyTok = PAGE_SYM; return yyTok;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 48 "tokenizer.flex"
{yyTok = MEDIA_SYM; return yyTok;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 49 "tokenizer.flex"
{yyTok = FONT_FACE_SYM; return yyTok;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 50 "tokenizer.flex"
{yyTok = CHARSET_SYM; return yyTok;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 51 "tokenizer.flex"
{yyTok = NAMESPACE_SYM; return yyTok; }
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 52 "tokenizer.flex"
{yyTok = KHTML_RULE_SYM; return yyTok; }
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 53 "tokenizer.flex"
{yyTok = KHTML_DECLS_SYM; return yyTok; }
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 54 "tokenizer.flex"
{yyTok = KHTML_VALUE_SYM; return yyTok; }
	YY_BREAK
case 23:
/* rule 23 can match eol */
YY_RULE_SETUP
#line 56 "tokenizer.flex"
{yyTok = IMPORTANT_SYM; return yyTok;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 58 "tokenizer.flex"
{yyTok = EMS; return yyTok;}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 59 "tokenizer.flex"
{yyTok = QEMS; return yyTok;} /* quirky ems */
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 60 "tokenizer.flex"
{yyTok = EXS; return yyTok;}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 61 "tokenizer.flex"
{yyTok = PXS; return yyTok;}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 62 "tokenizer.flex"
{yyTok = CMS; return yyTok;}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 63 "tokenizer.flex"
{yyTok = MMS; return yyTok;}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 64 "tokenizer.flex"
{yyTok = INS; return yyTok;}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 65 "tokenizer.flex"
{yyTok = PTS; return yyTok;}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 66 "tokenizer.flex"
{yyTok = PCS; return yyTok;}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 67 "tokenizer.flex"
{yyTok = DEGS; return yyTok;}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 68 "tokenizer.flex"
{yyTok = RADS; return yyTok;}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 69 "tokenizer.flex"
{yyTok = GRADS; return yyTok;}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 70 "tokenizer.flex"
{yyTok = MSECS; return yyTok;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 71 "tokenizer.flex"
{yyTok = SECS; return yyTok;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 72 "tokenizer.flex"
{yyTok = HERZ; return yyTok;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 73 "tokenizer.flex"
{yyTok = KHERZ; return yyTok;}
	YY_BREAK
case 40:
/* rule 40 can match eol */
YY_RULE_SETUP
#line 74 "tokenizer.flex"
{yyTok = DIMEN; return yyTok;}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 75 "tokenizer.flex"
{yyTok = PERCENTAGE; return yyTok;}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 76 "tokenizer.flex"
{yyTok = NUMBER; return yyTok;}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 78 "tokenizer.flex"
{yyTok = NOTFUNCTION; return yyTok;}
	YY_BREAK
case 44:
/* rule 44 can match eol */
YY_RULE_SETUP
#line 79 "tokenizer.flex"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 45:
/* rule 45 can match eol */
YY_RULE_SETUP
#line 80 "tokenizer.flex"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 46:
/* rule 46 can match eol */
YY_RULE_SETUP
#line 81 "tokenizer.flex"
{yyTok = FUNCTION; return yyTok;}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 83 "tokenizer.flex"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 84 "tokenizer.flex"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 86 "tokenizer.flex"
{yyTok = *yytext; return yyTok;}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 88 "tokenizer.flex"
ECHO;
	YY_BREAK
#line 1489 "lex.yy.c"
case YY_STATE_EOF(INITIAL):
    	yyterminate();

	case YY_END_OF_BUFFER:
        yy_c_buf_p = yytext;
        yy_act = YY_STATE_EOF(YY_START);
        goto do_action;

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of yylex */
