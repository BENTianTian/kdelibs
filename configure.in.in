# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.
AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

KDE_SET_PREFIX

AC_CANONICAL_SYSTEM
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(kdelibs, 2.0pre) dnl searches for some needed programs

AC_PROG_INSTALL

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_CHECK_COMPILERS
AC_LIBLTDL_CONVENIENCE

AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
KDE_PROG_LIBTOOL

dnl for NLS support. Call them in this order!
dnl WITH_NLS is for the po files, GNU_GETTEXT for the sources
AM_KDE_WITH_NLS
AM_KDE_GNU_GETTEXT

dnl Checks for header files.
KDE_CHECK_STL
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h sys/cdefs.h fnmatch.h sysent.h strings.h sys/stat.h sys/select.h sys/socket.h linux/socket.h socketbits.h sigaction.h paths.h malloc.h monetary.h sys/param.h limits.h sys/mnttab.h mntent.h fstab.h sys/soundcard.h fam.h)

dnl Checks for libraries.
AC_BASE_PATH_KDE([don't test]) dnl kdelibs is a special case
AC_CREATE_KFSSTND(default)
AC_SUBST_KFSSTND
AC_CHECK_LIB(compat, main, [LIBCOMPAT="-lcompat"]) dnl for FreeBSD
AC_CHECK_LIB(util, main, [LIBUTIL="-lutil"]) dnl for FreeBSD

dnl Image libraries
KDE_CREATE_LIBS_ALIASES
KDE_CHECK_KIMGIO

AM_CONDITIONAL(HAVE_LIBJPEG, test -n "$LIBJPEG" )
AM_CONDITIONAL(HAVE_LIBPNG, test -n "$LIBPNG" )
AM_CONDITIONAL(HAVE_LIBTIFF, test -n "$LIBTIFF")

# configure would do this very late. Too late for us!
test "x$prefix" = xNONE && prefix=$ac_default_prefix

AC_DEFINE_UNQUOTED(KDEDIR, "$prefix", [The prefix to use as fallback])

ac_cpp_safe=$ac_cpp
ac_cpp='$CXXCPP $CPPFLAGS $X_INCLUDES'
AC_CHECK_HEADERS(X11/extensions/shape.h)
ac_cpp=$ac_cpp_safe

ac_cpp_safe=$ac_cpp
ac_cpp='$CXXCPP $CPPFLAGS $X_INCLUDES'
AC_CHECK_HEADERS(X11/ICE/ICElib.h)
ac_cpp=$ac_cpp_safe

dnl Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_TIME
AC_C_BIGENDIAN

dnl check if the compiler has bool
AC_CHECK_BOOL
dnl AC_CHECK_GNU_EXTENSIONS

dnl Checks for library functions.
AC_CHECK_FUNCS(socket vsnprintf seteuid setegid random strfmon stpcpy mkstemp setmntent gettimeofday)
AC_FUNC_VFORK
AC_CHECK_USLEEP
AC_CHECK_SETENV
AC_CHECK_GETDOMAINNAME
AC_CHECK_GETHOSTNAME
AC_CHECK_RANDOM
AC_CHECK_S_ISSOCK
AC_CHECK_KSIZE_T

AC_MSG_CHECKING([for mount tab file])
AC_CACHE_VAL(kde_cv_mtab_file,
[
    kde_cv_mtab_file=no

    for ac_file in    \
                      \
        /etc/mtab \
        /etc/mnttab \
     ; \
    do
    if test -r "$ac_file"; then
       kde_cv_mtab_file=$ac_file
       break
    fi
    done
])

AC_MSG_RESULT($kde_cv_mtab_file)
if test "$kde_cv_mtab_file" != "no"; then
    AC_DEFINE_UNQUOTED(MTAB_FILE, "$kde_cv_mtab_file", [Define the file for mount entries])
fi

if test -n "$qt_includes"; then
  QNAMESPACE_H="$qt_includes/qnamespace.h"
fi
AC_SUBST(QNAMESPACE_H)

dnl Perform program name transformation
AC_ARG_PROGRAM

dnl output files
AC_SUBST(x_includes)
AC_SUBST(x_libraries)
AC_SUBST(LIBSOCKET)
AC_SUBST(LIBCOMPAT)
AC_SUBST(LIBUTIL)
AC_SUBST(LIBICE)

LIB_KDECORE='$(top_builddir)/kdecore/libkdecore.la'
AC_SUBST(LIB_KDECORE)
LIB_KDEUI='$(top_builddir)/kdeui/libkdeui.la'
AC_SUBST(LIB_KDEUI)
LIB_KFORMULA='$(top_builddir)/kformula/libkformula.la'
AC_SUBST(LIB_KFORMULA)
LIB_KIO='$(top_builddir)/kio/libkio.la'
AC_SUBST(LIB_KIO)
LIB_KSYCOCA='$(top_builddir)/kio/libksycoca.la'
AC_SUBST(LIB_KSYCOCA)
LIB_KFILE='$(top_builddir)/kfile/libkfile.la'
AC_SUBST(LIB_KFILE)
LIB_KAB='$(top_builddir)/kab/libkab.la'
AC_SUBST(LIB_KAB)
LIB_MEDIATOOL='$(top_builddir)/mediatool/libmediatool.la'
AC_SUBST(LIB_MEDIATOOL)
LIB_KHTML='$(top_builddir)/khtml/libkhtml.la'
AC_SUBST(LIB_KHTML)
LIB_KIMGIO='$(top_builddir)/kimgio/libkimgio.la'
AC_SUBST(LIB_KIMGIO)
LIB_DCOP='$(top_builddir)/dcop/libDCOP.la'
AC_SUBST(LIB_DCOP)

all_includes='-I$(top_srcdir)/qk -I$(top_srcdir)/dcop -I$(top_srcdir)/kdecore -I$(top_srcdir)/kdeui $(QT_INCLUDES) $(X_INCLUDES) $(KDE_INCLUDES) $(USER_INCLUDES)'
AC_SUBST(all_includes)

AC_SUBST(EXTRA_SUBDIRS)

AC_MSG_CHECKING(if malloc debugging is wanted)
AC_ARG_WITH(dmalloc,
[  --with-dmalloc          use dmalloc, as in
			  http://www.dmalloc.com/dmalloc.tar.gz],
[if test "$withval" = yes; then
  AC_MSG_RESULT(yes)
  AC_DEFINE(WITH_DMALLOC,1,
            [Define if using the dmalloc debugging malloc package])
  LIB_DMALLOC="-ldmalloc"
  LDFLAGS="$LDFLAGS -g"
else
  AC_MSG_RESULT(no)
fi], [AC_MSG_RESULT(no)])

AC_SUBST(LIB_DMALLOC)

ICE_SUBDIR=ICE
ICE_RLIB=ICE/libkICE.la
AC_SUBST(ICE_SUBDIR)
AC_SUBST(ICE_RLIB)

DCOPIDL='$(top_builddir)/dcop/dcopidl/dcopidl'
DCOPIDL2CPP='$(top_builddir)/dcop/dcopidl2cpp/dcopidl2cpp'
AC_SUBST(DCOPIDL)
AC_SUBST(DCOPIDL2CPP)

topdir=`cd $srcdir && pwd`
ac_configure_args="$ac_configure_args --with-auxdir=$topdir/admin"
AC_CONFIG_SUBDIRS(libltdl)

CXXFLAGS="$CXXFLAGS $USE_RTTI"

