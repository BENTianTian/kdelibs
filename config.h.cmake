/* config.h. Generated by cmake from config.h.cmake */

/* for the following defines tests have to be written: */

#define HAVE_BOOL 1

#cmakedefine HAVE_CUPS 1
#cmakedefine SVG_SUPPORT 1

#define HAVE_MITSHM 1
#define HAVE_PRELOADED_SYMBOLS 1    /* Define if libtool can extract symbol lists from object files. */
#define HAVE_SGI_STL 1
#undef HAVE_DNOTIFY

#cmakedefine HAVE_DNSSD 1

#cmakedefine HAVE_LIBACL 1
/* Define if system has POSIX ACL support. */
#cmakedefine HAVE_POSIX_ACL 1

#undef HAVE_INOTIFY
#undef HAVE_LUA
#undef HAVE_NON_POSIX_ACL_EXTENSIONS
#undef HAVE_OLD_SSL_API
#undef LTDL_DLOPEN_DEPLIBS  /* not supported by KDE */
#undef HAVE_SHORTSETGROUPS /* if setgroups() takes short *as second arg */
#undef HAVE__USR_SRC_SYS_GNU_I386_ISA_SOUND_AWE_VOICE_H /* Define to 1 if you have the </usr/src/sys/gnu/i386/isa/sound/awe_voice.h>  header file. */
#undef HAVE__USR_SRC_SYS_I386_ISA_SOUND_AWE_VOICE_H     /* Define to 1 if you have the </usr/src/sys/i386/isa/sound/awe_voice.h>  header file. */


/********** processor stuff *************/
/* Define to 1 if the assembler supports 3DNOW instructions. */
#undef HAVE_X86_3DNOW
/* Define to 1 if the assembler supports MMX instructions. */
#undef HAVE_X86_MMX
/* Define to 1 if the assembler supports SSE instructions. */
#undef HAVE_X86_SSE
/* Define to 1 if the assembler supports SSE2 instructions. */
#undef HAVE_X86_SSE2
#undef HAVE_PPC_ALTIVEC        /* Define to 1 if the assembler supports AltiVec instructions. */

/********** structs and their members *********/

#define HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID 1 /* Define to 1 if `sin6_scope_id' is member of `struct sockaddr_in6'. */
#undef  HAVE_STRUCT_SOCKADDR_SA_LEN  /* Define to 1 if `sa_len' is member of `struct sockaddr'. */

/**********  asound stuff, FindASound.cmake has to be written ****/

/* Define to 1 if you have the <alsa/asoundlib.h> header file. */
#cmakedefine HAVE_ALSA_ASOUNDLIB_H 1

/* Define if you have libasound.so.1 (required for ALSA 0.5.x support) */
/* #undef HAVE_LIBASOUND */

/* Define if you have libasound.so.2 (required for ALSA 0.9.x support) */
#define HAVE_LIBASOUND2 1

/* Define if libasound has snd_pcm_resume() */
#define HAVE_SND_PCM_RESUME 1

/* Define to 1 if you have the <sys/asoundlib.h> header file. */
#cmakedefine HAVE_SYS_ASOUNDLIB_H 1

/**** end of asound stuff ****/


#define kde_socklen_t socklen_t

#define QT_DOCDIR ${CONFIG_QT_DOCDIR}

#define KDELIBS_DOXYDIR ${CONFIG_KDELIBS_DOXYDIR}

#define KDELIBSUFF "${KDELIBSUFF}"

#define KDEDIR "${CMAKE_INSTALL_PREFIX}"

#define KDESYSCONFDIR "${CMAKE_INSTALL_PREFIX}/etc"

#define __KDE_BINDIR "${CMAKE_INSTALL_PREFIX}/bin"

#define KDE_COMPILING_OS  "${CMAKE_SYSTEM}"

#define KDE_DISTRIBUTION_TEXT "compiled sources"

#define KDE_COMPILER_VERSION "${CMAKE_C_COMPILER}"

#define __KDE_EXECPREFIX "NONE"

#define DCOP_PATH "${CMAKE_INSTALL_PREFIX}/bin"

#define MAKE_COMMAND "gmake"

/* Version number of package */
#define VERSION "3.2.0"

#define LTDL_OBJDIR "./"

/* from here on everything is tested for correctly (more or less) */

#cmakedefine   HAVE_BZIP2_SUPPORT 1
/* Define if the libbz2 functions need the BZ2_ prefix */
#cmakedefine   NEED_BZ2_PREFIX 1

/* Define if you have libz */
#cmakedefine   HAVE_LIBZ 1

/* Define if you have libpng */
#cmakedefine   HAVE_LIBPNG 1

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine   HAVE_DLFCN_H 1

/* Define to 1 if you have stdio.h */
#cmakedefine   HAVE_STDIO_H 1

/* Define to 1 if you have stdlib.h */
#cmakedefine   HAVE_STDLIB_H 1

/* Define to 1 if you have string.h */
#cmakedefine   HAVE_STRING_H 1

/* Define to 1 if you have strings.h */
#cmakedefine   HAVE_STRINGS_H 1

/* Define to 1 if you have ctype.h */
#cmakedefine   HAVE_CTYPE_H 1

/* Define to 1 if you have malloc.h */
#cmakedefine   HAVE_MALLOC_H 1

/* Define to 1 if you have memory.h */
#cmakedefine   HAVE_MEMORY_H 1

/* Define to 1 if you have dlfcn.h */
#cmakedefine   HAVE_MEMORY_H 1

#cmakedefine   HAVE_FLOAT_H 1

/* define if message translations are enabled */
#cmakedefine ENABLE_NLS 1

/* define if you have aKodelib installed */
#cmakedefine HAVE_AKODE 1

/* Define if you have GSSAPI libraries */
#cmakedefine HAVE_LIBGSSAPI 1
/* Define if you have the MIT Kerberos libraries */
#cmakedefine GSSAPI_MIT 1

#cmakedefine HAVE_EXR 1
#cmakedefine HAVE_FAM 1
#cmakedefine HAVE_JASPER 1
#cmakedefine HAVE_LIBART 1
#cmakedefine HAVE_PCREPOSIX 1
#cmakedefine HAVE_SSL 1
#cmakedefine HAVE_VOLMGT 1

#cmakedefine HAVE_LC_MESSAGES 1

#cmakedefine HAVE_ERRNO_H 1
#cmakedefine HAVE_STDINT_H 1
#cmakedefine HAVE_SYS_STAT_H 1
#cmakedefine HAVE_SYS_TYPES_H 1
#cmakedefine HAVE_SYS_PARAM_H 1
#cmakedefine HAVE_SYS_TIME_H 1
#cmakedefine HAVE_SYS_TIMEB_H 1
#cmakedefine HAVE_SYS_SELECT_H 1
#cmakedefine HAVE_SYS_STROPTS_H 1
#cmakedefine HAVE_SYS_BITYPES_H 1
#cmakedefine HAVE_SYSENT_H 1
#cmakedefine HAVE_SYS_MNTTAB_H 1
#cmakedefine HAVE_SYS_MNTENT_H 1
#cmakedefine HAVE_SYS_MOUNT_H 1
#cmakedefine HAVE_TERMIOS_H 1
#cmakedefine HAVE_TERMIO_H 1

#cmakedefine HAVE_ALLOCA_H 1
#cmakedefine HAVE_CRT_EXTERNS_H 1
#cmakedefine HAVE_CARBON_CARBON_H 1
#cmakedefine HAVE_DIRENT_H 1
#cmakedefine HAVE_DLD_H 1
#cmakedefine HAVE_DL_H 1
#cmakedefine HAVE_FSTAB_H 1
#cmakedefine HAVE_IDNA_H 1
#cmakedefine HAVE_IEEEFP_H 1
#cmakedefine HAVE_INTTYPES_H 1
#cmakedefine HAVE_LIBUTIL_H 1
#cmakedefine HAVE_LIMITS_H 1
#cmakedefine HAVE_LINUX_AWE_VOICE_H 1
#cmakedefine HAVE_LOCALE_H 1
#cmakedefine HAVE_MACHINE_SOUNDCARD_H 1
#cmakedefine HAVE_MNTENT_H 1
#cmakedefine HAVE_NET_IF_H 1
#cmakedefine HAVE_NETINET_IN_H 1
#cmakedefine HAVE_NL_TYPES_H 1
#cmakedefine HAVE_PATHS_H 1
#cmakedefine HAVE_PTHREAD_NP_H 1
#cmakedefine HAVE_PUNYCODE_H 1
#cmakedefine HAVE_PTY_H 1
#cmakedefine HAVE_STRINGPREP_H 1
#cmakedefine HAVE_SYS_BITYPES_H 1
#cmakedefine HAVE_SYS_DIR_H 1
#cmakedefine HAVE_SYS_FILIO_H 1
#cmakedefine HAVE_SYS_MMAN_H 1
#cmakedefine HAVE_SYS_NDIR_H 1
#cmakedefine HAVE_SYS_SOUNDCARD_H 1
#cmakedefine HAVE_SYS_UCRED_H 1
#cmakedefine HAVE_SYS_XATTR_H 1
#cmakedefine HAVE_UNISTD_H 1
#cmakedefine HAVE_UTIL_H 1
#cmakedefine HAVE_VALUES_H 1
#cmakedefine HAVE_ARPA_NAMESER8_COMPAT_H

#cmakedefine HAVE_X11_EXTENSIONS_SHAPE_H 1
#cmakedefine HAVE_X11_EXTENSIONS_XSHM_H 1
#cmakedefine HAVE_X11_ICE_ICELIB_H 1
#cmakedefine HAVE_XTEST 1
#cmakedefine HAVE_XRENDER 1


#cmakedefine   HAVE_BACKTRACE 1
#cmakedefine   HAVE_BCOPY 1
#cmakedefine   HAVE_CRYPT  1
#cmakedefine   HAVE_FADVISE 1
#cmakedefine   HAVE_FREEADDRINFO 1
#cmakedefine   HAVE_FUNC__FINITE 1
#cmakedefine   HAVE_FUNC_FINITE 1
#cmakedefine   HAVE_FUNC_ISINF 1
#cmakedefine   HAVE_FUNC_ISNAN 1
#cmakedefine   HAVE_GAI_STRERROR 1
#cmakedefine   HAVE_GETADDRINFO 1
#cmakedefine   HAVE_GETCWD 1
#cmakedefine   HAVE_GETGROUPS 1
#cmakedefine   HAVE_GETHOSTBYNAME2 1
#cmakedefine   HAVE_GETHOSTBYNAME 1
#cmakedefine   HAVE_GETHOSTBYNAME2_R 1
#cmakedefine   HAVE_GETHOSTBYNAME_R 1
#cmakedefine   HAVE_GETHOSTNAME 1
#cmakedefine   HAVE_GETNAMEINFO 1
#cmakedefine   HAVE_GETMNTINFO 1
#cmakedefine   HAVE_GETPAGESIZE 1
#cmakedefine   HAVE_GETPEEREID 1
#cmakedefine   HAVE_GETPEERNAME 1
#cmakedefine   HAVE_GETPROTOBYNAME_R 1
#cmakedefine   HAVE_GETPT 1
#cmakedefine   HAVE_GETSERVBYNAME_R 1
#cmakedefine   HAVE_GETSERVBYPORT_R 1
#cmakedefine   HAVE_GETSOCKNAME 1
#cmakedefine   HAVE_GETSOCKOPT 1
#cmakedefine   HAVE_GETTIMEOFDAY 1
#cmakedefine   HAVE_GRANTPT 1
#cmakedefine   HAVE_IF_NAMETOINDEX 1
#cmakedefine   HAVE_INDEX 1
#cmakedefine   HAVE_INITGROUPS 1
#cmakedefine   HAVE_INET_PTON 1
#cmakedefine   HAVE_INET_NTOP 1
#cmakedefine   HAVE_MADVISE 1
#cmakedefine   HAVE_MEMCPY 1
#cmakedefine   HAVE_MMAP 1
#cmakedefine   HAVE_MUNMAP 1
#cmakedefine   HAVE_MKSTEMPS 1
#cmakedefine   HAVE_MKSTEMP 1
#cmakedefine   HAVE_MKDTEMP 1
#cmakedefine   HAVE_OPENPTY 1
#cmakedefine   HAVE_POLL 1
#cmakedefine   HAVE_PUTENV 1
#cmakedefine   HAVE_PTSNAME 1
#cmakedefine   HAVE_RANDOM 1
#cmakedefine   HAVE_READDIR_R 1
#cmakedefine   HAVE_RES_INIT 1
#cmakedefine   HAVE_REVOKE 1
#cmakedefine   HAVE_RINDEX 1
#cmakedefine   HAVE_SENDFILE 1
#cmakedefine   HAVE_SETEGID 1
#cmakedefine   HAVE_SETENV 1
#cmakedefine   HAVE_SETEUID 1
#cmakedefine   HAVE_SETFSENT 1
#cmakedefine   HAVE_SETGROUPS 1
#cmakedefine   HAVE_SETLOCALE 1
#cmakedefine   HAVE_SETMNTENT 1
#cmakedefine   HAVE_SETPRIORITY 1
#cmakedefine   HAVE_SHL_LOAD 1
#cmakedefine   HAVE_SNPRINTF 1
#cmakedefine   HAVE_SOCKET 1
#cmakedefine   HAVE_SRANDOM 1
#cmakedefine   HAVE_STPCPY 1
#cmakedefine   HAVE_STRCASECMP 1
#cmakedefine   HAVE_STRCHR 1
#cmakedefine   HAVE_STRCMP 1
#cmakedefine   HAVE_STRFMON 1
#cmakedefine   HAVE_STRLCPY 1
#cmakedefine   HAVE_STRLCAT 1
#cmakedefine   HAVE_STRRCHR 1
#cmakedefine   HAVE_STRTOLL 1
#cmakedefine   HAVE_UNLOCKPT 1
#cmakedefine   HAVE_UNSETENV 1
#cmakedefine   HAVE_USLEEP 1
#cmakedefine   HAVE_UTEMPTER 1
#cmakedefine   HAVE_VSNPRINTF 1
#cmakedefine   HAVE__GETPTY 1
#cmakedefine   HAVE_NSGETENVIRON 1
#cmakedefine   HAVE___ARGZ_COUNT 1
#cmakedefine   HAVE___ARGZ_NEXT  1
#cmakedefine   HAVE___ARGZ_STRINGIFY 1


/* this one seems to be unused:
cmakedefine   HAVE__ICETRANSNOLISTEN
*/


#cmakedefine HAVE_S_ISSOCK 1

#cmakedefine TIME_WITH_SYS_TIME 1

#cmakedefine HAVE_LIBDL 1
#cmakedefine HAVE_DLERROR 1
#cmakedefine HAVE_DLD 1

/********** HAVE_XXX_PROTO *******************/

#cmakedefine HAVE_STRLCAT_PROTO 1
#cmakedefine HAVE_STRLCPY_PROTO 1
#cmakedefine HAVE_RANDOM_PROTO 1
#cmakedefine HAVE_SRANDOM_PROTO 1
#cmakedefine HAVE_SETENV_PROTO 1
#cmakedefine HAVE_UNSETENV_PROTO 1
#cmakedefine HAVE_USLEEP_PROTO 1
#cmakedefine HAVE_RES_INIT_PROTO 1
#cmakedefine HAVE_GETHOSTNAME_PROTO 1
#cmakedefine HAVE_INITGROUPS_PROTO 1
#cmakedefine HAVE_MKSTEMPS_PROTO 1
#cmakedefine HAVE_MKDTEMP_PROTO 1
#cmakedefine HAVE_MKSTEMP_PROTO 1
#cmakedefine HAVE_GETSERVBYNAME_R_PROTO 1

/********* structs ******************/

#cmakedefine HAVE_STRUCT_UCRED 1
#cmakedefine HAVE_STRUCT_ADDRINFO 1
#cmakedefine HAVE_STRUCT_SOCKADDR_IN6 1

/*********************/

#if !defined(HAVE_GETHOSTNAME_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int gethostname (char *, unsigned int);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_INITGROUPS_PROTO)
#include <unistd.h>
#ifdef __cplusplus
extern "C" {
#endif
int initgroups(const char *, gid_t);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_MKDTEMP_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
char *mkdtemp(char *);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_MKSTEMPS_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int mkstemps(char *, int);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_MKSTEMP_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int mkstemp(char *);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_RANDOM_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
long int random(void);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_RES_INIT_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int res_init(void);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_SETENV_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int setenv (const char *, const char *, int);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_SRANDOM_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
void srandom(unsigned int);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_STRLCAT_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
unsigned long strlcat(char*, const char*, unsigned long);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_STRLCPY_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
unsigned long strlcpy(char*, const char*, unsigned long);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_UNSETENV_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int unsetenv (const char *);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_USLEEP_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int usleep (unsigned int);
#ifdef __cplusplus
}
#endif
#endif



#ifndef HAVE_S_ISSOCK
#define HAVE_S_ISSOCK
#define S_ISSOCK(mode) (1==0)
#endif


/*
 * Steven Schultz <sms at to.gd-es.com> tells us :
 * BSD/OS 4.2 doesn't have a prototype for openpty in its system header files
 */
#ifdef __bsdi__
__BEGIN_DECLS
int openpty(int *, int *, char *, struct termios *, struct winsize *);
__END_DECLS
#endif



/*
 * On HP-UX, the declaration of vsnprintf() is needed every time !
 */

#if !defined(HAVE_VSNPRINTF) || defined(hpux)
#if __STDC__
#include <stdarg.h>
#include <stdlib.h>
#else
#include <varargs.h>
#endif
#ifdef __cplusplus
extern "C"
#endif
int vsnprintf(char *str, size_t n, char const *fmt, va_list ap);
#ifdef __cplusplus
extern "C"
#endif
int snprintf(char *str, size_t n, char const *fmt, ...);
#endif

#if defined(HAVE_NSGETENVIRON) && defined(HAVE_CRT_EXTERNS_H)
# include <sys/time.h>
# include <crt_externs.h>
# define environ (*_NSGetEnviron())
#endif

#cmakedefine GETMNTINFO_USES_STATVFS 1
