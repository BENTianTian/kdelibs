/* config.h. Generated by cmake from config.h.cmake */

/* for the following defines tests have to be written: */

#define HAVE_BOOL 1
#define HAVE_CUPS 1
#define HAVE_MITSHM 1
#define HAVE_PRELOADED_SYMBOLS 1    /* Define if libtool can extract symbol lists from object files. */
#define HAVE_SGI_STL 1
#undef HAVE_DNOTIFY 
#undef HAVE_DNSSD
#undef HAVE_INOTIFY
#undef HAVE_LUA
#undef HAVE_NON_POSIX_ACL_EXTENSIONS
#undef HAVE_NSGETENVIRON
#undef HAVE_OLD_SSL_API
#undef LTDL_DLOPEN_DEPLIBS  /* not supported by KDE */
#undef HAVE_SHORTSETGROUPS /* if setgroups() takes short *as second arg */
#undef HAVE__USR_SRC_SYS_GNU_I386_ISA_SOUND_AWE_VOICE_H /* Define to 1 if you have the </usr/src/sys/gnu/i386/isa/sound/awe_voice.h>  header file. */
#undef HAVE__USR_SRC_SYS_I386_ISA_SOUND_AWE_VOICE_H     /* Define to 1 if you have the </usr/src/sys/i386/isa/sound/awe_voice.h>  header file. */


/********** processor stuff *************"
/* Define to 1 if the assembler supports 3DNOW instructions. */
#undef HAVE_X86_3DNOW
/* Define to 1 if the assembler supports MMX instructions. */
#undef HAVE_X86_MMX
/* Define to 1 if the assembler supports SSE instructions. */
#undef HAVE_X86_SSE
/* Define to 1 if the assembler supports SSE2 instructions. */
#undef HAVE_X86_SSE2
#undef HAVE_PPC_ALTIVEC        /* Define to 1 if the assembler supports AltiVec instructions. */

/********** structs and their members *********/

#define HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID 1 /* Define to 1 if `sin6_scope_id' is member of `struct sockaddr_in6'. */
#undef  HAVE_STRUCT_SOCKADDR_SA_LEN  /* Define to 1 if `sa_len' is member of `struct sockaddr'. */

/**********  asound stuff, FindASound.cmake has to be written ****/

/* Define to 1 if you have the <alsa/asoundlib.h> header file. */
#define HAVE_ALSA_ASOUNDLIB_H 1

/* Define if you have libasound.so.1 (required for ALSA 0.5.x support) */
/* #undef HAVE_LIBASOUND */

/* Define if you have libasound.so.2 (required for ALSA 0.9.x support) */
#define HAVE_LIBASOUND2 1

/* Define if libasound has snd_pcm_resume() */
#define HAVE_SND_PCM_RESUME 1

/* Define to 1 if you have the <sys/asoundlib.h> header file. */
#define HAVE_SYS_ASOUNDLIB_H 1

/**** end of asound stuff ****/


#define kde_socklen_t socklen_t

#define QT_DOCDIR ${CONFIG_QT_DOCDIR}

#define KDELIBS_DOXYDIR ${CONFIG_KDELIBS_DOXYDIR}

#define KDELIBSUFF "${KDELIBSUFF}"

#define KDEDIR "${CMAKE_INSTALL_PREFIX}"

#define KDESYSCONFDIR "${CMAKE_INSTALL_PREFIX}/etc"

#define __KDE_BINDIR "${CMAKE_INSTALL_PREFIX}/bin"

#define KDE_COMPILING_OS  "${CMAKE_SYSTEM}"

#define KDE_DISTRIBUTION_TEXT "compiled sources"

#define KDE_COMPILER_VERSION "${CMAKE_C_COMPILER}"

#define __KDE_EXECPREFIX "NONE"

#define DCOP_PATH "${CMAKE_INSTALL_PREFIX}/bin"

#define MAKE_COMMAND "gmake"

/* Version number of package */
#define VERSION "3.2.0"

#define LTDL_OBJDIR "./"

/* from here on everything is tested for correctly (more or less) */

/* Define if you have libz */
#cmakedefine01 HAVE_LIBZ

/* Define if you have libpng */
#cmakedefine01 HAVE_LIBPNG

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine01 HAVE_DLFCN_H

/* Define to 1 if you have stdio.h */
#cmakedefine01 HAVE_STDIO_H

/* Define to 1 if you have stdlib.h */
#cmakedefine01 HAVE_STDLIB_H

/* Define to 1 if you have string.h */
#cmakedefine01 HAVE_STRING_H

/* Define to 1 if you have strings.h */
#cmakedefine01 HAVE_STRINGS_H

/* Define to 1 if you have ctype.h */
#cmakedefine01 HAVE_CTYPE_H

/* Define to 1 if you have malloc.h */
#cmakedefine01 HAVE_MALLOC_H

/* Define to 1 if you have memory.h */
#cmakedefine01 HAVE_MEMORY_H

/* Define to 1 if you have dlfcn.h */
#cmakedefine01 HAVE_MEMORY_H

#cmakedefine01 HAVE_FLOAT_H


#cmakedefine HAVE_EXR
#cmakedefine HAVE_FAM
#cmakedefine HAVE_JASPER
#cmakedefine HAVE_LIBART
#cmakedefine HAVE_PCREPOSIX
#cmakedefine HAVE_SSL
#cmakedefine HAVE_VOLMGT

#cmakedefine HAVE_LC_MESSAGES

#cmakedefine HAVE_STDINT_H
#cmakedefine HAVE_SYS_STAT_H
#cmakedefine HAVE_SYS_TYPES_H
#cmakedefine HAVE_SYS_PARAM_H
#cmakedefine HAVE_SYS_SELECT_H
#cmakedefine HAVE_SYS_STROPTS_H
#cmakedefine HAVE_SYS_BITYPES_H
#cmakedefine HAVE_SYSENT_H
#cmakedefine HAVE_SYS_MNTTAB_H
#cmakedefine HAVE_SYS_MNTENT_H
#cmakedefine HAVE_SYS_MOUNT_H
#cmakedefine HAVE_TERMIOS_H
#cmakedefine HAVE_TERMIO_H

#cmakedefine HAVE_ALLOCA_H
#cmakedefine HAVE_CRT_EXTERNS_H
#cmakedefine HAVE_CARBON_CARBON_H
#cmakedefine HAVE_DIRENT_H
#cmakedefine HAVE_DLD_H
#cmakedefine HAVE_DL_H
#cmakedefine HAVE_FSTAB_H
#cmakedefine HAVE_IDNA_H
#cmakedefine HAVE_IEEEFP_H
#cmakedefine HAVE_INTTYPES_H
#cmakedefine HAVE_LIBUTIL_H
#cmakedefine HAVE_LIMITS_H
#cmakedefine HAVE_LINUX_AWE_VOICE_H
#cmakedefine HAVE_LOCALE_H
#cmakedefine HAVE_MACHINE_SOUNDCARD_H
#cmakedefine HAVE_MNTENT_H
#cmakedefine HAVE_NET_IF_H
#cmakedefine HAVE_NETINET_IN_H
#cmakedefine HAVE_NL_TYPES_H
#cmakedefine HAVE_PATHS_H
#cmakedefine HAVE_PUNYCODE_H
#cmakedefine HAVE_PTY_H
#cmakedefine HAVE_STRINGPREP_H
#cmakedefine HAVE_SYS_BITYPES_H
#cmakedefine HAVE_SYS_DIR_H
#cmakedefine HAVE_SYS_FILIO_H
#cmakedefine HAVE_SYS_MMAN_H
#cmakedefine HAVE_SYS_NDIR_H
#cmakedefine HAVE_SYS_SOUNDCARD_H
#cmakedefine HAVE_SYS_UCRED_H
#cmakedefine HAVE_SYS_XATTR_H)
#cmakedefine HAVE_UNISTD_H
#cmakedefine HAVE_UTIL_H
#cmakedefine HAVE_VALUES_H

#cmakedefine HAVE_X11_EXTENSIONS_SHAPE_H
#cmakedefine HAVE_X11_EXTENSIONS_XSHM_H
#cmakedefine HAVE_X11_ICE_ICELIB_H
#cmakedefine HAVE_XRENDER


#cmakedefine   HAVE_BACKTRACE
#cmakedefine01 HAVE_BCOPY
#cmakedefine   HAVE_CRYPT    
#cmakedefine   HAVE_DECL_GETSERVBYNAME_R
#cmakedefine   HAVE_FADVISE
#cmakedefine   HAVE_FREEADDRINFO
#cmakedefine   HAVE_FUNC__FINITE
#cmakedefine   HAVE_FUNC_FINITE
#cmakedefine   HAVE_FUNC_ISINF
#cmakedefine   HAVE_FUNC_ISNAN
#cmakedefine   HAVE_GAI_STRERROR
#cmakedefine   HAVE_GETADDRINFO
#cmakedefine   HAVE_GETCWD
#cmakedefine   HAVE_GETGROUPS
#cmakedefine   HAVE_GETHOSTBYNAME2
#cmakedefine   HAVE_GETHOSTBYNAME
#cmakedefine   HAVE_GETHOSTBYNAME2_R
#cmakedefine   HAVE_GETHOSTBYNAME_R
#cmakedefine   HAVE_GETHOSTNAME
#cmakedefine   HAVE_GETNAMEINFO
#cmakedefine   HAVE_GETMNTINFO
#cmakedefine   HAVE_GETPAGESIZE
#cmakedefine   HAVE_GETPEEREID
#cmakedefine   HAVE_GETPEERNAME
#cmakedefine   HAVE_GETPROTOBYNAME_R
#cmakedefine   HAVE_GETPT
#cmakedefine   HAVE_GETSERVBYNAME_R
#cmakedefine   HAVE_GETSERVBYPORT_R
#cmakedefine   HAVE_GETSOCKNAME
#cmakedefine   HAVE_GETSOCKOPT
#cmakedefine   HAVE_GETTIMEOFDAY
#cmakedefine   HAVE_GRANTPT
#cmakedefine   HAVE_IF_NAMETOINDEX
#cmakedefine01 HAVE_INDEX
#cmakedefine   HAVE_INITGROUPS
#cmakedefine   HAVE_INET_PTON
#cmakedefine   HAVE_INET_NTOP
#cmakedefine   HAVE_MADVISE
#cmakedefine01 HAVE_MEMCPY
#cmakedefine   HAVE_MMAP
#cmakedefine   HAVE_MUNMAP
#cmakedefine   HAVE_MKSTEMPS
#cmakedefine   HAVE_MKSTEMP
#cmakedefine   HAVE_MKDTEMP
#cmakedefine   HAVE_OPENPTY
#cmakedefine   HAVE_POLL
#cmakedefine   HAVE_PUTENV
#cmakedefine   HAVE_PTSNAME
#cmakedefine   HAVE_RANDOM
#cmakedefine   HAVE_READDIR_R
#cmakedefine   HAVE_RES_INIT
#cmakedefine   HAVE_REVOKE
#cmakedefine01 HAVE_RINDEX
#cmakedefine   HAVE_SENDFILE
#cmakedefine   HAVE_SETEGID
#cmakedefine   HAVE_SETENV
#cmakedefine   HAVE_SETEUID
#cmakedefine   HAVE_SETFSENT
#cmakedefine   HAVE_SETGROUPS
#cmakedefine   HAVE_SETLOCALE
#cmakedefine   HAVE_SETMNTENT
#cmakedefine   HAVE_SETPRIORITY
#cmakedefine01 HAVE_SHL_LOAD
#cmakedefine   HAVE_SNPRINTF
#cmakedefine   HAVE_SOCKET
#cmakedefine   HAVE_SRANDOM
#cmakedefine   HAVE_STPCPY
#cmakedefine   HAVE_STRCASECMP
#cmakedefine01 HAVE_STRCHR
#cmakedefine01 HAVE_STRCMP
#cmakedefine   HAVE_STRFMON
#cmakedefine   HAVE_STRLCPY
#cmakedefine   HAVE_STRLCAT
#cmakedefine01 HAVE_STRRCHR
#cmakedefine   HAVE_STRTOLL
#cmakedefines  HAVE_UNLOCKPT
#cmakedefine   HAVE_UNSETENV
#cmakedefine   HAVE_USLEEP
#cmakedefine   HAVE_UTEMPTER
#cmakedefine   HAVE_VSNPRINTF
#cmakedefine   HAVE__GETPTY
#cmakedefine   HAVE__ICETRANSNOLISTEN
#cmakedefine   HAVE___ARGZ_COUNT
#cmakedefine   HAVE___ARGZ_NEXT 
#cmakedefine   HAVE___ARGZ_STRINGIFY

#cmakedefines  HAVE_S_ISSOCK

#cmakedefine01 TIME_WITH_SYS_TIME

#cmakedefine01 HAVE_LIBDL
#cmakedefine01 HAVE_DLERROR
#cmakedefine01 HAVE_DLD

/********** HAVE_XXX_PROTO *******************/

#cmakedefine HAVE_STRLCAT_PROTO
#cmakedefine HAVE_STRLCPY_PROTO
#cmakedefine HAVE_RANDOM_PROTO
#cmakedefine HAVE_SRANDOM_PROTO
#cmakedefine HAVE_SETENV_PROTO
#cmakedefine HAVE_UNSETENV_PROTO
#cmakedefine HAVE_USLEEP_PROTO
#cmakedefine HAVE_RES_INIT_PROTO
#cmakedefine HAVE_GETHOSTNAME_PROTO
#cmakedefine HAVE_INITGROUPS_PROTO
#cmakedefine HAVE_MKSTEMPS_PROTO
#cmakedefine HAVE_MKDTEMP_PROTO
#cmakedefine HAVE_MKSTEMP_PROTO

/********* structs ******************/

#cmakedefine HAVE_STRUCT_UCRED
#cmakedefine HAVE_STRUCT_ADDRINFO
#cmakedefine HAVE_STRUCT_SOCKADDR_IN6

/*********************/

#if !defined(HAVE_GETHOSTNAME_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int gethostname (char *, unsigned int);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_INITGROUPS_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int initgroups(const char *, gid_t);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_MKDTEMP_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
char *mkdtemp(char *);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_MKSTEMPS_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int mkstemps(char *, int);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_MKSTEMP_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int mkstemp(char *);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_RANDOM_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
long int random(void);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_RES_INIT_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int res_init(void);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_SETENV_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int setenv (const char *, const char *, int);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_SRANDOM_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
void srandom(unsigned int);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_STRLCAT_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
unsigned long strlcat(char*, const char*, unsigned long);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_STRLCPY_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
unsigned long strlcpy(char*, const char*, unsigned long);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_UNSETENV_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
void unsetenv (const char *);
#ifdef __cplusplus
}
#endif
#endif



#if !defined(HAVE_USLEEP_PROTO)
#ifdef __cplusplus
extern "C" {
#endif
int usleep (unsigned int);
#ifdef __cplusplus
}
#endif
#endif



#ifndef HAVE_S_ISSOCK
#define HAVE_S_ISSOCK
#define S_ISSOCK(mode) (1==0)
#endif


/*
 * Steven Schultz <sms at to.gd-es.com> tells us :
 * BSD/OS 4.2 doesn't have a prototype for openpty in its system header files
 */
#ifdef __bsdi__
__BEGIN_DECLS
int openpty(int *, int *, char *, struct termios *, struct winsize *);
__END_DECLS
#endif



/*
 * On HP-UX, the declaration of vsnprintf() is needed every time !
 */

#if !defined(HAVE_VSNPRINTF) || defined(hpux)
#if __STDC__
#include <stdarg.h>
#include <stdlib.h>
#else
#include <varargs.h>
#endif
#ifdef __cplusplus
extern "C"
#endif
int vsnprintf(char *str, size_t n, char const *fmt, va_list ap);
#ifdef __cplusplus
extern "C"
#endif
int snprintf(char *str, size_t n, char const *fmt, ...);
#endif

